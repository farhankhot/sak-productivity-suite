[{"C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\index.js":"1","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\reportWebVitals.js":"2","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\LinkedInCookie.js":"3","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\ProfileSearch.js":"4","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\CheckJobStatus.js":"5","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\DisplaySearchResults.js":"6","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\LinkedinCookie.js":"7","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\AudioRetrieval.js":"8"},{"size":541,"mtime":1678590512783,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1678485642725,"results":"11","hashOfConfig":"10"},{"size":31406,"mtime":1678582987951,"results":"12","hashOfConfig":"10"},{"size":2208,"mtime":1678663672632,"results":"13","hashOfConfig":"10"},{"size":652,"mtime":1678579669417,"results":"14","hashOfConfig":"10"},{"size":7329,"mtime":1678841908211,"results":"15","hashOfConfig":"10"},{"size":1223,"mtime":1678737545921,"results":"16","hashOfConfig":"10"},{"size":2339,"mtime":1678842110117,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16u4jrs",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\index.js",[],[],"C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\LinkedInCookie.js",[],[],"C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\ProfileSearch.js",["44","45"],[],"/*global chrome*/\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {CheckJobStatus} from \"./CheckJobStatus.js\";\r\nimport DisplaySearchResults from \"./DisplaySearchResults.js\";\r\n\r\n// TODO: Loading animation when waiting for a response\r\n\r\nfunction ProfileSearch(props) {\r\n\t\r\n\tconst {cookie} = props;\r\n\tconst [title, setTitle] = useState(\"\");\r\n\tconst [location, setLocation] = useState(\"\");\r\n\tconst [currentCompany, setCurrentCompany] = useState(\"\");\r\n\tconst [mutualConnectionsBoolean, setMutualConnectionsBoolean] = useState(false);\r\n\tconst [jobFinished, setJobFinished] = useState(false);\r\n\tconst [resultArray, setResultArray] = useState([]);\r\n\t\t\r\n\tconst handleSearchRequest = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/receive-link\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tcookie: cookie,\r\n\t\t\t\t\ttitle: title,\r\n\t\t\t\t\tlocation: location,\r\n\t\t\t\t\tcurrentCompany: currentCompany,\r\n\t\t\t\t\tmutualConnections: mutualConnectionsBoolean\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst jobId = data.message;\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId, (resultArray) => {\r\n\t\t\t\tsetResultArray(resultArray);\t\r\n\t\t\t\tsetJobFinished(true);\r\n\t\t\t});\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t{jobFinished===true ? (\r\n\r\n\t\t\t<DisplaySearchResults cookie={cookie} resultArray={resultArray} />\r\n\r\n\t\t) : (\r\n\t\t\t<div>\r\n\t\t\t\t<input type=\"text\" placeholder=\"Enter a title\" value={title} onChange={(e) => setTitle(e.target.value)}  />\r\n\t\t\t\t<input type=\"text\" placeholder=\"Location\" value={location} onChange={(e) => setLocation(e.target.value)} />\r\n\t\t\t\t<input type=\"text\" placeholder=\"Current Company\" value={currentCompany} onChange={(e) => setCurrentCompany(e.target.value)} />\r\n\t\t\t\t\r\n\t\t\t\t<input type=\"checkbox\" value={mutualConnectionsBoolean} onChange={(e) => setMutualConnectionsBoolean(e.target.value)} />\r\n\t\t\t\t<label for=\"mutualConnectionsBoolean\">\r\n\t\t\t\t\tGet Mutual Connections?\r\n\t\t\t\t</label>\r\n\t\t\t\t\r\n\t\t\t\t<button onClick={handleSearchRequest}>\r\n\t\t\t\t\tSearch\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\r\n\t\t</>\r\n\t);\r\n\t\r\n}\r\nexport default ProfileSearch;","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\CheckJobStatus.js",[],[],"C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\DisplaySearchResults.js",["46","47","48","49","50","51"],[],"/*global chrome*/\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {CheckJobStatus} from \"./CheckJobStatus.js\";\r\nimport ProfileSearch from \"./ProfileSearch.js\";\r\n\r\n// TODO: \r\n// Move peopleInterests, companyInterests and activityInterests to 3 separate components\r\n// Move making note to a separate component\r\n\r\n// Next button still clickable at the last page\r\n// When to move to full page?\r\n\r\nfunction DisplaySearchResults(props) {\r\n\t\r\n\tconst {cookie, resultArray} = props;\r\n\t\r\n\tconst [userProfile, setUserProfile] = useState([]);\r\n\tconst [pageArray, setPageArray] = useState([]);\r\n\tconst [pageIndex, setPageIndex] = useState(0);\r\n\t\r\n\tconst [fullName, setFullName] = useState(\"\");\r\n\tconst [latestTitle, setLatestTitle] = useState(\"\");\r\n\tconst [profileId, setProfileId] = useState(\"\");\r\n\tconst [summary, setSummary] = useState(\"\");\r\n\tconst [skills, setSkills] = useState(\"\");\r\n\tconst [publicId, setPublicId] = useState(\"\");\r\n\tconst [profileUrn, setProfileUrn] = useState(\"\");\r\n\t\r\n\tconst [noteTextArea, setNoteTextArea] = useState(\"\"); \r\n\t\r\n\tconst [interests, setInterests] = useState(\"\"); \r\n\t\r\n\tconst [peopleInterestsArray, setPeopleInterestsArray] = useState([]);\t\r\n\tconst [companyInterestsArray, setCompanyInterestsArray] = useState([]);\t\r\n\tconst [activityInterestsArray, setActivityInterestsArray] = useState([]);\r\n\t\r\n\tconst [selectedInterests, setSelectedInterests] = useState(\"\");\r\n\t\r\n\tuseEffect(() => {\r\n\t\t// Divide the array into pages\r\n\t\tconst pageSize = 1;\r\n\t\tconst pageArray = [];\r\n\t\tfor (let i = 0; i < resultArray.length; i += pageSize) {\r\n\t\t\tpageArray.push(resultArray.slice(i, i + pageSize));\r\n\t\t}\r\n\t\tsetPageArray(pageArray);\r\n\t}, [resultArray]);\t\r\n\t\r\n\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tif (pageArray[pageIndex]) {\r\n\t\t\r\n\t\t\tconst userProfile = pageArray[pageIndex][0];\r\n\t\t\tsetUserProfile(userProfile);\r\n\t\t\t\r\n\t\t\tsetFullName(userProfile[\"firstName\"] + \" \" + userProfile[\"lastName\"]);\r\n\t\t\tsetLatestTitle(userProfile[\"headline\"]);\r\n\t\t\tsetProfileId(userProfile[\"profile_id\"]);\r\n\t\t\tsetSummary(userProfile[\"summary\"]);\r\n\t\t\tsetSkills(userProfile[\"skills\"]);\r\n\t\t\tsetPublicId(userProfile[\"public_id\"]);\r\n\t\t\tsetProfileUrn(userProfile[\"profile_urn\"]);\r\n\t\t\t\r\n\t\t\tsetNoteTextArea(\"\");\r\n\t\t\t\r\n\t\t\tsetPeopleInterestsArray([]);\r\n\t\t\tsetCompanyInterestsArray([]);\r\n\t\t\tsetActivityInterestsArray([]);\r\n\t\t\t\r\n\t\t\tsetSelectedInterests(\"\");\r\n\t\t}\r\n\t\t\r\n\t}, [pageIndex, pageArray]);\r\n\r\n\tconst handleNextPage = () => {\r\n\t\tif (pageIndex < pageArray.length - 1) {\r\n\t\t\tsetPageIndex(pageIndex + 1);\r\n\t\t}\r\n\t};\r\n\t\t\r\n\tconst handleGettingPeopleInterests = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-people-interests\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tcookie: cookie,\r\n\t\t\t\t\tprofileUrn: profileUrn\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconsole.log(data);\r\n\t\t\t\r\n\t\t\tconst jobId = data.message;\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId, (peopleInterestsArray) => {\r\n\t\t\t\tsetPeopleInterestsArray(peopleInterestsArray);\t\r\n\t\t\t});\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleGettingCompanyInterests = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-company-interests\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tcookie: cookie,\r\n\t\t\t\t\tprofileUrn: profileUrn,\r\n\t\t\t\t\tpublicId: publicId\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconsole.log(data);\r\n\t\t\t\r\n\t\t\tconst jobId = data.message;\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId, (companyInterestsArray) => {\r\n\t\t\t\tsetCompanyInterestsArray(companyInterestsArray);\t\r\n\t\t\t});\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleGettingActivityInterests = () => {\r\n\t\t// TODO\r\n\t};\r\n\t\r\n\tconst handleInterestsSelection = (event) => {\r\n\t\t\r\n\t\tvar selections = event.target.options;\r\n\t\tconst updatedInterestsArray = [];\r\n\t\tfor (var i = 0; i < selections.length; i++){\r\n\t\t\tif(selections[i].selected){\r\n\t\t\t\tupdatedInterestsArray.push(selections[i].value);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tsetSelectedInterests(updatedInterestsArray);\r\n\t}\r\n\t\r\n\tconst handleMakingConnectNote = async () => {\r\n\t\t\r\n\t\tconst prompt = \"This is the profile of a person: \" + \"\\n\" + fullName \r\n\t\t+ \" This is their summary: \" + summary +\r\n\t\t\" These are their interests: \" + selectedInterests \r\n\t\t+ \" Use the internet to get something useful about the interests and use it in the request. \"\r\n\t\t+ \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\r\n\t\t\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/use-bingai\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tprompt: prompt\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tconst data = await response.json();\r\n\t\t\tsetNoteTextArea(data.message);\t\t\t\r\n\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleSendingConnectNote = async () => {\r\n\t\t\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/send-connect\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tcookie: cookie,\r\n\t\t\t\t\tprofileId: profileId,\r\n\t\t\t\t\ttext: noteTextArea\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconsole.log(\"Successfully sent the connect note to the person\", data.message);\r\n\t\t\t\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleNoteTextAreaChange = (event) => {\r\n\t\tsetNoteTextArea(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>{fullName}</div>\r\n\t\t\t<div>{latestTitle}</div>\r\n\t\t\t<textarea value={noteTextArea} onChange={handleNoteTextAreaChange} placeholder=\"The generated note will appear here\"></textarea>\t\r\n\t\t\t\r\n\t\t\t<div>{interests}</div>\r\n\t\t\t\r\n\t\t\t<button onClick={handleGettingPeopleInterests}>\r\n\t\t\t\tGet people interests\r\n\t\t\t</button>\r\n\t\t\t<button onClick={handleGettingCompanyInterests}>\r\n\t\t\t\tGet company interests\r\n\t\t\t</button>\r\n\t\t\t<button onClick={handleGettingActivityInterests}>\r\n\t\t\t\tGet interests from Linkedin activity\r\n\t\t\t</button>\r\n\t\t\t<button onClick={handleNextPage}>\r\n\t\t\t\tNext\r\n\t\t\t</button>\r\n\t\t\t<button onClick={handleMakingConnectNote}>\r\n\t\t\t\tMake Connect Note\r\n\t\t\t</button>\r\n\t\t\t<button onClick={handleSendingConnectNote}>\r\n\t\t\t\tSend Connect Note\r\n\t\t\t</button>\r\n\t\t\r\n\t\t\t{peopleInterestsArray.length > 0 && (\r\n\t\t\t\r\n\t\t\t\t<select multiple onChange={handleInterestsSelection} >\r\n\t\t\t\t\r\n\t\t\t\t\t{peopleInterestsArray.map( (interest) => (\r\n\t\t\t\t\t\t<option key={interest}>{interest}</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t)}\r\n\r\n\t\t\t{companyInterestsArray.length > 0 && (\r\n\t\t\t\r\n\t\t\t\t<select multiple onChange={handleInterestsSelection} >\r\n\t\t\t\t\r\n\t\t\t\t\t{companyInterestsArray.map( (interest) => (\r\n\t\t\t\t\t\t<option key={interest}>{ interest }</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t)}\r\n\t\t\t\r\n\t\t\t{activityInterestsArray.length > 0 && (\r\n\t\t\t\r\n\t\t\t\t<select multiple onChange={handleInterestsSelection} >\r\n\t\t\t\t\r\n\t\t\t\t\t{activityInterestsArray.map( (interest) => (\r\n\t\t\t\t\t\t<option key={interest}>{ interest }</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t)}\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default DisplaySearchResults;\r\n","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\LinkedinCookie.js",[],[],"C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\AudioRetrieval.js",["52","53"],[],{"ruleId":"54","severity":1,"message":"55","line":1,"column":10,"nodeType":"56","messageId":"57","endLine":1,"endColumn":16},{"ruleId":"54","severity":1,"message":"58","line":2,"column":26,"nodeType":"59","messageId":"57","endLine":2,"endColumn":35},{"ruleId":"54","severity":1,"message":"55","line":1,"column":10,"nodeType":"56","messageId":"57","endLine":1,"endColumn":16},{"ruleId":"54","severity":1,"message":"60","line":4,"column":8,"nodeType":"59","messageId":"57","endLine":4,"endColumn":21},{"ruleId":"54","severity":1,"message":"61","line":17,"column":9,"nodeType":"59","messageId":"57","endLine":17,"endColumn":20},{"ruleId":"54","severity":1,"message":"62","line":25,"column":9,"nodeType":"59","messageId":"57","endLine":25,"endColumn":15},{"ruleId":"54","severity":1,"message":"63","line":31,"column":20,"nodeType":"59","messageId":"57","endLine":31,"endColumn":32},{"ruleId":"64","severity":1,"message":"65","line":156,"column":54,"nodeType":"66","messageId":"67","endLine":156,"endColumn":55},{"ruleId":"54","severity":1,"message":"58","line":2,"column":26,"nodeType":"59","messageId":"57","endLine":2,"endColumn":35},{"ruleId":"64","severity":1,"message":"65","line":44,"column":59,"nodeType":"66","messageId":"67","endLine":44,"endColumn":60},"no-unused-vars","'chrome' is defined but never used.","Program","unusedVar","'useEffect' is defined but never used.","Identifier","'ProfileSearch' is defined but never used.","'userProfile' is assigned a value but never used.","'skills' is assigned a value but never used.","'setInterests' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat"]