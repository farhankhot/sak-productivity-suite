[{"C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\index.js":"1","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\reportWebVitals.js":"2","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\LinkedInCookie.js":"3","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\ProfileSearch.js":"4","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\CheckJobStatus.js":"5","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\DisplaySearchResults.js":"6","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\LinkedinCookie.js":"7","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\AudioRetrieval.js":"8","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\DisplayConvos.js":"9"},{"size":541,"mtime":1678902728806,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1678485642725,"results":"12","hashOfConfig":"11"},{"size":31406,"mtime":1678582987951,"results":"13","hashOfConfig":"11"},{"size":2484,"mtime":1678990814993,"results":"14","hashOfConfig":"11"},{"size":652,"mtime":1678579669417,"results":"15","hashOfConfig":"11"},{"size":7298,"mtime":1678910685870,"results":"16","hashOfConfig":"11"},{"size":1223,"mtime":1678737545921,"results":"17","hashOfConfig":"11"},{"size":2354,"mtime":1678842623967,"results":"18","hashOfConfig":"11"},{"size":7630,"mtime":1678990902636,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16u4jrs",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\index.js",[],[],"C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\LinkedInCookie.js",[],[],"C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\ProfileSearch.js",["49","50","51","52"],[],"C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\CheckJobStatus.js",[],[],"C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\DisplaySearchResults.js",["53","54","55","56","57","58"],[],"/*global chrome*/\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {CheckJobStatus} from \"./CheckJobStatus.js\";\r\nimport ProfileSearch from \"./ProfileSearch.js\";\r\n\r\n// TODO: \r\n// Move peopleInterests, companyInterests and activityInterests to 3 separate components\r\n// Move making note to a separate component\r\n\r\n// Next button still clickable at the last page\r\n\r\nfunction DisplaySearchResults(props) {\r\n\t\r\n\tconst {cookie, resultArray} = props;\r\n\t\r\n\tconst [userProfile, setUserProfile] = useState([]);\r\n\tconst [pageArray, setPageArray] = useState([]);\r\n\tconst [pageIndex, setPageIndex] = useState(0);\r\n\t\r\n\tconst [fullName, setFullName] = useState(\"\");\r\n\tconst [latestTitle, setLatestTitle] = useState(\"\");\r\n\tconst [profileId, setProfileId] = useState(\"\");\r\n\tconst [summary, setSummary] = useState(\"\");\r\n\tconst [skills, setSkills] = useState(\"\");\r\n\tconst [publicId, setPublicId] = useState(\"\");\r\n\tconst [profileUrn, setProfileUrn] = useState(\"\");\r\n\t\r\n\tconst [noteTextArea, setNoteTextArea] = useState(\"\"); \r\n\t\r\n\tconst [interests, setInterests] = useState(\"\"); \r\n\t\r\n\tconst [peopleInterestsArray, setPeopleInterestsArray] = useState([]);\t\r\n\tconst [companyInterestsArray, setCompanyInterestsArray] = useState([]);\t\r\n\tconst [activityInterestsArray, setActivityInterestsArray] = useState([]);\r\n\t\r\n\tconst [selectedInterests, setSelectedInterests] = useState(\"\");\r\n\t\r\n\tuseEffect(() => {\r\n\t\t// Divide the array into pages\r\n\t\tconst pageSize = 1;\r\n\t\tconst pageArray = [];\r\n\t\tfor (let i = 0; i < resultArray.length; i += pageSize) {\r\n\t\t\tpageArray.push(resultArray.slice(i, i + pageSize));\r\n\t\t}\r\n\t\tsetPageArray(pageArray);\r\n\t}, [resultArray]);\t\r\n\t\r\n\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tif (pageArray[pageIndex]) {\r\n\t\t\r\n\t\t\tconst userProfile = pageArray[pageIndex][0];\r\n\t\t\tsetUserProfile(userProfile);\r\n\t\t\t\r\n\t\t\tsetFullName(userProfile[\"firstName\"] + \" \" + userProfile[\"lastName\"]);\r\n\t\t\tsetLatestTitle(userProfile[\"headline\"]);\r\n\t\t\tsetProfileId(userProfile[\"profile_id\"]);\r\n\t\t\tsetSummary(userProfile[\"summary\"]);\r\n\t\t\tsetSkills(userProfile[\"skills\"]);\r\n\t\t\tsetPublicId(userProfile[\"public_id\"]);\r\n\t\t\tsetProfileUrn(userProfile[\"profile_urn\"]);\r\n\t\t\t\r\n\t\t\tsetNoteTextArea(\"\");\r\n\t\t\t\r\n\t\t\tsetPeopleInterestsArray([]);\r\n\t\t\tsetCompanyInterestsArray([]);\r\n\t\t\tsetActivityInterestsArray([]);\r\n\t\t\t\r\n\t\t\tsetSelectedInterests(\"\");\r\n\t\t}\r\n\t\t\r\n\t}, [pageIndex, pageArray]);\r\n\r\n\tconst handleNextPage = () => {\r\n\t\tif (pageIndex < pageArray.length - 1) {\r\n\t\t\tsetPageIndex(pageIndex + 1);\r\n\t\t}\r\n\t};\r\n\t\t\r\n\tconst handleGettingPeopleInterests = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-people-interests\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tcookie: cookie,\r\n\t\t\t\t\tprofileUrn: profileUrn\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconsole.log(data);\r\n\t\t\t\r\n\t\t\tconst jobId = data.message;\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId, (peopleInterestsArray) => {\r\n\t\t\t\tsetPeopleInterestsArray(peopleInterestsArray);\t\r\n\t\t\t});\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleGettingCompanyInterests = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-company-interests\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tcookie: cookie,\r\n\t\t\t\t\tprofileUrn: profileUrn,\r\n\t\t\t\t\tpublicId: publicId\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconsole.log(data);\r\n\t\t\t\r\n\t\t\tconst jobId = data.message;\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId, (companyInterestsArray) => {\r\n\t\t\t\tsetCompanyInterestsArray(companyInterestsArray);\t\r\n\t\t\t});\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleGettingActivityInterests = () => {\r\n\t\t// TODO\r\n\t};\r\n\t\r\n\tconst handleInterestsSelection = (event) => {\r\n\t\t\r\n\t\tvar selections = event.target.options;\r\n\t\tconst updatedInterestsArray = [];\r\n\t\tfor (var i = 0; i < selections.length; i++){\r\n\t\t\tif(selections[i].selected){\r\n\t\t\t\tupdatedInterestsArray.push(selections[i].value);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tsetSelectedInterests(updatedInterestsArray);\r\n\t}\r\n\t\r\n\tconst handleMakingConnectNote = async () => {\r\n\t\t\r\n\t\tconst prompt = \"This is the profile of a person: \" + \"\\n\" + fullName \r\n\t\t+ \" This is their summary: \" + summary +\r\n\t\t\" These are their interests: \" + selectedInterests \r\n\t\t+ \" Use the internet to get something useful about the interests and use it in the request. \"\r\n\t\t+ \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\r\n\t\t\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/use-bingai\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tprompt: prompt\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tconst data = await response.json();\r\n\t\t\tsetNoteTextArea(data.message);\t\t\t\r\n\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleSendingConnectNote = async () => {\r\n\t\t\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/send-connect\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tcookie: cookie,\r\n\t\t\t\t\tprofileId: profileId,\r\n\t\t\t\t\ttext: noteTextArea\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconsole.log(\"Successfully sent the connect note to the person\", data.message);\r\n\t\t\t\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleNoteTextAreaChange = (event) => {\r\n\t\tsetNoteTextArea(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>{fullName}</div>\r\n\t\t\t<div>{latestTitle}</div>\r\n\t\t\t<textarea value={noteTextArea} onChange={handleNoteTextAreaChange} placeholder=\"The generated note will appear here\"></textarea>\t\r\n\t\t\t\r\n\t\t\t<div>{interests}</div>\r\n\t\t\t\r\n\t\t\t<button onClick={handleGettingPeopleInterests}>\r\n\t\t\t\tGet people interests\r\n\t\t\t</button>\r\n\t\t\t<button onClick={handleGettingCompanyInterests}>\r\n\t\t\t\tGet company interests\r\n\t\t\t</button>\r\n\t\t\t<button onClick={handleGettingActivityInterests}>\r\n\t\t\t\tGet interests from Linkedin activity\r\n\t\t\t</button>\r\n\t\t\t<button onClick={handleNextPage}>\r\n\t\t\t\tNext\r\n\t\t\t</button>\r\n\t\t\t<button onClick={handleMakingConnectNote}>\r\n\t\t\t\tMake Connect Note\r\n\t\t\t</button>\r\n\t\t\t<button onClick={handleSendingConnectNote}>\r\n\t\t\t\tSend Connect Note\r\n\t\t\t</button>\r\n\t\t\r\n\t\t\t{peopleInterestsArray.length > 0 && (\r\n\t\t\t\r\n\t\t\t\t<select multiple onChange={handleInterestsSelection} >\r\n\t\t\t\t\r\n\t\t\t\t\t{peopleInterestsArray.map( (interest) => (\r\n\t\t\t\t\t\t<option key={interest}>{interest}</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t)}\r\n\r\n\t\t\t{companyInterestsArray.length > 0 && (\r\n\t\t\t\r\n\t\t\t\t<select multiple onChange={handleInterestsSelection} >\r\n\t\t\t\t\r\n\t\t\t\t\t{companyInterestsArray.map( (interest) => (\r\n\t\t\t\t\t\t<option key={interest}>{ interest }</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t)}\r\n\t\t\t\r\n\t\t\t{activityInterestsArray.length > 0 && (\r\n\t\t\t\r\n\t\t\t\t<select multiple onChange={handleInterestsSelection} >\r\n\t\t\t\t\r\n\t\t\t\t\t{activityInterestsArray.map( (interest) => (\r\n\t\t\t\t\t\t<option key={interest}>{ interest }</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t)}\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default DisplaySearchResults;\r\n","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\LinkedinCookie.js",[],[],"C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\AudioRetrieval.js",["59"],[],"/*global chrome*/\r\nimport React, {useState, useEffect, useRef} from \"react\";\r\n\r\nfunction AudioRetrieval() {\r\n\t\r\n\tconst [transcriptTextArea, setTranscriptTextArea] = useState(\"\");\r\n\tconst transcriptTextAreaRef = useRef(null);\r\n\t\r\n\tconst handleStartCapture = () => {\r\n\t\t\r\n\t\tchrome.tabCapture.capture({audio: true}, function(stream) {\r\n\t\t\t\r\n\t\t\tconst audioContext = new AudioContext();\r\n\r\n\t\t\tconst mediaStreamSource = audioContext.createMediaStreamSource(stream);\r\n\t\t\tmediaStreamSource.connect(audioContext.destination);\r\n\r\n\t\t\t// Set up the speech recognition object\r\n\t\t\tconst SpeechRecognition = window.speechRecognition || window.webkitSpeechRecognition;\r\n\t\t\tconst recognition = new SpeechRecognition();\r\n\t\t\t\r\n\t\t\trecognition.continuous = true;\r\n\t\t\trecognition.interimResults = true;\r\n\t\t\trecognition.lang = 'en-US';\r\n\t\t\trecognition.listening = true;\r\n\t\t\t\r\n\t\t\trecognition.start();\r\n\r\n\t\t\t// Process the speech recognition results\r\n\t\t\trecognition.onresult = function(event) {\r\n\t\t\t\tlet eventText = \"\";\r\n\t\t\t\tfor (let i = 0; i < event.results.length; i++) {\r\n\t\t\t\t\teventText += event.results[i][0].transcript;\r\n\t\t\t\t}\r\n\t\t\t\t// console.log(eventText);\r\n\t\t\t\ttranscriptTextAreaRef.current.value = eventText;\r\n\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t});\r\n\t\t\r\n\t};\r\n\t\r\n\tconst handleSendingToAI = async() => {\r\n\t\tconst prompt = \"This is a question asked by a person: \"\r\n\t\t+ \" Give an answer in bullet points. Try not to be verbose: \" + transcriptTextAreaRef.current.value;\r\n\t\tconsole.log(prompt);\r\n\t\t\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/use-bingai\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tprompt: prompt\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tconst data = await response.json();\t\r\n\t\t\tsetTranscriptTextArea(data.message);\t\t\t\r\n\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\r\n\t};\r\n\t\r\n\t\t\r\n\tconst handleTranscriptTextAreaChange = (event) => {\r\n\t\tsetTranscriptTextArea(event.target.value);\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t<button onClick={handleStartCapture}>\r\n\t\t\tStart audio capture\r\n\t\t</button>\r\n\t\t<button onClick={handleSendingToAI}>\r\n\t\t\tSend to AI\r\n\t\t</button>\r\n\t\t<textarea ref={transcriptTextAreaRef} value={transcriptTextArea} onChange={handleTranscriptTextAreaChange} placeholder=\"The transcript will appear here\"></textarea>\r\n\t\t</>\r\n\t);\r\n\r\n}\r\nexport default AudioRetrieval;","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\DisplayConvos.js",["60","61","62","63","64","65"],[],{"ruleId":"66","severity":1,"message":"67","line":1,"column":10,"nodeType":"68","messageId":"69","endLine":1,"endColumn":16},{"ruleId":"66","severity":1,"message":"70","line":2,"column":26,"nodeType":"71","messageId":"69","endLine":2,"endColumn":35},{"ruleId":"66","severity":1,"message":"72","line":5,"column":8,"nodeType":"71","messageId":"69","endLine":5,"endColumn":21},{"ruleId":"66","severity":1,"message":"73","line":18,"column":9,"nodeType":"71","messageId":"69","endLine":18,"endColumn":27},{"ruleId":"66","severity":1,"message":"67","line":1,"column":10,"nodeType":"68","messageId":"69","endLine":1,"endColumn":16},{"ruleId":"66","severity":1,"message":"74","line":4,"column":8,"nodeType":"71","messageId":"69","endLine":4,"endColumn":21},{"ruleId":"66","severity":1,"message":"75","line":16,"column":9,"nodeType":"71","messageId":"69","endLine":16,"endColumn":20},{"ruleId":"66","severity":1,"message":"76","line":24,"column":9,"nodeType":"71","messageId":"69","endLine":24,"endColumn":15},{"ruleId":"66","severity":1,"message":"77","line":30,"column":20,"nodeType":"71","messageId":"69","endLine":30,"endColumn":32},{"ruleId":"78","severity":1,"message":"79","line":155,"column":54,"nodeType":"80","messageId":"81","endLine":155,"endColumn":55},{"ruleId":"66","severity":1,"message":"70","line":2,"column":26,"nodeType":"71","messageId":"69","endLine":2,"endColumn":35},{"ruleId":"66","severity":1,"message":"67","line":1,"column":10,"nodeType":"68","messageId":"69","endLine":1,"endColumn":16},{"ruleId":"66","severity":1,"message":"82","line":9,"column":9,"nodeType":"71","messageId":"69","endLine":9,"endColumn":23},{"ruleId":"66","severity":1,"message":"83","line":9,"column":25,"nodeType":"71","messageId":"69","endLine":9,"endColumn":42},{"ruleId":"66","severity":1,"message":"84","line":10,"column":9,"nodeType":"71","messageId":"69","endLine":10,"endColumn":21},{"ruleId":"66","severity":1,"message":"85","line":10,"column":23,"nodeType":"71","messageId":"69","endLine":10,"endColumn":38},{"ruleId":"86","severity":1,"message":"87","line":29,"column":5,"nodeType":"88","endLine":29,"endColumn":7,"suggestions":"89"},"no-unused-vars","'chrome' is defined but never used.","Program","unusedVar","'useEffect' is defined but never used.","Identifier","'DisplayConvos' is defined but never used.","'navigateToMessages' is assigned a value but never used.","'ProfileSearch' is defined but never used.","'userProfile' is assigned a value but never used.","'skills' is assigned a value but never used.","'setInterests' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'selectedThread' is assigned a value but never used.","'setSelectedThread' is assigned a value but never used.","'messageArray' is assigned a value but never used.","'setMessageArray' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cookie'. Either include it or remove the dependency array.","ArrayExpression",["90"],{"desc":"91","fix":"92"},"Update the dependencies array to be: [cookie]",{"range":"93","text":"94"},[764,766],"[cookie]"]