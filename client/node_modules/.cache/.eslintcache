[{"C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\index.js":"1","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\reportWebVitals.js":"2","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\LinkedInCookie.js":"3","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\ProfileSearch.js":"4","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\CheckJobStatus.js":"5","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\DisplaySearchResults.js":"6","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\LinkedinCookie.js":"7"},{"size":541,"mtime":1678590512783,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1678485642725,"results":"10","hashOfConfig":"9"},{"size":31406,"mtime":1678582987951,"results":"11","hashOfConfig":"9"},{"size":22720,"mtime":1678658150928,"results":"12","hashOfConfig":"9"},{"size":652,"mtime":1678579669417,"results":"13","hashOfConfig":"9"},{"size":21463,"mtime":1678656601002,"results":"14","hashOfConfig":"9"},{"size":31406,"mtime":1678590178547,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16u4jrs",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\index.js",[],[],"C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\LinkedInCookie.js",[],[],"C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\ProfileSearch.js",["38","39"],[],"C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\CheckJobStatus.js",[],[],"C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\DisplaySearchResults.js",["40","41","42","43","44","45","46"],[],"/*global chrome*/\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {CheckJobStatus} from \"./CheckJobStatus.js\";\r\nimport ProfileSearch from \"./ProfileSearch.js\";\r\n\r\n// TODO: Next button still clickable at the last page\r\n// When to move to full page?\r\n\r\nfunction DisplaySearchResults(props) {\r\n\t\r\n\tconst {cookie, resultArray} = props;\r\n\t\r\n\tconst [userProfile, setUserProfile] = useState([]);\r\n\tconst [pageArray, setPageArray] = useState([]);\r\n\tconst [pageIndex, setPageIndex] = useState(0);\r\n\t\r\n\tconst [fullName, setFullName] = useState(\"\");\r\n\tconst [latestTitle, setLatestTitle] = useState(\"\");\r\n\tconst [profileId, setProfileId] = useState(\"\");\r\n\tconst [summary, setSummary] = useState(\"\");\r\n\tconst [skills, setSkills] = useState(\"\");\r\n\tconst [publicId, setPublicId] = useState(\"\");\r\n\tconst [profileUrn, setProfileUrn] = useState(\"\");\r\n\t\r\n\tconst [noteTextArea, setNoteTextArea] = useState(\"\"); \r\n\t\r\n\tconst [peopleInterestsArray, setPeopleInterestsArray] = useState([]);\t\r\n\tconst [companyInterestsArray, setCompanyInterestsArray] = useState([]);\t\r\n\tconst [activityInterestsArray, setActivityInterestsArray] = useState([]);\r\n\t\r\n\tconst [selectedInterests, setSelectedInterests] = useState(\"\");\r\n\t\r\n\tuseEffect(() => {\r\n\t\t// Divide the array into pages\r\n\t\tconst pageSize = 1;\r\n\t\tconst pageArray = [];\r\n\t\tfor (let i = 0; i < resultArray.length; i += pageSize) {\r\n\t\t\tpageArray.push(resultArray.slice(i, i + pageSize));\r\n\t\t}\r\n\t\tsetPageArray(pageArray);\r\n\t}, [resultArray]);\t\r\n\t\r\n\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tif (pageArray[pageIndex]) {\r\n\t\t\r\n\t\t\tconst userProfile = pageArray[pageIndex][0];\r\n\t\t\tsetUserProfile(userProfile);\r\n\t\t\t\r\n\t\t\tsetFullName(userProfile[\"firstName\"] + \" \" + userProfile[\"lastName\"]);\r\n\t\t\tsetLatestTitle(userProfile[\"headline\"]);\r\n\t\t\tsetProfileId(userProfile[\"profile_id\"]);\r\n\t\t\tsetSummary(userProfile[\"summary\"]);\r\n\t\t\tsetSkills(userProfile[\"skills\"]);\r\n\t\t\tsetPublicId(userProfile[\"public_id\"]);\r\n\t\t\tsetProfileUrn(userProfile[\"profile_urn\"]);\r\n\t\t\t\r\n\t\t\tsetNoteTextArea(\"\");\r\n\t\t\t\r\n\t\t\tsetPeopleInterestsArray([]);\r\n\t\t\tsetCompanyInterestsArray([]);\r\n\t\t\tsetActivityInterestsArray([]);\r\n\t\t}\r\n\t\t\r\n\t}, [pageIndex, pageArray]);\r\n\r\n\tconst handleNextPage = () => {\r\n\t\tif (pageIndex < pageArray.length - 1) {\r\n\t\t\tsetPageIndex(pageIndex + 1);\r\n\t\t}\r\n\t};\r\n\t\t\r\n\tconst handleGettingPeopleInterests = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-people-interests\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tcookie: cookie,\r\n\t\t\t\t\tprofileUrn: profileUrn\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconsole.log(data);\r\n\t\t\t\r\n\t\t\tconst jobId = data.message;\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId, (peopleInterestsArray) => {\r\n\t\t\t\tsetPeopleInterestsArray(peopleInterestsArray);\t\r\n\t\t\t});\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleGettingCompanyInterests = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-company-interests\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tcookie: cookie,\r\n\t\t\t\t\tprofileUrn: profileUrn,\r\n\t\t\t\t\tpublicId: publicId\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconsole.log(data);\r\n\t\t\t\r\n\t\t\tconst jobId = data.message;\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId, (companyInterestsArray) => {\r\n\t\t\t\tsetCompanyInterestsArray(companyInterestsArray);\t\r\n\t\t\t});\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleGettingActivityInterests = () => {\r\n\t\t// TODO\r\n\t};\r\n\t\r\n\tconst handleInterestsSelection = (event) => {\r\n\t\tsetSelectedInterests(event.target.value);\r\n\t}\r\n\t\r\n\tconst handleMakingConnectNote = () => {\r\n\t\t\r\n\t\tconst promptString = \"This is the profile of a person: \" + \"\\n\" + fullName \r\n\t\t+ \" This is their summary: \" + summary +\r\n\t\t\" These are their interests: \" + selectedInterests \r\n\t\t+ \" Use the internet to get something useful about the interests and use it in the request. \"\r\n\t\t+ \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\r\n\t\t\r\n\t\t// console.log(promptString);\t\t\t\r\n\t\t\t\t\t\t\r\n\t\tfetch(\"https://ai-assistant.herokuapp.com/use-bingai\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tprompt: promptString\r\n\t\t\t})\r\n\t\t})\r\n\t\t.then(response => response.json())\r\n\t\t.then(data => {\r\n\t\t\t\r\n\t\t\tconsole.log(data.message);\r\n\t\t\t\r\n\t\t\tsetNoteTextArea(data.message);\t\t\t\r\n\r\n\t\t}).catch(error => console.error(error));\r\n\r\n\t};\r\n\t\r\n\tconst handleSendingConnectNote = () => {\r\n\t\t// TODO\r\n\t};\r\n\t\r\n\tconst handleNoteTextAreaChange = (event) => {\r\n\t\tsetNoteTextArea(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>{fullName}</div>\r\n\t\t\t<div>{latestTitle}</div>\r\n\t\t\t<textarea value={noteTextArea} onChange={handleNoteTextAreaChange} placeholder=\"The generated note will appear here\"></textarea>\t\t\r\n\t\t\t<button onClick={handleGettingPeopleInterests}>\r\n\t\t\t\tGet people interests\r\n\t\t\t</button>\r\n\t\t\t<button onClick={handleGettingCompanyInterests}>\r\n\t\t\t\tGet company interests\r\n\t\t\t</button>\r\n\t\t\t<button onClick={handleGettingActivityInterests}>\r\n\t\t\t\tGet interests from Linkedin activity\r\n\t\t\t</button>\r\n\t\t\t<button onClick={handleNextPage}>\r\n\t\t\t\tNext\r\n\t\t\t</button>\r\n\t\t\t<button onClick={handleMakingConnectNote}>\r\n\t\t\t\tMake Connect Note\r\n\t\t\t</button>\r\n\t\t\t<button onClick={handleSendingConnectNote}>\r\n\t\t\t\tSend Connect Note\r\n\t\t\t</button>\r\n\t\t\r\n\t\t\t{peopleInterestsArray.length > 0 && (\r\n\t\t\t\r\n\t\t\t\t<select multiple onChange={handleInterestsSelection} >\r\n\t\t\t\t\r\n\t\t\t\t\t{peopleInterestsArray.map( (interest) => (\r\n\t\t\t\t\t\t<option key={interest}>{interest}</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t)}\r\n\r\n\t\t\t{companyInterestsArray.length > 0 && (\r\n\t\t\t\r\n\t\t\t\t<select multiple onChange={handleInterestsSelection} >\r\n\t\t\t\t\r\n\t\t\t\t\t{companyInterestsArray.map( (interest) => (\r\n\t\t\t\t\t\t<option key={interest}>{ interest }</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t)}\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default DisplaySearchResults;\r\n\r\n// const resultArray = data.result;\r\n\r\n// // console.log(result);\r\n// // return result;\r\n\r\n// document.getElementById(\"linkedin-search-page\").style.display = \"none\";\r\n// document.getElementById(\"linkedin-page\").style.display = \"block\";\r\n\r\n// var myArray = resultArray;\r\n// // var myArray = data.message;\r\n// var pageSize = 1;\r\n// var currentPage = 0;\r\n\r\n// // Divide the array into pages\r\n// var pages = [];\r\n// for (var i = 0; i < myArray.length; i += pageSize) {\r\n\t// pages.push(myArray.slice(i, i + pageSize));\r\n// }\r\n\r\n// var copyProfile = JSON.parse(JSON.stringify(pages[currentPage]));\r\n// var first_name = copyProfile[0]['firstName'] + \" \" + copyProfile[0]['lastName'];\r\n// var first_title = copyProfile[0]['headline'];\r\n// var profileId = copyProfile[0]['profile_id'];\r\n// var summary = copyProfile[0]['summary'];\r\n// var skills = copyProfile[0]['skills'];\r\n// var public_id = copyProfile[0]['public_id'];\r\n// var profileUrn = copyProfile[0]['profile_urn'];\r\n\r\n// document.getElementById(\"name\").innerHTML = first_name;\r\n// document.getElementById(\"title\").innerHTML = first_title;\r\n\r\n// var nextButton = document.getElementById(\"next-button\");\r\n\r\n// nextButton.addEventListener(\"click\", function() {\r\n\t\r\n\t// // Clear\r\n\t// document.getElementById(\"my-textarea\").value = \"\";\r\n\t// document.getElementById(\"CheckboxContainer\").innerHTML = \"\";\r\n\t// document.getElementById(\"InterestsContainer\").innerHTML = \"\";\r\n\t// document.getElementById(\"PeopleInterestsContainer\").innerHTML = \"\";\r\n\t// document.getElementById(\"CompanyInterestsContainer\").innerHTML = \"\";\t\t\t\t\t\r\n\r\n\t// // Increment the current page index\r\n\t// currentPage = (currentPage + 1) % pages.length;\r\n\t// var copyProfile = JSON.parse(JSON.stringify(pages[currentPage]));\r\n\t// var name = copyProfile[0]['firstName'] + \" \" + copyProfile[0]['lastName'];\r\n\t// var title = copyProfile[0]['headline'];\r\n\t// var profileId = copyProfile[0]['profile_id'];\r\n\t// var summary = copyProfile[0]['summary'];\r\n\t// var skills = copyProfile[0]['skills'];\r\n\t// var publicId = copyProfile[0]['public_id'];\r\n\t// var profileUrn = copyProfile[0]['profile_urn'];\r\n\r\n\t// document.getElementById(\"name\").innerHTML = name;\r\n\t// document.getElementById(\"title\").innerHTML = title;\r\n\t\r\n\t// document.getElementById(\"PeopleInterestsButton\").onclick = function() {\r\n\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-people-interests\", {\r\n\t\t\t// method: \"POST\",\r\n\t\t\t// headers: {\r\n\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t// },\r\n\t\t\t// body: JSON.stringify({\r\n\t\t\t\t// email: email,\r\n\t\t\t\t// password: password,\r\n\t\t\t\t// cookie: cookie,\r\n\t\t\t\t// profileUrn: profileUrn\r\n\t\t\t// })\r\n\t\t// })\r\n\t\t// .then(response => response.json())\r\n\t\t// .then(data => {\r\n\t\t\t\r\n\t\t\t// var jobId = data.message;\r\n\t\t\t\r\n\t\t\t// console.log(\"job of people interests\", jobId);\r\n\t\t\t\r\n\t\t\t// function checkJobStatus(jobId) {\r\n\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\r\n\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t// },\r\n\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t// jobId: jobId\r\n\t\t\t\t\t// })\r\n\t\t\t\t// })\r\n\t\t\t\t\r\n\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// const status = data.status;\r\n\t\t\t\t\t// console.log(status);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// if (status === 'finished') {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t// console.log(\"Successfully gotten people interests\", data.result);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// const words = data.result;\r\n\r\n\t\t\t\t\t\t// // var words = data.message;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// var container = document.getElementById('PeopleInterestsContainer');\r\n\r\n\t\t\t\t\t\t// for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t// var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t// checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t// checkbox.value = words[i][0];\r\n\t\t\t\t\t\t\t// checkbox.id = words[i][1];\r\n\t\t\t\t\t\t\t// var label = document.createElement('label');\r\n\t\t\t\t\t\t\t// label.textContent = words[i][0];\r\n\t\t\t\t\t\t\t// label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t// container.appendChild(label);\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t// // The job is not finished yet, check again in 1 second\r\n\t\t\t\t\t\t// setTimeout(() => checkJobStatus(jobId), 1000);\r\n\t\t\t\t\t// }\r\n\t\t\t\t// });\r\n\t\t\t\t\t\r\n\t\t\t// }\r\n\t\t\t// checkJobStatus(data.message);\r\n\t\t\t\t\r\n\t\t// });\r\n\t// }\r\n\t\r\n\t// document.getElementById(\"CompanyInterestsButton\").onclick = function() {\r\n\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-company-interests\", {\r\n\t\t\t// method: \"POST\",\r\n\t\t\t// headers: {\r\n\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t// },\r\n\t\t\t// body: JSON.stringify({\r\n\t\t\t\t// email: email,\r\n\t\t\t\t// password: password,\r\n\t\t\t\t// cookie: cookie,\r\n\t\t\t\t// profileUrn: profileUrn\r\n\t\t\t// })\r\n\t\t// })\r\n\t\t// .then(response => response.json())\r\n\t\t// .then(data => {\r\n\t\t\t\r\n\t\t\t// var jobId = data.message;\r\n\t\t\t\r\n\t\t\t// console.log(\"job of company interests\", jobId);\r\n\t\t\t\r\n\t\t\t// function checkJobStatus(jobId) {\r\n\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\r\n\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t// },\r\n\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t// jobId: jobId\r\n\t\t\t\t\t// })\r\n\t\t\t\t// })\r\n\t\t\t\t\r\n\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// const status = data.status;\r\n\t\t\t\t\t// console.log(status);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// if (status === 'finished') {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t// console.log(\"Successfully gotten company interests\", data.result);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// const words = data.result;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t// var container = document.getElementById('CompanyInterestsContainer');\r\n\r\n\t\t\t\t\t\t// for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t// var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t// checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t// checkbox.value = words[i][0];\r\n\t\t\t\t\t\t\t// checkbox.id = words[i][1];\r\n\t\t\t\t\t\t\t// var label = document.createElement('label');\r\n\t\t\t\t\t\t\t// label.textContent = words[i][0];\r\n\t\t\t\t\t\t\t// label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t// container.appendChild(label);\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t// // The job is not finished yet, check again in 1 second\r\n\t\t\t\t\t\t// setTimeout(() => checkJobStatus(jobId), 1000);\r\n\t\t\t\t\t// }\r\n\t\t\t\t// });\r\n\t\t\t\t\t\r\n\t\t\t// }\r\n\t\t\t// checkJobStatus(data.message);\r\n\t\t\t\t\r\n\t\t// });\r\n\t\r\n\t// }\r\n\t// document.getElementById(\"GenerateConnectNoteButton\").onclick = function() {\r\n\t\t// var checkboxes = document.querySelectorAll('input[type=checkbox]');\r\n\t\t// var topicList = [];\r\n\t\t// for (var i = 0; i < checkboxes.length; i++) {\r\n\t\t\t// if (checkboxes[i].checked) {\r\n\t\t\t\t// var topic = checkboxes[i].value;\r\n\t\t\t\t// topicList.push(topic);\r\n\t\t\t// }\r\n\t\t// }\r\n\t\t// var topicListString = topicList.toString();\r\n\r\n\t\t// var prompt_string = \"This is the profile of a person: \" + \"\\n\" + name \r\n\t\t// + \" This is their summary: \" + summary +\r\n\t\t// \" These are their interests: \" + topicListString \r\n\t\t// + \" Use the internet to get something useful about the interests and use it in the request. \"\r\n\t\t// + \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\r\n\t\t\r\n\t\t// // console.log(prompt_string);\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/use-bingai\", {\r\n\t\t\t// method: \"POST\",\r\n\t\t\t// headers: {\r\n\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t// },\r\n\t\t\t// body: JSON.stringify({\r\n\t\t\t\t// prompt: prompt_string\r\n\t\t\t// })\r\n\t\t// })\r\n\t\t// .then(response => response.json())\r\n\t\t// .then(data => {\r\n\t\t\t\r\n\t\t\t// console.log(data.message);\r\n\t\t\t\r\n\t\t\t// document.getElementById(\"my-textarea\").value = data.message;\r\n\t\t\t\r\n\r\n\t\t// }).catch(error => console.error(error));\r\n\r\n\t// }\r\n\r\n\t// document.getElementById(\"send-button\").onclick = function() {\r\n\r\n\t\t// // fetch to server.js, with profileId and text\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/send-connect\", {\r\n\t\t\t\t// method: \"POST\",\r\n\t\t\t\t// headers: {\r\n\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t// },\r\n\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t// email: email,\r\n\t\t\t\t\t// password: password,\r\n\t\t\t\t\t// cookie: cookie,\r\n\t\t\t\t\t// profileId: profileId,\r\n\t\t\t\t\t// text: document.getElementById(\"my-textarea\").value\r\n\t\t\t\t// })\r\n\t\t\t// })\r\n\t\t\t// .then(response => response.json())\r\n\t\t\t// .then(data => {\r\n\t\t\t\t// console.log(\"Successfully sent connect to server\", data.message);\r\n\t\t\t// });\r\n\t// }\r\n\t\r\n\t\r\n// });\r\n\r\n// // document.getElementById(\"InterestsButton\").onclick = function() {\r\n\r\n\t\t// // fetch(\"https://ai-assistant.herokuapp.com/get-interests\", {\r\n\t\t\t\t// // method: \"POST\",\r\n\t\t\t\t// // headers: {\r\n\t\t\t\t\t// // \"Content-Type\": \"application/json\"\r\n\t\t\t\t// // },\r\n\t\t\t\t// // body: JSON.stringify({\r\n\t\t\t\t\t// // email: email,\r\n\t\t\t\t\t// // password: password,\r\n\t\t\t\t\t// // publicId: publicId\r\n\t\t\t\t// // })\r\n\t\t\t// // })\r\n\t\t\t// // .then(response => response.json())\r\n\t\t\t// // .then(data => {\r\n\t\t\t\t// // console.log(\"Successfully gotten interests\", data.message);\r\n\r\n\t\t\t\t// // var words = data.message;\r\n\t\t\t\t// // var container = document.getElementById('CheckboxContainer');\r\n\r\n\t\t\t\t// // for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t// // var checkbox = document.createElement('input');\r\n\t\t\t\t\t// // checkbox.type = 'checkbox';\r\n\t\t\t\t\t// // checkbox.value = words[i];\r\n\t\t\t\t\t// // var label = document.createElement('label');\r\n\t\t\t\t\t// // label.textContent = words[i];\r\n\t\t\t\t\t// // label.appendChild(checkbox);\r\n\t\t\t\t\t// // container.appendChild(label);\r\n\t\t\t\t// // }\r\n\t\t\t// // });\r\n\t// // }\r\n\t\r\n\t// document.getElementById(\"PeopleInterestsButton\").onclick = function() {\r\n\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-people-interests\", {\r\n\t\t\t// method: \"POST\",\r\n\t\t\t// headers: {\r\n\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t// },\r\n\t\t\t// body: JSON.stringify({\r\n\t\t\t\t// email: email,\r\n\t\t\t\t// password: password,\r\n\t\t\t\t// cookie: cookie,\r\n\t\t\t\t// profileUrn: profileUrn\r\n\t\t\t// })\r\n\t\t// })\r\n\t\t// .then(response => response.json())\r\n\t\t// .then(data => {\r\n\t\t\t\r\n\t\t\t// var jobId = data.message;\r\n\t\t\t\r\n\t\t\t// console.log(\"job of people interests\", jobId);\r\n\t\t\t\r\n\t\t\t// function checkJobStatus(jobId) {\r\n\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\r\n\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t// },\r\n\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t// jobId: jobId\r\n\t\t\t\t\t// })\r\n\t\t\t\t// })\r\n\t\t\t\t\r\n\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// const status = data.status;\r\n\t\t\t\t\t// console.log(status);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// if (status === 'finished') {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t// console.log(\"Successfully gotten people interests\", data.result);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// const words = data.result;\r\n\r\n\t\t\t\t\t\t// // var words = data.message;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// var container = document.getElementById('PeopleInterestsContainer');\r\n\r\n\t\t\t\t\t\t// for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t// var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t// checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t// checkbox.value = words[i][0];\r\n\t\t\t\t\t\t\t// checkbox.id = words[i][1];\r\n\t\t\t\t\t\t\t// var label = document.createElement('label');\r\n\t\t\t\t\t\t\t// label.textContent = words[i][0];\r\n\t\t\t\t\t\t\t// label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t// container.appendChild(label);\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t// // The job is not finished yet, check again in 1 second\r\n\t\t\t\t\t\t// setTimeout(() => checkJobStatus(jobId), 1000);\r\n\t\t\t\t\t// }\r\n\t\t\t\t// });\r\n\t\t\t\t\t\r\n\t\t\t// }\r\n\t\t\t// checkJobStatus(data.message);\r\n\t\t\t\t\r\n\t\t// });\r\n\t// }\r\n\t\r\n\t// document.getElementById(\"CompanyInterestsButton\").onclick = function() {\r\n\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-company-interests\", {\r\n\t\t\t// method: \"POST\",\r\n\t\t\t// headers: {\r\n\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t// },\r\n\t\t\t// body: JSON.stringify({\r\n\t\t\t\t// email: email,\r\n\t\t\t\t// password: password,\r\n\t\t\t\t// cookie: cookie,\r\n\t\t\t\t// profileUrn: profileUrn\r\n\t\t\t// })\r\n\t\t// })\r\n\t\t// .then(response => response.json())\r\n\t\t// .then(data => {\r\n\t\t\t\r\n\t\t\t// var jobId = data.message;\r\n\t\t\t\r\n\t\t\t// console.log(\"job of company interests\", jobId);\r\n\t\t\t\r\n\t\t\t// function checkJobStatus(jobId) {\r\n\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\r\n\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t// },\r\n\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t// jobId: jobId\r\n\t\t\t\t\t// })\r\n\t\t\t\t// })\r\n\t\t\t\t\r\n\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// const status = data.status;\r\n\t\t\t\t\t// console.log(status);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// if (status === 'finished') {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t// console.log(\"Successfully gotten company interests\", data.result);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// const words = data.result;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t// var container = document.getElementById('CompanyInterestsContainer');\r\n\r\n\t\t\t\t\t\t// for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t// var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t// checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t// checkbox.value = words[i][0];\r\n\t\t\t\t\t\t\t// checkbox.id = words[i][1];\r\n\t\t\t\t\t\t\t// var label = document.createElement('label');\r\n\t\t\t\t\t\t\t// label.textContent = words[i][0];\r\n\t\t\t\t\t\t\t// label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t// container.appendChild(label);\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t// // The job is not finished yet, check again in 1 second\r\n\t\t\t\t\t\t// setTimeout(() => checkJobStatus(jobId), 1000);\r\n\t\t\t\t\t// }\r\n\t\t\t\t// });\r\n\t\t\t\t\t\r\n\t\t\t// }\r\n\t\t\t// checkJobStatus(data.message);\r\n\t\t\t\t\r\n\t\t// });\r\n\t\r\n\t// }\r\n\r\n\t// document.getElementById(\"GenerateConnectNoteButton\").onclick = function() {\r\n\t\t// var checkboxes = document.querySelectorAll('input[type=checkbox]');\r\n\t\t// var topicList = [];\r\n\t\t// for (var i = 0; i < checkboxes.length; i++) {\r\n\t\t\t// if (checkboxes[i].checked) {\r\n\t\t\t\t// var topic = checkboxes[i].value;\r\n\t\t\t\t// topicList.push(topic);\r\n\t\t\t// }\r\n\t\t// }\r\n\t\t// var topicListString = topicList.toString();\r\n\r\n\t\t// var prompt_string = \"This is the profile of a person: \" + \"\\n\" + first_name \r\n\t\t// + \" This is their summary: \" + summary +\r\n\t\t// \" These are their interests: \" + topicListString \r\n\t\t// + \" Use the internet to get something useful about the interests and use it in the request. \"\r\n\t\t// + \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\r\n\t\t\r\n\t\t// // console.log(prompt_string);\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/use-bingai\", {\r\n\t\t\t// method: \"POST\",\r\n\t\t\t// headers: {\r\n\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t// },\r\n\t\t\t// body: JSON.stringify({\r\n\t\t\t\t// prompt: prompt_string\r\n\t\t\t// })\r\n\t\t// })\r\n\t\t// .then(response => response.json())\r\n\t\t// .then(data => {\r\n\t\t\t\r\n\t\t\t// console.log(data.message);\r\n\t\t\t\r\n\t\t\t// document.getElementById(\"my-textarea\").value = data.message;\r\n\t\t\t\r\n\r\n\t\t// }).catch(error => console.error(error));\r\n\r\n\t// }\r\n\r\n\t// document.getElementById(\"send-button\").onclick = function() {\r\n\r\n\t\t// // fetch to server.js, with profileId and text\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/send-connect\", {\r\n\t\t\t\t// method: \"POST\",\r\n\t\t\t\t// headers: {\r\n\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t// },\r\n\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t// email: email,\r\n\t\t\t\t\t// password: password,\r\n\t\t\t\t\t// cookie: cookie,\r\n\t\t\t\t\t// profileId: profileId,\r\n\t\t\t\t\t// text: document.getElementById(\"my-textarea\").value\r\n\t\t\t\t// })\r\n\t\t\t// })\r\n\t\t\t// .then(response => response.json())\r\n\t\t\t// .then(data => {\r\n\t\t\t\t// console.log(\"Successfully sent connect to server\", data.message);\r\n\t\t\t// });\r\n\t// }\r\n","C:\\Users\\farha\\OneDrive\\Desktop\\sak-productivity-suite\\client\\src\\LinkedinCookie.js",[],[],{"ruleId":"47","severity":1,"message":"48","line":1,"column":10,"nodeType":"49","messageId":"50","endLine":1,"endColumn":16},{"ruleId":"47","severity":1,"message":"51","line":2,"column":26,"nodeType":"52","messageId":"50","endLine":2,"endColumn":35},{"ruleId":"47","severity":1,"message":"48","line":1,"column":10,"nodeType":"49","messageId":"50","endLine":1,"endColumn":16},{"ruleId":"47","severity":1,"message":"53","line":4,"column":8,"nodeType":"52","messageId":"50","endLine":4,"endColumn":21},{"ruleId":"47","severity":1,"message":"54","line":13,"column":9,"nodeType":"52","messageId":"50","endLine":13,"endColumn":20},{"ruleId":"47","severity":1,"message":"55","line":19,"column":9,"nodeType":"52","messageId":"50","endLine":19,"endColumn":18},{"ruleId":"47","severity":1,"message":"56","line":21,"column":9,"nodeType":"52","messageId":"50","endLine":21,"endColumn":15},{"ruleId":"47","severity":1,"message":"57","line":29,"column":9,"nodeType":"52","messageId":"50","endLine":29,"endColumn":31},{"ruleId":"58","severity":1,"message":"59","line":139,"column":60,"nodeType":"60","messageId":"61","endLine":139,"endColumn":61},"no-unused-vars","'chrome' is defined but never used.","Program","unusedVar","'useEffect' is defined but never used.","Identifier","'ProfileSearch' is defined but never used.","'userProfile' is assigned a value but never used.","'profileId' is assigned a value but never used.","'skills' is assigned a value but never used.","'activityInterestsArray' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat"]