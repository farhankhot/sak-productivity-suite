{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/farha/OneDrive/Desktop/sak-productivity-suite/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/farha/OneDrive/Desktop/sak-productivity-suite/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/farha/OneDrive/Desktop/sak-productivity-suite/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";/*global chrome*/import React,{useState,useEffect}from\"react\";import{CheckJobStatus}from\"./CheckJobStatus.js\";// TODO: Loading animation when waiting for a response\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ProfileSearch(props){var cookie=props.cookie;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),location=_useState4[0],setLocation=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),currentCompany=_useState6[0],setCurrentCompany=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),mutualConnectionsBoolean=_useState8[0],setMutualConnectionsBoolean=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),jobFinished=_useState10[0],setJobFinished=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),resultArray=_useState12[0],setResultArray=_useState12[1];var handleLinkSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data,jobId;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"https://sak-productivity-suite.herokuapp.com/receive-link\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({cookie:cookie,title:title,location:location,currentCompany:currentCompany,mutualConnections:mutualConnectionsBoolean})});case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;console.log(data);// Change in server.py to data.jobId\njobId=data.message;CheckJobStatus(jobId,function(resultArray){setResultArray(resultArray);setJobFinished(true);});_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 15:case\"end\":return _context.stop();}},_callee,null,[[0,12]]);}));return function handleLinkSubmit(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(_Fragment,{children:jobFinished===true?/*#__PURE__*/_jsx(DisplaySearchResults,{resultArray:resultArray}):/*#__PURE__*/_jsxs(\"div\",{id:\"linkedInSearchPage\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"title\",placeholder:\"Enter a title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"location\",placeholder:\"Location\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"currentCompany\",placeholder:\"Current Company\"}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"mutualConnectionsBoolean\"}),/*#__PURE__*/_jsx(\"label\",{for:\"mutualConnectionsBoolean\",children:\"Get Mutual Connections?\"}),/*#__PURE__*/_jsx(\"button\",{id:\"profileInfoButton\",onClick:handleLinkSubmit,children:\"Get info\"})]})});}export default ProfileSearch;// document.getElementById(\"ProfileInfoButton\").onclick = function() {\n// fetch(\"https://www.linkedin.com/voyager/api/typeahead/hitsV2?keywords=USA&origin=OTHER&q=type&queryContext=List(geoVersion-%3E3,bingGeoSubTypeFilters-%3EMARKET_AREA%7CCOUNTRY_REGION%7CADMIN_DIVISION_1%7CCITY)&type=GEO\", {\n// \"headers\": {\n// \"accept\": \"application/vnd.linkedin.normalized+json+2.1\",\n// \"accept-language\": \"en-US,en;q=0.9,ml;q=0.8\",\n// \"csrf-token\": \"ajax:5885116779205486121\",\n// \"x-restli-protocol-version\": \"2.0.0\"\n// },\n// \"body\": null,\n// \"method\": \"GET\",\n// \"mode\": \"cors\",\n// \"credentials\": \"include\"\n// }).then(r => r.json()).then(console.log)\n// var title = document.getElementById(\"title\").value;\n// var location = document.getElementById(\"Location\").value;\n// var currentCompany = document.getElementById(\"CurrentCompany\").value;\n// var mutualConnectionsBoolean = document.getElementById(\"MutualConnectionsBoolean\").checked;\n// fetch(\"https://ai-assistant.herokuapp.com/receive-link\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// title: title,\n// location: location,\n// currentCompany: currentCompany,\n// mutualConnections: mutualConnectionsBoolean\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// console.log(\"Successfully sent link to server\", data.message);\n// var jobId = data.message;\n// function checkJobStatus(jobId) {\n// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// jobId: jobId\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// const status = data.status;\n// if (status === 'finished') {\n// const resultArray = data.result;\n// // console.log(result);\n// // return result;\n// document.getElementById(\"linkedin-search-page\").style.display = \"none\";\n// document.getElementById(\"linkedin-page\").style.display = \"block\";\n// var myArray = resultArray;\n// // var myArray = data.message;\n// var pageSize = 1;\n// var currentPage = 0;\n// // Divide the array into pages\n// var pages = [];\n// for (var i = 0; i < myArray.length; i += pageSize) {\n// pages.push(myArray.slice(i, i + pageSize));\n// }\n// var copyProfile = JSON.parse(JSON.stringify(pages[currentPage]));\n// var first_name = copyProfile[0]['firstName'] + \" \" + copyProfile[0]['lastName'];\n// var first_title = copyProfile[0]['headline'];\n// var profileId = copyProfile[0]['profile_id'];\n// var summary = copyProfile[0]['summary'];\n// var skills = copyProfile[0]['skills'];\n// var public_id = copyProfile[0]['public_id'];\n// var profileUrn = copyProfile[0]['profile_urn'];\n// document.getElementById(\"name\").innerHTML = first_name;\n// document.getElementById(\"title\").innerHTML = first_title;\n// var nextButton = document.getElementById(\"next-button\");\n// nextButton.addEventListener(\"click\", function() {\n// // Clear\n// document.getElementById(\"my-textarea\").value = \"\";\n// document.getElementById(\"CheckboxContainer\").innerHTML = \"\";\n// document.getElementById(\"InterestsContainer\").innerHTML = \"\";\n// document.getElementById(\"PeopleInterestsContainer\").innerHTML = \"\";\n// document.getElementById(\"CompanyInterestsContainer\").innerHTML = \"\";\t\t\t\t\t\n// // Increment the current page index\n// currentPage = (currentPage + 1) % pages.length;\n// var copyProfile = JSON.parse(JSON.stringify(pages[currentPage]));\n// var name = copyProfile[0]['firstName'] + \" \" + copyProfile[0]['lastName'];\n// var title = copyProfile[0]['headline'];\n// var profileId = copyProfile[0]['profile_id'];\n// var summary = copyProfile[0]['summary'];\n// var skills = copyProfile[0]['skills'];\n// var publicId = copyProfile[0]['public_id'];\n// var profileUrn = copyProfile[0]['profile_urn'];\n// document.getElementById(\"name\").innerHTML = name;\n// document.getElementById(\"title\").innerHTML = title;\n// document.getElementById(\"PeopleInterestsButton\").onclick = function() {\n// fetch(\"https://ai-assistant.herokuapp.com/get-people-interests\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileUrn: profileUrn\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// var jobId = data.message;\n// console.log(\"job of people interests\", jobId);\n// function checkJobStatus(jobId) {\n// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// jobId: jobId\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// const status = data.status;\n// console.log(status);\n// if (status === 'finished') {\n// console.log(\"Successfully gotten people interests\", data.result);\n// const words = data.result;\n// // var words = data.message;\n// var container = document.getElementById('PeopleInterestsContainer');\n// for (var i = 0; i < words.length; i++) {\n// var checkbox = document.createElement('input');\n// checkbox.type = 'checkbox';\n// checkbox.value = words[i][0];\n// checkbox.id = words[i][1];\n// var label = document.createElement('label');\n// label.textContent = words[i][0];\n// label.appendChild(checkbox);\n// container.appendChild(label);\n// }\n// } else {\n// // The job is not finished yet, check again in 1 second\n// setTimeout(() => checkJobStatus(jobId), 1000);\n// }\n// });\n// }\n// checkJobStatus(data.message);\n// });\n// }\n// document.getElementById(\"CompanyInterestsButton\").onclick = function() {\n// fetch(\"https://ai-assistant.herokuapp.com/get-company-interests\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileUrn: profileUrn\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// var jobId = data.message;\n// console.log(\"job of company interests\", jobId);\n// function checkJobStatus(jobId) {\n// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// jobId: jobId\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// const status = data.status;\n// console.log(status);\n// if (status === 'finished') {\n// console.log(\"Successfully gotten company interests\", data.result);\n// const words = data.result;\n// var container = document.getElementById('CompanyInterestsContainer');\n// for (var i = 0; i < words.length; i++) {\n// var checkbox = document.createElement('input');\n// checkbox.type = 'checkbox';\n// checkbox.value = words[i][0];\n// checkbox.id = words[i][1];\n// var label = document.createElement('label');\n// label.textContent = words[i][0];\n// label.appendChild(checkbox);\n// container.appendChild(label);\n// }\n// } else {\n// // The job is not finished yet, check again in 1 second\n// setTimeout(() => checkJobStatus(jobId), 1000);\n// }\n// });\n// }\n// checkJobStatus(data.message);\n// });\n// }\n// document.getElementById(\"GenerateConnectNoteButton\").onclick = function() {\n// var checkboxes = document.querySelectorAll('input[type=checkbox]');\n// var topicList = [];\n// for (var i = 0; i < checkboxes.length; i++) {\n// if (checkboxes[i].checked) {\n// var topic = checkboxes[i].value;\n// topicList.push(topic);\n// }\n// }\n// var topicListString = topicList.toString();\n// var prompt_string = \"This is the profile of a person: \" + \"\\n\" + name \n// + \" This is their summary: \" + summary +\n// \" These are their interests: \" + topicListString \n// + \" Use the internet to get something useful about the interests and use it in the request. \"\n// + \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\n// // console.log(prompt_string);\t\t\t\n// fetch(\"https://ai-assistant.herokuapp.com/use-bingai\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// prompt: prompt_string\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// console.log(data.message);\n// document.getElementById(\"my-textarea\").value = data.message;\n// }).catch(error => console.error(error));\n// }\n// document.getElementById(\"send-button\").onclick = function() {\n// // fetch to server.js, with profileId and text\n// fetch(\"https://ai-assistant.herokuapp.com/send-connect\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileId: profileId,\n// text: document.getElementById(\"my-textarea\").value\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// console.log(\"Successfully sent connect to server\", data.message);\n// });\n// }\n// });\n// // document.getElementById(\"InterestsButton\").onclick = function() {\n// // fetch(\"https://ai-assistant.herokuapp.com/get-interests\", {\n// // method: \"POST\",\n// // headers: {\n// // \"Content-Type\": \"application/json\"\n// // },\n// // body: JSON.stringify({\n// // email: email,\n// // password: password,\n// // publicId: publicId\n// // })\n// // })\n// // .then(response => response.json())\n// // .then(data => {\n// // console.log(\"Successfully gotten interests\", data.message);\n// // var words = data.message;\n// // var container = document.getElementById('CheckboxContainer');\n// // for (var i = 0; i < words.length; i++) {\n// // var checkbox = document.createElement('input');\n// // checkbox.type = 'checkbox';\n// // checkbox.value = words[i];\n// // var label = document.createElement('label');\n// // label.textContent = words[i];\n// // label.appendChild(checkbox);\n// // container.appendChild(label);\n// // }\n// // });\n// // }\n// document.getElementById(\"PeopleInterestsButton\").onclick = function() {\n// fetch(\"https://ai-assistant.herokuapp.com/get-people-interests\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileUrn: profileUrn\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// var jobId = data.message;\n// console.log(\"job of people interests\", jobId);\n// function checkJobStatus(jobId) {\n// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// jobId: jobId\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// const status = data.status;\n// console.log(status);\n// if (status === 'finished') {\n// console.log(\"Successfully gotten people interests\", data.result);\n// const words = data.result;\n// // var words = data.message;\n// var container = document.getElementById('PeopleInterestsContainer');\n// for (var i = 0; i < words.length; i++) {\n// var checkbox = document.createElement('input');\n// checkbox.type = 'checkbox';\n// checkbox.value = words[i][0];\n// checkbox.id = words[i][1];\n// var label = document.createElement('label');\n// label.textContent = words[i][0];\n// label.appendChild(checkbox);\n// container.appendChild(label);\n// }\n// } else {\n// // The job is not finished yet, check again in 1 second\n// setTimeout(() => checkJobStatus(jobId), 1000);\n// }\n// });\n// }\n// checkJobStatus(data.message);\n// });\n// }\n// document.getElementById(\"CompanyInterestsButton\").onclick = function() {\n// fetch(\"https://ai-assistant.herokuapp.com/get-company-interests\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileUrn: profileUrn\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// var jobId = data.message;\n// console.log(\"job of company interests\", jobId);\n// function checkJobStatus(jobId) {\n// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// jobId: jobId\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// const status = data.status;\n// console.log(status);\n// if (status === 'finished') {\n// console.log(\"Successfully gotten company interests\", data.result);\n// const words = data.result;\n// var container = document.getElementById('CompanyInterestsContainer');\n// for (var i = 0; i < words.length; i++) {\n// var checkbox = document.createElement('input');\n// checkbox.type = 'checkbox';\n// checkbox.value = words[i][0];\n// checkbox.id = words[i][1];\n// var label = document.createElement('label');\n// label.textContent = words[i][0];\n// label.appendChild(checkbox);\n// container.appendChild(label);\n// }\n// } else {\n// // The job is not finished yet, check again in 1 second\n// setTimeout(() => checkJobStatus(jobId), 1000);\n// }\n// });\n// }\n// checkJobStatus(data.message);\n// });\n// }\n// document.getElementById(\"GenerateConnectNoteButton\").onclick = function() {\n// var checkboxes = document.querySelectorAll('input[type=checkbox]');\n// var topicList = [];\n// for (var i = 0; i < checkboxes.length; i++) {\n// if (checkboxes[i].checked) {\n// var topic = checkboxes[i].value;\n// topicList.push(topic);\n// }\n// }\n// var topicListString = topicList.toString();\n// var prompt_string = \"This is the profile of a person: \" + \"\\n\" + first_name \n// + \" This is their summary: \" + summary +\n// \" These are their interests: \" + topicListString \n// + \" Use the internet to get something useful about the interests and use it in the request. \"\n// + \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\n// // console.log(prompt_string);\t\t\t\n// fetch(\"https://ai-assistant.herokuapp.com/use-bingai\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// prompt: prompt_string\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// console.log(data.message);\n// document.getElementById(\"my-textarea\").value = data.message;\n// }).catch(error => console.error(error));\n// }\n// document.getElementById(\"send-button\").onclick = function() {\n// // fetch to server.js, with profileId and text\n// fetch(\"https://ai-assistant.herokuapp.com/send-connect\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileId: profileId,\n// text: document.getElementById(\"my-textarea\").value\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// console.log(\"Successfully sent connect to server\", data.message);\n// });\n// }\n// } else {\n// // The job is not finished yet, check again in 1 second\n// setTimeout(() => checkJobStatus(jobId), 1000);\n// }\n// });\n// }\n// // Keep polling until we get a proper answer\n// checkJobStatus(data.message);\t\n// });\t\t\t\t\t\t\t\n// }","map":{"version":3,"names":["React","useState","useEffect","CheckJobStatus","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ProfileSearch","props","cookie","_useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","location","setLocation","_useState5","_useState6","currentCompany","setCurrentCompany","_useState7","_useState8","mutualConnectionsBoolean","setMutualConnectionsBoolean","_useState9","_useState10","jobFinished","setJobFinished","_useState11","_useState12","resultArray","setResultArray","handleLinkSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","jobId","wrap","_callee$","_context","prev","next","fetch","method","headers","body","JSON","stringify","mutualConnections","sent","json","console","log","message","t0","error","stop","apply","arguments","children","DisplaySearchResults","id","type","placeholder","for","onClick"],"sources":["C:/Users/farha/OneDrive/Desktop/sak-productivity-suite/client/src/ProfileSearch.js"],"sourcesContent":["/*global chrome*/\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {CheckJobStatus} from \"./CheckJobStatus.js\";\r\n\r\n// TODO: Loading animation when waiting for a response\r\n\r\nfunction ProfileSearch(props) {\r\n\t\r\n\tconst {cookie} = props;\r\n\tconst [title, setTitle] = useState(\"\");\r\n\tconst [location, setLocation] = useState(\"\");\r\n\tconst [currentCompany, setCurrentCompany] = useState(\"\");\r\n\tconst [mutualConnectionsBoolean, setMutualConnectionsBoolean] = useState(false);\r\n\tconst [jobFinished, setJobFinished] = useState(false);\r\n\tconst [resultArray, setResultArray] = useState([]);\r\n\t\t\r\n\tconst handleLinkSubmit = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/receive-link\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tcookie: cookie,\r\n\t\t\t\t\ttitle: title,\r\n\t\t\t\t\tlocation: location,\r\n\t\t\t\t\tcurrentCompany: currentCompany,\r\n\t\t\t\t\tmutualConnections: mutualConnectionsBoolean\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconsole.log(data);\r\n\t\t\t\r\n\t\t\t// Change in server.py to data.jobId\r\n\t\t\tconst jobId = data.message;\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId, (resultArray) => {\r\n\t\t\t\tsetResultArray(resultArray);\t\r\n\t\t\t\tsetJobFinished(true);\r\n\t\t\t});\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t{jobFinished === true ? (\r\n\r\n\t\t\t<DisplaySearchResults resultArray={resultArray} />\r\n\r\n\t\t) : (\r\n\t\t\t<div id=\"linkedInSearchPage\">\r\n\t\t\t\t<input type=\"text\" id=\"title\" placeholder=\"Enter a title\" />\r\n\t\t\t\t<input type=\"text\" id=\"location\" placeholder=\"Location\" />\r\n\t\t\t\t<input type=\"text\" id=\"currentCompany\" placeholder=\"Current Company\" />\r\n\t\t\t\t<input type=\"checkbox\" id=\"mutualConnectionsBoolean\" />\r\n\t\t\t\t<label for=\"mutualConnectionsBoolean\">\r\n\t\t\t\t\tGet Mutual Connections?\r\n\t\t\t\t</label>\r\n\t\t\t\t<button id=\"profileInfoButton\" onClick={handleLinkSubmit}>\r\n\t\t\t\t\tGet info\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\r\n\t\t</>\r\n\t);\r\n\t\r\n}\r\nexport default ProfileSearch;\r\n\r\n// document.getElementById(\"ProfileInfoButton\").onclick = function() {\r\n\r\n\t// fetch(\"https://www.linkedin.com/voyager/api/typeahead/hitsV2?keywords=USA&origin=OTHER&q=type&queryContext=List(geoVersion-%3E3,bingGeoSubTypeFilters-%3EMARKET_AREA%7CCOUNTRY_REGION%7CADMIN_DIVISION_1%7CCITY)&type=GEO\", {\r\n\t\t// \"headers\": {\r\n\t\t\t// \"accept\": \"application/vnd.linkedin.normalized+json+2.1\",\r\n\t\t\t// \"accept-language\": \"en-US,en;q=0.9,ml;q=0.8\",\r\n\t\t\t// \"csrf-token\": \"ajax:5885116779205486121\",\r\n\t\t\t// \"x-restli-protocol-version\": \"2.0.0\"\r\n\t\t// },\r\n\t\t// \"body\": null,\r\n\t\t// \"method\": \"GET\",\r\n\t\t// \"mode\": \"cors\",\r\n\t\t// \"credentials\": \"include\"\r\n\t// }).then(r => r.json()).then(console.log)\r\n\r\n\t// var title = document.getElementById(\"title\").value;\r\n\t// var location = document.getElementById(\"Location\").value;\r\n\t// var currentCompany = document.getElementById(\"CurrentCompany\").value;\r\n\t// var mutualConnectionsBoolean = document.getElementById(\"MutualConnectionsBoolean\").checked;\r\n\r\n\t// fetch(\"https://ai-assistant.herokuapp.com/receive-link\", {\r\n\t\t\t// method: \"POST\",\r\n\t\t\t// headers: {\r\n\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t// },\r\n\t\t\t// body: JSON.stringify({\r\n\t\t\t\t// email: email,\r\n\t\t\t\t// password: password,\r\n\t\t\t\t// cookie: cookie,\r\n\t\t\t\t// title: title,\r\n\t\t\t\t// location: location,\r\n\t\t\t\t// currentCompany: currentCompany,\r\n\t\t\t\t// mutualConnections: mutualConnectionsBoolean\r\n\t\t\t// })\r\n\t\t// })\r\n\t\t// .then(response => response.json())\r\n\t\t// .then(data => {\r\n\r\n\t\t\t// console.log(\"Successfully sent link to server\", data.message);\r\n\r\n\t\t\t// var jobId = data.message;\r\n\t\t\t// function checkJobStatus(jobId) {\r\n\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\r\n\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t// },\r\n\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t// jobId: jobId\r\n\t\t\t\t\t// })\r\n\t\t\t\t// })\r\n\t\t\t\t\r\n\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// const status = data.status;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// if (status === 'finished') {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// const resultArray = data.result;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// // console.log(result);\r\n\t\t\t\t\t\t// // return result;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// document.getElementById(\"linkedin-search-page\").style.display = \"none\";\r\n\t\t\t\t\t\t// document.getElementById(\"linkedin-page\").style.display = \"block\";\r\n\r\n\t\t\t\t\t\t// var myArray = resultArray;\r\n\t\t\t\t\t\t// // var myArray = data.message;\r\n\t\t\t\t\t\t// var pageSize = 1;\r\n\t\t\t\t\t\t// var currentPage = 0;\r\n\r\n\t\t\t\t\t\t// // Divide the array into pages\r\n\t\t\t\t\t\t// var pages = [];\r\n\t\t\t\t\t\t// for (var i = 0; i < myArray.length; i += pageSize) {\r\n\t\t\t\t\t\t\t// pages.push(myArray.slice(i, i + pageSize));\r\n\t\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t\t// var copyProfile = JSON.parse(JSON.stringify(pages[currentPage]));\r\n\t\t\t\t\t\t// var first_name = copyProfile[0]['firstName'] + \" \" + copyProfile[0]['lastName'];\r\n\t\t\t\t\t\t// var first_title = copyProfile[0]['headline'];\r\n\t\t\t\t\t\t// var profileId = copyProfile[0]['profile_id'];\r\n\t\t\t\t\t\t// var summary = copyProfile[0]['summary'];\r\n\t\t\t\t\t\t// var skills = copyProfile[0]['skills'];\r\n\t\t\t\t\t\t// var public_id = copyProfile[0]['public_id'];\r\n\t\t\t\t\t\t// var profileUrn = copyProfile[0]['profile_urn'];\r\n\r\n\t\t\t\t\t\t// document.getElementById(\"name\").innerHTML = first_name;\r\n\t\t\t\t\t\t// document.getElementById(\"title\").innerHTML = first_title;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// var nextButton = document.getElementById(\"next-button\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// nextButton.addEventListener(\"click\", function() {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// // Clear\r\n\t\t\t\t\t\t\t// document.getElementById(\"my-textarea\").value = \"\";\r\n\t\t\t\t\t\t\t// document.getElementById(\"CheckboxContainer\").innerHTML = \"\";\r\n\t\t\t\t\t\t\t// document.getElementById(\"InterestsContainer\").innerHTML = \"\";\r\n\t\t\t\t\t\t\t// document.getElementById(\"PeopleInterestsContainer\").innerHTML = \"\";\r\n\t\t\t\t\t\t\t// document.getElementById(\"CompanyInterestsContainer\").innerHTML = \"\";\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t// // Increment the current page index\r\n\t\t\t\t\t\t\t// currentPage = (currentPage + 1) % pages.length;\r\n\t\t\t\t\t\t\t// var copyProfile = JSON.parse(JSON.stringify(pages[currentPage]));\r\n\t\t\t\t\t\t\t// var name = copyProfile[0]['firstName'] + \" \" + copyProfile[0]['lastName'];\r\n\t\t\t\t\t\t\t// var title = copyProfile[0]['headline'];\r\n\t\t\t\t\t\t\t// var profileId = copyProfile[0]['profile_id'];\r\n\t\t\t\t\t\t\t// var summary = copyProfile[0]['summary'];\r\n\t\t\t\t\t\t\t// var skills = copyProfile[0]['skills'];\r\n\t\t\t\t\t\t\t// var publicId = copyProfile[0]['public_id'];\r\n\t\t\t\t\t\t\t// var profileUrn = copyProfile[0]['profile_urn'];\r\n\r\n\t\t\t\t\t\t\t// document.getElementById(\"name\").innerHTML = name;\r\n\t\t\t\t\t\t\t// document.getElementById(\"title\").innerHTML = title;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// document.getElementById(\"PeopleInterestsButton\").onclick = function() {\r\n\r\n\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-people-interests\", {\r\n\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t// email: email,\r\n\t\t\t\t\t\t\t\t\t\t// password: password,\r\n\t\t\t\t\t\t\t\t\t\t// cookie: cookie,\r\n\t\t\t\t\t\t\t\t\t\t// profileUrn: profileUrn\r\n\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// var jobId = data.message;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// console.log(\"job of people interests\", jobId);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// function checkJobStatus(jobId) {\r\n\t\t\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\r\n\t\t\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t\t// jobId: jobId\r\n\t\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t// const status = data.status;\r\n\t\t\t\t\t\t\t\t\t\t\t// console.log(status);\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t// if (status === 'finished') {\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// console.log(\"Successfully gotten people interests\", data.result);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// const words = data.result;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t// // var words = data.message;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// var container = document.getElementById('PeopleInterestsContainer');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t// for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.value = words[i][0];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.id = words[i][1];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// var label = document.createElement('label');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// label.textContent = words[i][0];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// container.appendChild(label);\r\n\t\t\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// // The job is not finished yet, check again in 1 second\r\n\t\t\t\t\t\t\t\t\t\t\t\t// setTimeout(() => checkJobStatus(jobId), 1000);\r\n\t\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t// checkJobStatus(data.message);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// document.getElementById(\"CompanyInterestsButton\").onclick = function() {\r\n\r\n\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-company-interests\", {\r\n\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t// email: email,\r\n\t\t\t\t\t\t\t\t\t\t// password: password,\r\n\t\t\t\t\t\t\t\t\t\t// cookie: cookie,\r\n\t\t\t\t\t\t\t\t\t\t// profileUrn: profileUrn\r\n\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// var jobId = data.message;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// console.log(\"job of company interests\", jobId);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// function checkJobStatus(jobId) {\r\n\t\t\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\r\n\t\t\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t\t// jobId: jobId\r\n\t\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t// const status = data.status;\r\n\t\t\t\t\t\t\t\t\t\t\t// console.log(status);\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t// if (status === 'finished') {\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// console.log(\"Successfully gotten company interests\", data.result);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// const words = data.result;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// var container = document.getElementById('CompanyInterestsContainer');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t// for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.value = words[i][0];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.id = words[i][1];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// var label = document.createElement('label');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// label.textContent = words[i][0];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// container.appendChild(label);\r\n\t\t\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// // The job is not finished yet, check again in 1 second\r\n\t\t\t\t\t\t\t\t\t\t\t\t// setTimeout(() => checkJobStatus(jobId), 1000);\r\n\t\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t// checkJobStatus(data.message);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t// document.getElementById(\"GenerateConnectNoteButton\").onclick = function() {\r\n\t\t\t\t\t\t\t\t// var checkboxes = document.querySelectorAll('input[type=checkbox]');\r\n\t\t\t\t\t\t\t\t// var topicList = [];\r\n\t\t\t\t\t\t\t\t// for (var i = 0; i < checkboxes.length; i++) {\r\n\t\t\t\t\t\t\t\t\t// if (checkboxes[i].checked) {\r\n\t\t\t\t\t\t\t\t\t\t// var topic = checkboxes[i].value;\r\n\t\t\t\t\t\t\t\t\t\t// topicList.push(topic);\r\n\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t// var topicListString = topicList.toString();\r\n\r\n\t\t\t\t\t\t\t\t// var prompt_string = \"This is the profile of a person: \" + \"\\n\" + name \r\n\t\t\t\t\t\t\t\t// + \" This is their summary: \" + summary +\r\n\t\t\t\t\t\t\t\t// \" These are their interests: \" + topicListString \r\n\t\t\t\t\t\t\t\t// + \" Use the internet to get something useful about the interests and use it in the request. \"\r\n\t\t\t\t\t\t\t\t// + \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// // console.log(prompt_string);\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/use-bingai\", {\r\n\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t// prompt: prompt_string\r\n\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// console.log(data.message);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// document.getElementById(\"my-textarea\").value = data.message;\r\n\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t// }).catch(error => console.error(error));\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t\t\t// document.getElementById(\"send-button\").onclick = function() {\r\n\r\n\t\t\t\t\t\t\t\t// // fetch to server.js, with profileId and text\r\n\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/send-connect\", {\r\n\t\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t// email: email,\r\n\t\t\t\t\t\t\t\t\t\t\t// password: password,\r\n\t\t\t\t\t\t\t\t\t\t\t// cookie: cookie,\r\n\t\t\t\t\t\t\t\t\t\t\t// profileId: profileId,\r\n\t\t\t\t\t\t\t\t\t\t\t// text: document.getElementById(\"my-textarea\").value\r\n\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t// console.log(\"Successfully sent connect to server\", data.message);\r\n\t\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t// });\r\n\r\n\t\t\t\t\t\t// // document.getElementById(\"InterestsButton\").onclick = function() {\r\n\r\n\t\t\t\t\t\t\t\t// // fetch(\"https://ai-assistant.herokuapp.com/get-interests\", {\r\n\t\t\t\t\t\t\t\t\t\t// // method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\t// // headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t// // \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t\t// // },\r\n\t\t\t\t\t\t\t\t\t\t// // body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t// // email: email,\r\n\t\t\t\t\t\t\t\t\t\t\t// // password: password,\r\n\t\t\t\t\t\t\t\t\t\t\t// // publicId: publicId\r\n\t\t\t\t\t\t\t\t\t\t// // })\r\n\t\t\t\t\t\t\t\t\t// // })\r\n\t\t\t\t\t\t\t\t\t// // .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t// // .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t// // console.log(\"Successfully gotten interests\", data.message);\r\n\r\n\t\t\t\t\t\t\t\t\t\t// // var words = data.message;\r\n\t\t\t\t\t\t\t\t\t\t// // var container = document.getElementById('CheckboxContainer');\r\n\r\n\t\t\t\t\t\t\t\t\t\t// // for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// // var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t\t\t\t\t// // checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t\t\t\t\t// // checkbox.value = words[i];\r\n\t\t\t\t\t\t\t\t\t\t\t// // var label = document.createElement('label');\r\n\t\t\t\t\t\t\t\t\t\t\t// // label.textContent = words[i];\r\n\t\t\t\t\t\t\t\t\t\t\t// // label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t\t\t\t\t// // container.appendChild(label);\r\n\t\t\t\t\t\t\t\t\t\t// // }\r\n\t\t\t\t\t\t\t\t\t// // });\r\n\t\t\t\t\t\t\t// // }\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// document.getElementById(\"PeopleInterestsButton\").onclick = function() {\r\n\r\n\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-people-interests\", {\r\n\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t// email: email,\r\n\t\t\t\t\t\t\t\t\t\t// password: password,\r\n\t\t\t\t\t\t\t\t\t\t// cookie: cookie,\r\n\t\t\t\t\t\t\t\t\t\t// profileUrn: profileUrn\r\n\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// var jobId = data.message;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// console.log(\"job of people interests\", jobId);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// function checkJobStatus(jobId) {\r\n\t\t\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\r\n\t\t\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t\t// jobId: jobId\r\n\t\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t// const status = data.status;\r\n\t\t\t\t\t\t\t\t\t\t\t// console.log(status);\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t// if (status === 'finished') {\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// console.log(\"Successfully gotten people interests\", data.result);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// const words = data.result;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t// // var words = data.message;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// var container = document.getElementById('PeopleInterestsContainer');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t// for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.value = words[i][0];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.id = words[i][1];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// var label = document.createElement('label');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// label.textContent = words[i][0];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// container.appendChild(label);\r\n\t\t\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// // The job is not finished yet, check again in 1 second\r\n\t\t\t\t\t\t\t\t\t\t\t\t// setTimeout(() => checkJobStatus(jobId), 1000);\r\n\t\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t// checkJobStatus(data.message);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// document.getElementById(\"CompanyInterestsButton\").onclick = function() {\r\n\r\n\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-company-interests\", {\r\n\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t// email: email,\r\n\t\t\t\t\t\t\t\t\t\t// password: password,\r\n\t\t\t\t\t\t\t\t\t\t// cookie: cookie,\r\n\t\t\t\t\t\t\t\t\t\t// profileUrn: profileUrn\r\n\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// var jobId = data.message;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// console.log(\"job of company interests\", jobId);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// function checkJobStatus(jobId) {\r\n\t\t\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\r\n\t\t\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t\t// jobId: jobId\r\n\t\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t// const status = data.status;\r\n\t\t\t\t\t\t\t\t\t\t\t// console.log(status);\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t// if (status === 'finished') {\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// console.log(\"Successfully gotten company interests\", data.result);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// const words = data.result;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// var container = document.getElementById('CompanyInterestsContainer');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t// for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.value = words[i][0];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.id = words[i][1];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// var label = document.createElement('label');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// label.textContent = words[i][0];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// container.appendChild(label);\r\n\t\t\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// // The job is not finished yet, check again in 1 second\r\n\t\t\t\t\t\t\t\t\t\t\t\t// setTimeout(() => checkJobStatus(jobId), 1000);\r\n\t\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t// checkJobStatus(data.message);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t\t\t// document.getElementById(\"GenerateConnectNoteButton\").onclick = function() {\r\n\t\t\t\t\t\t\t\t// var checkboxes = document.querySelectorAll('input[type=checkbox]');\r\n\t\t\t\t\t\t\t\t// var topicList = [];\r\n\t\t\t\t\t\t\t\t// for (var i = 0; i < checkboxes.length; i++) {\r\n\t\t\t\t\t\t\t\t\t// if (checkboxes[i].checked) {\r\n\t\t\t\t\t\t\t\t\t\t// var topic = checkboxes[i].value;\r\n\t\t\t\t\t\t\t\t\t\t// topicList.push(topic);\r\n\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t// var topicListString = topicList.toString();\r\n\r\n\t\t\t\t\t\t\t\t// var prompt_string = \"This is the profile of a person: \" + \"\\n\" + first_name \r\n\t\t\t\t\t\t\t\t// + \" This is their summary: \" + summary +\r\n\t\t\t\t\t\t\t\t// \" These are their interests: \" + topicListString \r\n\t\t\t\t\t\t\t\t// + \" Use the internet to get something useful about the interests and use it in the request. \"\r\n\t\t\t\t\t\t\t\t// + \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// // console.log(prompt_string);\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/use-bingai\", {\r\n\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t// prompt: prompt_string\r\n\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// console.log(data.message);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// document.getElementById(\"my-textarea\").value = data.message;\r\n\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t// }).catch(error => console.error(error));\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t\t\t// document.getElementById(\"send-button\").onclick = function() {\r\n\r\n\t\t\t\t\t\t\t\t// // fetch to server.js, with profileId and text\r\n\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/send-connect\", {\r\n\t\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t// email: email,\r\n\t\t\t\t\t\t\t\t\t\t\t// password: password,\r\n\t\t\t\t\t\t\t\t\t\t\t// cookie: cookie,\r\n\t\t\t\t\t\t\t\t\t\t\t// profileId: profileId,\r\n\t\t\t\t\t\t\t\t\t\t\t// text: document.getElementById(\"my-textarea\").value\r\n\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t// console.log(\"Successfully sent connect to server\", data.message);\r\n\t\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t// // The job is not finished yet, check again in 1 second\r\n\t\t\t\t\t\t// setTimeout(() => checkJobStatus(jobId), 1000);\r\n\t\t\t\t\t// }\r\n\t\t\t\t// });\r\n\t\t\t// }\r\n\t\t\t// // Keep polling until we get a proper answer\r\n\t\t\t// checkJobStatus(data.message);\t\r\n\t\t\t\t\t\r\n\t\t// });\t\t\t\t\t\t\t\r\n// }\r\n"],"mappings":"ycAAA,iBACA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,CAAEC,SAAS,KAAO,OAAO,CAChD,OAAQC,cAAc,KAAO,qBAAqB,CAElD;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAEA,QAAS,CAAAC,aAAaA,CAACC,KAAK,CAAE,CAE7B,GAAO,CAAAC,MAAM,CAAID,KAAK,CAAfC,MAAM,CACb,IAAAC,SAAA,CAA0BZ,QAAQ,CAAC,EAAE,CAAC,CAAAa,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/BG,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IACtB,IAAAI,UAAA,CAAgCjB,QAAQ,CAAC,EAAE,CAAC,CAAAkB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAArCE,QAAQ,CAAAD,UAAA,IAAEE,WAAW,CAAAF,UAAA,IAC5B,IAAAG,UAAA,CAA4CrB,QAAQ,CAAC,EAAE,CAAC,CAAAsB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAAjDE,cAAc,CAAAD,UAAA,IAAEE,iBAAiB,CAAAF,UAAA,IACxC,IAAAG,UAAA,CAAgEzB,QAAQ,CAAC,KAAK,CAAC,CAAA0B,UAAA,CAAAZ,cAAA,CAAAW,UAAA,IAAxEE,wBAAwB,CAAAD,UAAA,IAAEE,2BAA2B,CAAAF,UAAA,IAC5D,IAAAG,UAAA,CAAsC7B,QAAQ,CAAC,KAAK,CAAC,CAAA8B,WAAA,CAAAhB,cAAA,CAAAe,UAAA,IAA9CE,WAAW,CAAAD,WAAA,IAAEE,cAAc,CAAAF,WAAA,IAClC,IAAAG,WAAA,CAAsCjC,QAAQ,CAAC,EAAE,CAAC,CAAAkC,WAAA,CAAApB,cAAA,CAAAmB,WAAA,IAA3CE,WAAW,CAAAD,WAAA,IAAEE,cAAc,CAAAF,WAAA,IAElC,GAAM,CAAAG,gBAAgB,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA,MAAAC,QAAA,CAAAC,IAAA,CAAAC,KAAA,QAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA,SAEA,CAAAC,KAAK,CAAC,2DAA2D,CAAE,CACzFC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACR,cAAc,CAAE,kBACjB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACpB7C,MAAM,CAAEA,MAAM,CACdI,KAAK,CAAEA,KAAK,CACZI,QAAQ,CAAEA,QAAQ,CAClBI,cAAc,CAAEA,cAAc,CAC9BkC,iBAAiB,CAAE9B,wBACpB,CAAC,CACF,CAAC,CAAC,QAZIgB,QAAQ,CAAAK,QAAA,CAAAU,IAAA,CAAAV,QAAA,CAAAE,IAAA,SAcK,CAAAP,QAAQ,CAACgB,IAAI,EAAE,QAA5Bf,IAAI,CAAAI,QAAA,CAAAU,IAAA,CACVE,OAAO,CAACC,GAAG,CAACjB,IAAI,CAAC,CAEjB;AACMC,KAAK,CAAGD,IAAI,CAACkB,OAAO,CAE1B5D,cAAc,CAAC2C,KAAK,CAAE,SAACV,WAAW,CAAK,CACtCC,cAAc,CAACD,WAAW,CAAC,CAC3BH,cAAc,CAAC,IAAI,CAAC,CACrB,CAAC,CAAC,CAACgB,QAAA,CAAAE,IAAA,kBAAAF,QAAA,CAAAC,IAAA,IAAAD,QAAA,CAAAe,EAAA,CAAAf,QAAA,aAGHY,OAAO,CAACI,KAAK,CAAAhB,QAAA,CAAAe,EAAA,CAAO,CAAC,yBAAAf,QAAA,CAAAiB,IAAA,MAAAvB,OAAA,iBAEtB,kBA9BK,CAAAL,gBAAgBA,CAAA,SAAAC,IAAA,CAAA4B,KAAA,MAAAC,SAAA,OA8BrB,CAED,mBACC/D,IAAA,CAAAI,SAAA,EAAA4D,QAAA,CACCrC,WAAW,GAAK,IAAI,cAEpB3B,IAAA,CAACiE,oBAAoB,EAAClC,WAAW,CAAEA,WAAY,EAAG,cAGlD7B,KAAA,QAAKgE,EAAE,CAAC,oBAAoB,CAAAF,QAAA,eAC3BhE,IAAA,UAAOmE,IAAI,CAAC,MAAM,CAACD,EAAE,CAAC,OAAO,CAACE,WAAW,CAAC,eAAe,EAAG,cAC5DpE,IAAA,UAAOmE,IAAI,CAAC,MAAM,CAACD,EAAE,CAAC,UAAU,CAACE,WAAW,CAAC,UAAU,EAAG,cAC1DpE,IAAA,UAAOmE,IAAI,CAAC,MAAM,CAACD,EAAE,CAAC,gBAAgB,CAACE,WAAW,CAAC,iBAAiB,EAAG,cACvEpE,IAAA,UAAOmE,IAAI,CAAC,UAAU,CAACD,EAAE,CAAC,0BAA0B,EAAG,cACvDlE,IAAA,UAAOqE,GAAG,CAAC,0BAA0B,CAAAL,QAAA,CAAC,yBAEtC,EAAQ,cACRhE,IAAA,WAAQkE,EAAE,CAAC,mBAAmB,CAACI,OAAO,CAAErC,gBAAiB,CAAA+B,QAAA,CAAC,UAE1D,EAAS,GAEV,EAEE,CAGL,CACA,cAAe,CAAA3D,aAAa},"metadata":{},"sourceType":"module","externalDependencies":[]}