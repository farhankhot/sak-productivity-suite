{"ast":null,"code":"import _slicedToArray from\"C:/Users/farha/OneDrive/Desktop/sak-productivity-suite/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function LinkedInCookie(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),cookie=_useState2[0],setCookie=_useState2[1];useEffect(function(){chrome.storage.local.set({'LinkedInCookie':cookie});},[cookie]);var handleLinkedInCookie=function handleLinkedInCookie(){chrome.cookies.getAll({url:\"https://www.linkedin.com/feed/\"},function(linkedInCookie){console.log(linkedInCookie);// fetch(\"https://sak-productivity-suite.herokuapp.com/save-cookie\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\",\n// },\n// body: JSON.stringify({\n// cookie: linkedInCookie\n// })\n// })\n// .then((response) => response.json())\n// .then((data) => {\n// setCookie(linkedInCookie);\n// });\n});};return/*#__PURE__*/_jsx(_Fragment,{children:cookie===\"\"?/*#__PURE__*/_jsxs(\"div\",{id:\"loginPage\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"MAKE SURE YOU ARE LOGGED IN TO LINKEDIN BEFORE CLICKING BELOW\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLinkedInCookie,children:\"Get LinkedIn Cookies\"})]}):/*#__PURE__*/_jsxs(\"div\",{id:\"linkedInSearchPage\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"title\",placeholder:\"Enter a title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"location\",placeholder:\"Location\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"currentCompany\",placeholder:\"Current Company\"}),/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"mutualConnectionsBoolean\"}),/*#__PURE__*/_jsx(\"label\",{for:\"mutualConnectionsBoolean\",children:\"Get Mutual Connections?\"}),/*#__PURE__*/_jsx(\"button\",{id:\"profileInfoButton\",children:\"Get info\"})]})});}export default LinkedInCookie;// window.onload = async function() {\n// document.getElementById(\"GetLinkedinCookiesButton\").addEventListener(\"click\", function() {\n// var email = document.getElementById(\"email\").value;\n// var password = document.getElementById(\"password\").value;\n// // Assumes the user has already logged in to LinkedIn on the browser\n// chrome.cookies.getAll({\"url\": \"https://www.linkedin.com/feed/\"}, function(cookie) {\n// // Send to backend.py and save with username\n// fetch(\"https://ai-assistant.herokuapp.com/save-cookie\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// // Show the messages part\n// document.getElementById(\"login-page\").style.display = \"none\";\n// document.getElementById(\"linkedin-search-page\").style.display = \"block\";\n// document.getElementById(\"messages-page\").style.display = \"block\";\n// chrome.storage.local.set({\n// 'LinkedinEmail': email\n// });\n// chrome.storage.local.set({\n// 'LinkedinPassword': password\n// });\n// chrome.storage.local.set({\n// 'LinkedinCookie': cookie\n// });\n// });\n// });\n// });\n// var emailResult = await chrome.storage.local.get(['LinkedinEmail']);\n// // console.log(emailResult);\n// var email = emailResult.LinkedinEmail;\n// var passwordResult = await chrome.storage.local.get(['LinkedinPassword']);\n// var password = passwordResult.LinkedinPassword;\n// var linkedinCookieResult = await chrome.storage.local.get(['LinkedinCookie']);\n// var cookie = linkedinCookieResult.LinkedinCookie;\n// // console.log(email, password);\n// // Show login-page\n// if (email === undefined || password === undefined) {\t\n// document.getElementById(\"login-page\").style.display = \"block\";\n// document.getElementById(\"linkedin-search-page\").style.display = \"none\";\n// document.getElementById(\"messages-page\").style.display = \"none\";\n// } \n// // Show linkedin-search and messages-page\n// else {\n// document.getElementById(\"login-page\").style.display = \"none\";\n// document.getElementById(\"linkedin-search-page\").style.display = \"block\";\n// document.getElementById(\"messages-page\").style.display = \"block\";\n// }\n// document.getElementById(\"ProfileInfoButton\").onclick = function() {\n// fetch(\"https://www.linkedin.com/voyager/api/typeahead/hitsV2?keywords=USA&origin=OTHER&q=type&queryContext=List(geoVersion-%3E3,bingGeoSubTypeFilters-%3EMARKET_AREA%7CCOUNTRY_REGION%7CADMIN_DIVISION_1%7CCITY)&type=GEO\", {\n// \"headers\": {\n// \"accept\": \"application/vnd.linkedin.normalized+json+2.1\",\n// \"accept-language\": \"en-US,en;q=0.9,ml;q=0.8\",\n// \"csrf-token\": \"ajax:5885116779205486121\",\n// \"x-restli-protocol-version\": \"2.0.0\"\n// },\n// \"body\": null,\n// \"method\": \"GET\",\n// \"mode\": \"cors\",\n// \"credentials\": \"include\"\n// }).then(r => r.json()).then(console.log)\n// var title = document.getElementById(\"title\").value;\n// var location = document.getElementById(\"Location\").value;\n// var currentCompany = document.getElementById(\"CurrentCompany\").value;\n// var mutualConnectionsBoolean = document.getElementById(\"MutualConnectionsBoolean\").checked;\n// fetch(\"https://ai-assistant.herokuapp.com/receive-link\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// title: title,\n// location: location,\n// currentCompany: currentCompany,\n// mutualConnections: mutualConnectionsBoolean\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// console.log(\"Successfully sent link to server\", data.message);\n// var jobId = data.message;\n// function checkJobStatus(jobId) {\n// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// jobId: jobId\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// const status = data.status;\n// if (status === 'finished') {\n// const resultArray = data.result;\n// // console.log(result);\n// // return result;\n// document.getElementById(\"linkedin-search-page\").style.display = \"none\";\n// document.getElementById(\"linkedin-page\").style.display = \"block\";\n// var myArray = resultArray;\n// // var myArray = data.message;\n// var pageSize = 1;\n// var currentPage = 0;\n// // Divide the array into pages\n// var pages = [];\n// for (var i = 0; i < myArray.length; i += pageSize) {\n// pages.push(myArray.slice(i, i + pageSize));\n// }\n// var copyProfile = JSON.parse(JSON.stringify(pages[currentPage]));\n// var first_name = copyProfile[0]['firstName'] + \" \" + copyProfile[0]['lastName'];\n// var first_title = copyProfile[0]['headline'];\n// var profileId = copyProfile[0]['profile_id'];\n// var summary = copyProfile[0]['summary'];\n// var skills = copyProfile[0]['skills'];\n// var public_id = copyProfile[0]['public_id'];\n// var profileUrn = copyProfile[0]['profile_urn'];\n// document.getElementById(\"name\").innerHTML = first_name;\n// document.getElementById(\"title\").innerHTML = first_title;\n// var nextButton = document.getElementById(\"next-button\");\n// nextButton.addEventListener(\"click\", function() {\n// // Clear\n// document.getElementById(\"my-textarea\").value = \"\";\n// document.getElementById(\"CheckboxContainer\").innerHTML = \"\";\n// document.getElementById(\"InterestsContainer\").innerHTML = \"\";\n// document.getElementById(\"PeopleInterestsContainer\").innerHTML = \"\";\n// document.getElementById(\"CompanyInterestsContainer\").innerHTML = \"\";\t\t\t\t\t\n// // Increment the current page index\n// currentPage = (currentPage + 1) % pages.length;\n// var copyProfile = JSON.parse(JSON.stringify(pages[currentPage]));\n// var name = copyProfile[0]['firstName'] + \" \" + copyProfile[0]['lastName'];\n// var title = copyProfile[0]['headline'];\n// var profileId = copyProfile[0]['profile_id'];\n// var summary = copyProfile[0]['summary'];\n// var skills = copyProfile[0]['skills'];\n// var publicId = copyProfile[0]['public_id'];\n// var profileUrn = copyProfile[0]['profile_urn'];\n// document.getElementById(\"name\").innerHTML = name;\n// document.getElementById(\"title\").innerHTML = title;\n// document.getElementById(\"PeopleInterestsButton\").onclick = function() {\n// fetch(\"https://ai-assistant.herokuapp.com/get-people-interests\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileUrn: profileUrn\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// var jobId = data.message;\n// console.log(\"job of people interests\", jobId);\n// function checkJobStatus(jobId) {\n// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// jobId: jobId\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// const status = data.status;\n// console.log(status);\n// if (status === 'finished') {\n// console.log(\"Successfully gotten people interests\", data.result);\n// const words = data.result;\n// // var words = data.message;\n// var container = document.getElementById('PeopleInterestsContainer');\n// for (var i = 0; i < words.length; i++) {\n// var checkbox = document.createElement('input');\n// checkbox.type = 'checkbox';\n// checkbox.value = words[i][0];\n// checkbox.id = words[i][1];\n// var label = document.createElement('label');\n// label.textContent = words[i][0];\n// label.appendChild(checkbox);\n// container.appendChild(label);\n// }\n// } else {\n// // The job is not finished yet, check again in 1 second\n// setTimeout(() => checkJobStatus(jobId), 1000);\n// }\n// });\n// }\n// checkJobStatus(data.message);\n// });\n// }\n// document.getElementById(\"CompanyInterestsButton\").onclick = function() {\n// fetch(\"https://ai-assistant.herokuapp.com/get-company-interests\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileUrn: profileUrn\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// var jobId = data.message;\n// console.log(\"job of company interests\", jobId);\n// function checkJobStatus(jobId) {\n// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// jobId: jobId\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// const status = data.status;\n// console.log(status);\n// if (status === 'finished') {\n// console.log(\"Successfully gotten company interests\", data.result);\n// const words = data.result;\n// var container = document.getElementById('CompanyInterestsContainer');\n// for (var i = 0; i < words.length; i++) {\n// var checkbox = document.createElement('input');\n// checkbox.type = 'checkbox';\n// checkbox.value = words[i][0];\n// checkbox.id = words[i][1];\n// var label = document.createElement('label');\n// label.textContent = words[i][0];\n// label.appendChild(checkbox);\n// container.appendChild(label);\n// }\n// } else {\n// // The job is not finished yet, check again in 1 second\n// setTimeout(() => checkJobStatus(jobId), 1000);\n// }\n// });\n// }\n// checkJobStatus(data.message);\n// });\n// }\n// document.getElementById(\"GenerateConnectNoteButton\").onclick = function() {\n// var checkboxes = document.querySelectorAll('input[type=checkbox]');\n// var topicList = [];\n// for (var i = 0; i < checkboxes.length; i++) {\n// if (checkboxes[i].checked) {\n// var topic = checkboxes[i].value;\n// topicList.push(topic);\n// }\n// }\n// var topicListString = topicList.toString();\n// var prompt_string = \"This is the profile of a person: \" + \"\\n\" + name \n// + \" This is their summary: \" + summary +\n// \" These are their interests: \" + topicListString \n// + \" Use the internet to get something useful about the interests and use it in the request. \"\n// + \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\n// // console.log(prompt_string);\t\t\t\n// fetch(\"https://ai-assistant.herokuapp.com/use-bingai\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// prompt: prompt_string\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// console.log(data.message);\n// document.getElementById(\"my-textarea\").value = data.message;\n// }).catch(error => console.error(error));\n// }\n// document.getElementById(\"send-button\").onclick = function() {\n// // fetch to server.js, with profileId and text\n// fetch(\"https://ai-assistant.herokuapp.com/send-connect\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileId: profileId,\n// text: document.getElementById(\"my-textarea\").value\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// console.log(\"Successfully sent connect to server\", data.message);\n// });\n// }\n// });\n// // document.getElementById(\"InterestsButton\").onclick = function() {\n// // fetch(\"https://ai-assistant.herokuapp.com/get-interests\", {\n// // method: \"POST\",\n// // headers: {\n// // \"Content-Type\": \"application/json\"\n// // },\n// // body: JSON.stringify({\n// // email: email,\n// // password: password,\n// // publicId: publicId\n// // })\n// // })\n// // .then(response => response.json())\n// // .then(data => {\n// // console.log(\"Successfully gotten interests\", data.message);\n// // var words = data.message;\n// // var container = document.getElementById('CheckboxContainer');\n// // for (var i = 0; i < words.length; i++) {\n// // var checkbox = document.createElement('input');\n// // checkbox.type = 'checkbox';\n// // checkbox.value = words[i];\n// // var label = document.createElement('label');\n// // label.textContent = words[i];\n// // label.appendChild(checkbox);\n// // container.appendChild(label);\n// // }\n// // });\n// // }\n// document.getElementById(\"PeopleInterestsButton\").onclick = function() {\n// fetch(\"https://ai-assistant.herokuapp.com/get-people-interests\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileUrn: profileUrn\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// var jobId = data.message;\n// console.log(\"job of people interests\", jobId);\n// function checkJobStatus(jobId) {\n// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// jobId: jobId\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// const status = data.status;\n// console.log(status);\n// if (status === 'finished') {\n// console.log(\"Successfully gotten people interests\", data.result);\n// const words = data.result;\n// // var words = data.message;\n// var container = document.getElementById('PeopleInterestsContainer');\n// for (var i = 0; i < words.length; i++) {\n// var checkbox = document.createElement('input');\n// checkbox.type = 'checkbox';\n// checkbox.value = words[i][0];\n// checkbox.id = words[i][1];\n// var label = document.createElement('label');\n// label.textContent = words[i][0];\n// label.appendChild(checkbox);\n// container.appendChild(label);\n// }\n// } else {\n// // The job is not finished yet, check again in 1 second\n// setTimeout(() => checkJobStatus(jobId), 1000);\n// }\n// });\n// }\n// checkJobStatus(data.message);\n// });\n// }\n// document.getElementById(\"CompanyInterestsButton\").onclick = function() {\n// fetch(\"https://ai-assistant.herokuapp.com/get-company-interests\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileUrn: profileUrn\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// var jobId = data.message;\n// console.log(\"job of company interests\", jobId);\n// function checkJobStatus(jobId) {\n// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// jobId: jobId\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// const status = data.status;\n// console.log(status);\n// if (status === 'finished') {\n// console.log(\"Successfully gotten company interests\", data.result);\n// const words = data.result;\n// var container = document.getElementById('CompanyInterestsContainer');\n// for (var i = 0; i < words.length; i++) {\n// var checkbox = document.createElement('input');\n// checkbox.type = 'checkbox';\n// checkbox.value = words[i][0];\n// checkbox.id = words[i][1];\n// var label = document.createElement('label');\n// label.textContent = words[i][0];\n// label.appendChild(checkbox);\n// container.appendChild(label);\n// }\n// } else {\n// // The job is not finished yet, check again in 1 second\n// setTimeout(() => checkJobStatus(jobId), 1000);\n// }\n// });\n// }\n// checkJobStatus(data.message);\n// });\n// }\n// document.getElementById(\"GenerateConnectNoteButton\").onclick = function() {\n// var checkboxes = document.querySelectorAll('input[type=checkbox]');\n// var topicList = [];\n// for (var i = 0; i < checkboxes.length; i++) {\n// if (checkboxes[i].checked) {\n// var topic = checkboxes[i].value;\n// topicList.push(topic);\n// }\n// }\n// var topicListString = topicList.toString();\n// var prompt_string = \"This is the profile of a person: \" + \"\\n\" + first_name \n// + \" This is their summary: \" + summary +\n// \" These are their interests: \" + topicListString \n// + \" Use the internet to get something useful about the interests and use it in the request. \"\n// + \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\n// // console.log(prompt_string);\t\t\t\n// fetch(\"https://ai-assistant.herokuapp.com/use-bingai\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// prompt: prompt_string\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// console.log(data.message);\n// document.getElementById(\"my-textarea\").value = data.message;\n// }).catch(error => console.error(error));\n// }\n// document.getElementById(\"send-button\").onclick = function() {\n// // fetch to server.js, with profileId and text\n// fetch(\"https://ai-assistant.herokuapp.com/send-connect\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileId: profileId,\n// text: document.getElementById(\"my-textarea\").value\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// console.log(\"Successfully sent connect to server\", data.message);\n// });\n// }\n// } else {\n// // The job is not finished yet, check again in 1 second\n// setTimeout(() => checkJobStatus(jobId), 1000);\n// }\n// });\n// }\n// // Keep polling until we get a proper answer\n// checkJobStatus(data.message);\t\n// });\t\t\t\t\t\t\t\n// }\n// document.getElementById(\"MessagesButton\").onclick = function() {\n// document.getElementById(\"linkedin-search-page\").style.display = \"none\";\n// // console.log(email);\n// fetch(\"https://ai-assistant.herokuapp.com/get-convo-threads\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// console.log(\"Successfully gotten conversation threads\", data.message);\n// var words = data.message;\n// var container = document.getElementById('ThreadsContainer');\n// for (var i = 0; i < words.length; i++) {\n// var button = document.createElement('input');\n// button.type = 'button';\n// button.value = words[i][0];\n// button.id = words[i][1];\n// button.className = \"OpenConvoButton\";\n// var label = document.createElement('label');\n// label.textContent = words[i][0];\n// label.appendChild(button);\n// container.appendChild(label);\n// }\n// const convoButtons = document.querySelectorAll('.OpenConvoButton');\n// convoButtons.forEach(function(button) {\n// button.addEventListener('click', function() {\n// // Clear the buttons, create a header of button.value\n// container.style.display = \"none\";\n// var msg_container = document.getElementById(\"MessagesContainer\");\n// var new_h1 = document.createElement(\"h1\")\n// new_h1.innerHTML = button.value;\n// msg_container.appendChild(new_h1);\n// // Display the messages, create a textarea with \"Get Interests\" and \"Generate Message\" button\n// fetch(\"https://ai-assistant.herokuapp.com/get-convo-messages\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileUrn: button.id\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// console.log(\"Successfully gotten messages\", data.message);\n// var new_p = document.createElement(\"p\");\n// new_p.textContent = data.message;\n// new_p.style.color = \"white\";\n// var new_textarea = document.createElement(\"textarea\");\n// new_textarea.id = \"messageTextbox\";\n// var generate_interests_button = document.createElement(\"button\");\n// generate_interests_button.textContent = \"Get Interests\";\n// var generate_message_button = document.createElement(\"button\");\n// generate_message_button.textContent = \"Generate Message\";\n// var send_message_button = document.createElement(\"button\");\n// send_message_button.textContent = \"Send Message\";\n// msg_container.appendChild(new_p);\n// msg_container.appendChild(new_textarea);\n// msg_container.appendChild(generate_interests_button);\n// msg_container.appendChild(generate_message_button);\n// msg_container.appendChild(send_message_button);\t\n// generate_interests_button.onclick = function() {\n// fetch(\"https://ai-assistant.herokuapp.com/get-interests-from-thread\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// publicId: button.id\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// console.log(\"Successfully gotten interests\", data.message);\n// var words = data.message;\n// var container = document.getElementById('InterestsContainer');\n// for (var i = 0; i < words.length; i++) {\n// var checkbox = document.createElement('input');\n// checkbox.type = 'checkbox';\n// checkbox.value = words[i];\n// var label = document.createElement('label');\n// label.textContent = words[i];\n// label.appendChild(checkbox);\n// container.appendChild(label);\n// }\n// });\n// }\n// // If generate_message_button is clicked\n// generate_message_button.onclick = function() {\n// var checkboxes = document.querySelectorAll('input[type=checkbox]');\n// var topicList = [];\n// for (var i = 0; i < checkboxes.length; i++) {\n// if (checkboxes[i].checked) {\n// var topic = checkboxes[i].value;\n// topicList.push(topic);\n// }\n// }\n// var topicListString = topicList.toString();\n// var prompt_string = \"Reply to this: \" + data.message;\n// fetch('https://api.openai.com/v1/completions', {\n// method: 'POST',\n// headers: {\n// 'Content-Type': 'application/json',\n// 'Authorization': 'Bearer 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'\n// },\n// body: JSON.stringify({\n// model: 'text-davinci-003',\n// prompt: prompt_string,\n// max_tokens: 55,\n// temperature: 0.7\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// //console.log(JSON.stringify(data));\n// console.log(data.choices[0].text);\n// new_textarea.value = data.choices[0].text;\n// }).catch(error => console.error(error));\n// // document.getElementById(\"my-textarea\").value = prompt_string;\n// }\n// send_message_button.onclick = function() {\n// fetch(\"https://ai-assistant.herokuapp.com/send-message\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileId: button.id,\n// text: new_textarea.value\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// console.log(\"Successfully sent connect to server\", data.message);\n// });\n// }\n// });\n// });\n// });\n// });\n// }\n// };","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","LinkedInCookie","_useState","_useState2","_slicedToArray","cookie","setCookie","chrome","storage","local","set","handleLinkedInCookie","cookies","getAll","url","linkedInCookie","console","log","children","id","onClick","type","placeholder","for"],"sources":["C:/Users/farha/OneDrive/Desktop/sak-productivity-suite/client/src/LinkedInCookie.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\n\r\nfunction LinkedInCookie() {\r\n\t\r\n\tconst [cookie, setCookie] = useState(\"\")\r\n\t\r\n\tuseEffect( () => {\r\n\t\tchrome.storage.local.set({\r\n\t\t\t'LinkedInCookie': cookie\r\n\t\t});\r\n\t\r\n\t}, [cookie]);\r\n\t\r\n\t\t\r\n\tconst handleLinkedInCookie = () => {\r\n\t\t\r\n\t\tchrome.cookies.getAll({ url: \"https://www.linkedin.com/feed/\" }, (linkedInCookie) => {\r\n\t\t\t\r\n\t\t\tconsole.log(linkedInCookie);\r\n\t\t\t\r\n\t\t\t// fetch(\"https://sak-productivity-suite.herokuapp.com/save-cookie\", {\r\n\t\t\t\t// method: \"POST\",\r\n\t\t\t\t// headers: {\r\n\t\t\t\t\t// \"Content-Type\": \"application/json\",\r\n\t\t\t\t// },\r\n\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t// cookie: linkedInCookie\r\n\t\t\t\t// })\r\n\t\t\t// })\r\n\t\t\t// .then((response) => response.json())\r\n\t\t\t// .then((data) => {\r\n\t\t\t\t\r\n\t\t\t\t// setCookie(linkedInCookie);\r\n\t\t\t\t\r\n\t\t\t// });\r\n\r\n\t\t});\r\n\t\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t{cookie === \"\" ? (\r\n\t\t\t<div id=\"loginPage\">\r\n\t\t\t\t\r\n\t\t\t\t<h1>MAKE SURE YOU ARE LOGGED IN TO LINKEDIN BEFORE CLICKING BELOW</h1> \r\n\r\n\t\t\t\t<button onClick={handleLinkedInCookie}>\r\n\t\t\t\t\tGet LinkedIn Cookies\r\n\t\t\t\t</button>\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t) : (\r\n\t\t\t<div id=\"linkedInSearchPage\">\r\n\t\t\t\t<input type=\"text\" id=\"title\" placeholder=\"Enter a title\" />\r\n\t\t\t\t<input type=\"text\" id=\"location\" placeholder=\"Location\" />\r\n\t\t\t\t<input type=\"text\" id=\"currentCompany\" placeholder=\"Current Company\" />\r\n\t\t\t\t<input type=\"checkbox\" id=\"mutualConnectionsBoolean\" />\r\n\t\t\t\t<label for=\"mutualConnectionsBoolean\">\r\n\t\t\t\t\tGet Mutual Connections?\r\n\t\t\t\t</label>\r\n\t\t\t\t<button id=\"profileInfoButton\">\r\n\t\t\t\t\tGet info\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t</>\r\n\t\t\r\n\t);\r\n\r\n}\r\nexport default LinkedInCookie;\r\n\r\n// window.onload = async function() {\r\n\t\r\n\t// document.getElementById(\"GetLinkedinCookiesButton\").addEventListener(\"click\", function() {\r\n\t\t\r\n\t\t// var email = document.getElementById(\"email\").value;\r\n\t\t// var password = document.getElementById(\"password\").value;\r\n\t\t\r\n\t\t// // Assumes the user has already logged in to LinkedIn on the browser\r\n\t\t// chrome.cookies.getAll({\"url\": \"https://www.linkedin.com/feed/\"}, function(cookie) {\r\n\t\t\t\t\t\t\r\n\t\t\t// // Send to backend.py and save with username\r\n\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/save-cookie\", {\r\n\t\t\t\t// method: \"POST\",\r\n\t\t\t\t// headers: {\r\n\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t// },\r\n\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t// email: email,\r\n\t\t\t\t\t// password: password,\r\n\t\t\t\t\t// cookie: cookie\r\n\t\t\t\t// })\r\n\t\t\t// })\r\n\t\t\t// .then(response => response.json())\r\n\t\t\t// .then(data => {\r\n\r\n\t\t\t\t// // Show the messages part\r\n\t\t\t\t// document.getElementById(\"login-page\").style.display = \"none\";\r\n\t\t\t\t// document.getElementById(\"linkedin-search-page\").style.display = \"block\";\r\n\t\t\t\t// document.getElementById(\"messages-page\").style.display = \"block\";\r\n\r\n\t\t\t\t// chrome.storage.local.set({\r\n\t\t\t\t\t// 'LinkedinEmail': email\r\n\t\t\t\t// });\r\n\t\t\t\t// chrome.storage.local.set({\r\n\t\t\t\t\t// 'LinkedinPassword': password\r\n\t\t\t\t// });\r\n\t\t\t\t// chrome.storage.local.set({\r\n\t\t\t\t\t// 'LinkedinCookie': cookie\r\n\t\t\t\t// });\r\n\t\t\t// });\r\n\t\t\t\r\n\t\t// });\r\n\t// });\r\n\t\r\n\t// var emailResult = await chrome.storage.local.get(['LinkedinEmail']);\r\n\t// // console.log(emailResult);\r\n\t// var email = emailResult.LinkedinEmail;\r\n\t\r\n\t// var passwordResult = await chrome.storage.local.get(['LinkedinPassword']);\r\n\t// var password = passwordResult.LinkedinPassword;\r\n\t\r\n\t// var linkedinCookieResult = await chrome.storage.local.get(['LinkedinCookie']);\r\n\t// var cookie = linkedinCookieResult.LinkedinCookie;\r\n\t\r\n\t// // console.log(email, password);\r\n\r\n\t// // Show login-page\r\n\t// if (email === undefined || password === undefined) {\t\r\n\t\t// document.getElementById(\"login-page\").style.display = \"block\";\r\n\t\t// document.getElementById(\"linkedin-search-page\").style.display = \"none\";\r\n\t\t// document.getElementById(\"messages-page\").style.display = \"none\";\r\n\t// } \r\n\t// // Show linkedin-search and messages-page\r\n\t// else {\r\n\t\t// document.getElementById(\"login-page\").style.display = \"none\";\r\n\t\t// document.getElementById(\"linkedin-search-page\").style.display = \"block\";\r\n\t\t// document.getElementById(\"messages-page\").style.display = \"block\";\r\n\t// }\r\n\t\r\n\t// document.getElementById(\"ProfileInfoButton\").onclick = function() {\r\n\r\n\t\t// fetch(\"https://www.linkedin.com/voyager/api/typeahead/hitsV2?keywords=USA&origin=OTHER&q=type&queryContext=List(geoVersion-%3E3,bingGeoSubTypeFilters-%3EMARKET_AREA%7CCOUNTRY_REGION%7CADMIN_DIVISION_1%7CCITY)&type=GEO\", {\r\n\t\t\t// \"headers\": {\r\n\t\t\t\t// \"accept\": \"application/vnd.linkedin.normalized+json+2.1\",\r\n\t\t\t\t// \"accept-language\": \"en-US,en;q=0.9,ml;q=0.8\",\r\n\t\t\t\t// \"csrf-token\": \"ajax:5885116779205486121\",\r\n\t\t\t\t// \"x-restli-protocol-version\": \"2.0.0\"\r\n\t\t\t// },\r\n\t\t\t// \"body\": null,\r\n\t\t\t// \"method\": \"GET\",\r\n\t\t\t// \"mode\": \"cors\",\r\n\t\t\t// \"credentials\": \"include\"\r\n\t\t// }).then(r => r.json()).then(console.log)\r\n\r\n\t\t// var title = document.getElementById(\"title\").value;\r\n\t\t// var location = document.getElementById(\"Location\").value;\r\n\t\t// var currentCompany = document.getElementById(\"CurrentCompany\").value;\r\n\t\t// var mutualConnectionsBoolean = document.getElementById(\"MutualConnectionsBoolean\").checked;\r\n\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/receive-link\", {\r\n\t\t\t\t// method: \"POST\",\r\n\t\t\t\t// headers: {\r\n\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t// },\r\n\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t// email: email,\r\n\t\t\t\t\t// password: password,\r\n\t\t\t\t\t// cookie: cookie,\r\n\t\t\t\t\t// title: title,\r\n\t\t\t\t\t// location: location,\r\n\t\t\t\t\t// currentCompany: currentCompany,\r\n\t\t\t\t\t// mutualConnections: mutualConnectionsBoolean\r\n\t\t\t\t// })\r\n\t\t\t// })\r\n\t\t\t// .then(response => response.json())\r\n\t\t\t// .then(data => {\r\n\r\n\t\t\t\t// console.log(\"Successfully sent link to server\", data.message);\r\n\r\n\t\t\t\t// var jobId = data.message;\r\n\t\t\t\t// function checkJobStatus(jobId) {\r\n\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\r\n\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t// jobId: jobId\r\n\t\t\t\t\t\t// })\r\n\t\t\t\t\t// })\r\n\t\t\t\t\t\r\n\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// const status = data.status;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// if (status === 'finished') {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// const resultArray = data.result;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// // console.log(result);\r\n\t\t\t\t\t\t\t// // return result;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// document.getElementById(\"linkedin-search-page\").style.display = \"none\";\r\n\t\t\t\t\t\t\t// document.getElementById(\"linkedin-page\").style.display = \"block\";\r\n\r\n\t\t\t\t\t\t\t// var myArray = resultArray;\r\n\t\t\t\t\t\t\t// // var myArray = data.message;\r\n\t\t\t\t\t\t\t// var pageSize = 1;\r\n\t\t\t\t\t\t\t// var currentPage = 0;\r\n\r\n\t\t\t\t\t\t\t// // Divide the array into pages\r\n\t\t\t\t\t\t\t// var pages = [];\r\n\t\t\t\t\t\t\t// for (var i = 0; i < myArray.length; i += pageSize) {\r\n\t\t\t\t\t\t\t\t// pages.push(myArray.slice(i, i + pageSize));\r\n\t\t\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t\t\t// var copyProfile = JSON.parse(JSON.stringify(pages[currentPage]));\r\n\t\t\t\t\t\t\t// var first_name = copyProfile[0]['firstName'] + \" \" + copyProfile[0]['lastName'];\r\n\t\t\t\t\t\t\t// var first_title = copyProfile[0]['headline'];\r\n\t\t\t\t\t\t\t// var profileId = copyProfile[0]['profile_id'];\r\n\t\t\t\t\t\t\t// var summary = copyProfile[0]['summary'];\r\n\t\t\t\t\t\t\t// var skills = copyProfile[0]['skills'];\r\n\t\t\t\t\t\t\t// var public_id = copyProfile[0]['public_id'];\r\n\t\t\t\t\t\t\t// var profileUrn = copyProfile[0]['profile_urn'];\r\n\r\n\t\t\t\t\t\t\t// document.getElementById(\"name\").innerHTML = first_name;\r\n\t\t\t\t\t\t\t// document.getElementById(\"title\").innerHTML = first_title;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// var nextButton = document.getElementById(\"next-button\");\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// nextButton.addEventListener(\"click\", function() {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// // Clear\r\n\t\t\t\t\t\t\t\t// document.getElementById(\"my-textarea\").value = \"\";\r\n\t\t\t\t\t\t\t\t// document.getElementById(\"CheckboxContainer\").innerHTML = \"\";\r\n\t\t\t\t\t\t\t\t// document.getElementById(\"InterestsContainer\").innerHTML = \"\";\r\n\t\t\t\t\t\t\t\t// document.getElementById(\"PeopleInterestsContainer\").innerHTML = \"\";\r\n\t\t\t\t\t\t\t\t// document.getElementById(\"CompanyInterestsContainer\").innerHTML = \"\";\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// // Increment the current page index\r\n\t\t\t\t\t\t\t\t// currentPage = (currentPage + 1) % pages.length;\r\n\t\t\t\t\t\t\t\t// var copyProfile = JSON.parse(JSON.stringify(pages[currentPage]));\r\n\t\t\t\t\t\t\t\t// var name = copyProfile[0]['firstName'] + \" \" + copyProfile[0]['lastName'];\r\n\t\t\t\t\t\t\t\t// var title = copyProfile[0]['headline'];\r\n\t\t\t\t\t\t\t\t// var profileId = copyProfile[0]['profile_id'];\r\n\t\t\t\t\t\t\t\t// var summary = copyProfile[0]['summary'];\r\n\t\t\t\t\t\t\t\t// var skills = copyProfile[0]['skills'];\r\n\t\t\t\t\t\t\t\t// var publicId = copyProfile[0]['public_id'];\r\n\t\t\t\t\t\t\t\t// var profileUrn = copyProfile[0]['profile_urn'];\r\n\r\n\t\t\t\t\t\t\t\t// document.getElementById(\"name\").innerHTML = name;\r\n\t\t\t\t\t\t\t\t// document.getElementById(\"title\").innerHTML = title;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// document.getElementById(\"PeopleInterestsButton\").onclick = function() {\r\n\r\n\t\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-people-interests\", {\r\n\t\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t// email: email,\r\n\t\t\t\t\t\t\t\t\t\t\t// password: password,\r\n\t\t\t\t\t\t\t\t\t\t\t// cookie: cookie,\r\n\t\t\t\t\t\t\t\t\t\t\t// profileUrn: profileUrn\r\n\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// var jobId = data.message;\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// console.log(\"job of people interests\", jobId);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// function checkJobStatus(jobId) {\r\n\t\t\t\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// jobId: jobId\r\n\t\t\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// const status = data.status;\r\n\t\t\t\t\t\t\t\t\t\t\t\t// console.log(status);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// if (status === 'finished') {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// console.log(\"Successfully gotten people interests\", data.result);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// const words = data.result;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// // var words = data.message;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// var container = document.getElementById('PeopleInterestsContainer');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.value = words[i][0];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.id = words[i][1];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// var label = document.createElement('label');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// label.textContent = words[i][0];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// container.appendChild(label);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// // The job is not finished yet, check again in 1 second\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// setTimeout(() => checkJobStatus(jobId), 1000);\r\n\t\t\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t// checkJobStatus(data.message);\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// document.getElementById(\"CompanyInterestsButton\").onclick = function() {\r\n\r\n\t\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-company-interests\", {\r\n\t\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t// email: email,\r\n\t\t\t\t\t\t\t\t\t\t\t// password: password,\r\n\t\t\t\t\t\t\t\t\t\t\t// cookie: cookie,\r\n\t\t\t\t\t\t\t\t\t\t\t// profileUrn: profileUrn\r\n\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// var jobId = data.message;\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// console.log(\"job of company interests\", jobId);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// function checkJobStatus(jobId) {\r\n\t\t\t\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// jobId: jobId\r\n\t\t\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// const status = data.status;\r\n\t\t\t\t\t\t\t\t\t\t\t\t// console.log(status);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// if (status === 'finished') {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// console.log(\"Successfully gotten company interests\", data.result);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// const words = data.result;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// var container = document.getElementById('CompanyInterestsContainer');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.value = words[i][0];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.id = words[i][1];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// var label = document.createElement('label');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// label.textContent = words[i][0];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// container.appendChild(label);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// // The job is not finished yet, check again in 1 second\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// setTimeout(() => checkJobStatus(jobId), 1000);\r\n\t\t\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t// checkJobStatus(data.message);\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t// document.getElementById(\"GenerateConnectNoteButton\").onclick = function() {\r\n\t\t\t\t\t\t\t\t\t// var checkboxes = document.querySelectorAll('input[type=checkbox]');\r\n\t\t\t\t\t\t\t\t\t// var topicList = [];\r\n\t\t\t\t\t\t\t\t\t// for (var i = 0; i < checkboxes.length; i++) {\r\n\t\t\t\t\t\t\t\t\t\t// if (checkboxes[i].checked) {\r\n\t\t\t\t\t\t\t\t\t\t\t// var topic = checkboxes[i].value;\r\n\t\t\t\t\t\t\t\t\t\t\t// topicList.push(topic);\r\n\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t// var topicListString = topicList.toString();\r\n\r\n\t\t\t\t\t\t\t\t\t// var prompt_string = \"This is the profile of a person: \" + \"\\n\" + name \r\n\t\t\t\t\t\t\t\t\t// + \" This is their summary: \" + summary +\r\n\t\t\t\t\t\t\t\t\t// \" These are their interests: \" + topicListString \r\n\t\t\t\t\t\t\t\t\t// + \" Use the internet to get something useful about the interests and use it in the request. \"\r\n\t\t\t\t\t\t\t\t\t// + \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// // console.log(prompt_string);\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/use-bingai\", {\r\n\t\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t// prompt: prompt_string\r\n\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// console.log(data.message);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// document.getElementById(\"my-textarea\").value = data.message;\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t// }).catch(error => console.error(error));\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t\t\t\t// document.getElementById(\"send-button\").onclick = function() {\r\n\r\n\t\t\t\t\t\t\t\t\t// // fetch to server.js, with profileId and text\r\n\t\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/send-connect\", {\r\n\t\t\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t\t// email: email,\r\n\t\t\t\t\t\t\t\t\t\t\t\t// password: password,\r\n\t\t\t\t\t\t\t\t\t\t\t\t// cookie: cookie,\r\n\t\t\t\t\t\t\t\t\t\t\t\t// profileId: profileId,\r\n\t\t\t\t\t\t\t\t\t\t\t\t// text: document.getElementById(\"my-textarea\").value\r\n\t\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t\t// console.log(\"Successfully sent connect to server\", data.message);\r\n\t\t\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// });\r\n\r\n\t\t\t\t\t\t\t// // document.getElementById(\"InterestsButton\").onclick = function() {\r\n\r\n\t\t\t\t\t\t\t\t\t// // fetch(\"https://ai-assistant.herokuapp.com/get-interests\", {\r\n\t\t\t\t\t\t\t\t\t\t\t// // method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\t\t// // headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// // \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t\t\t// // },\r\n\t\t\t\t\t\t\t\t\t\t\t// // body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t\t// // email: email,\r\n\t\t\t\t\t\t\t\t\t\t\t\t// // password: password,\r\n\t\t\t\t\t\t\t\t\t\t\t\t// // publicId: publicId\r\n\t\t\t\t\t\t\t\t\t\t\t// // })\r\n\t\t\t\t\t\t\t\t\t\t// // })\r\n\t\t\t\t\t\t\t\t\t\t// // .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t\t// // .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t\t// // console.log(\"Successfully gotten interests\", data.message);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// // var words = data.message;\r\n\t\t\t\t\t\t\t\t\t\t\t// // var container = document.getElementById('CheckboxContainer');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// // for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t// // var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t\t\t\t\t\t// // checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t\t\t\t\t\t// // checkbox.value = words[i];\r\n\t\t\t\t\t\t\t\t\t\t\t\t// // var label = document.createElement('label');\r\n\t\t\t\t\t\t\t\t\t\t\t\t// // label.textContent = words[i];\r\n\t\t\t\t\t\t\t\t\t\t\t\t// // label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t\t\t\t\t\t// // container.appendChild(label);\r\n\t\t\t\t\t\t\t\t\t\t\t// // }\r\n\t\t\t\t\t\t\t\t\t\t// // });\r\n\t\t\t\t\t\t\t\t// // }\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// document.getElementById(\"PeopleInterestsButton\").onclick = function() {\r\n\r\n\t\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-people-interests\", {\r\n\t\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t// email: email,\r\n\t\t\t\t\t\t\t\t\t\t\t// password: password,\r\n\t\t\t\t\t\t\t\t\t\t\t// cookie: cookie,\r\n\t\t\t\t\t\t\t\t\t\t\t// profileUrn: profileUrn\r\n\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// var jobId = data.message;\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// console.log(\"job of people interests\", jobId);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// function checkJobStatus(jobId) {\r\n\t\t\t\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// jobId: jobId\r\n\t\t\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// const status = data.status;\r\n\t\t\t\t\t\t\t\t\t\t\t\t// console.log(status);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// if (status === 'finished') {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// console.log(\"Successfully gotten people interests\", data.result);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// const words = data.result;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// // var words = data.message;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// var container = document.getElementById('PeopleInterestsContainer');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.value = words[i][0];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.id = words[i][1];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// var label = document.createElement('label');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// label.textContent = words[i][0];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// container.appendChild(label);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// // The job is not finished yet, check again in 1 second\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// setTimeout(() => checkJobStatus(jobId), 1000);\r\n\t\t\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t// checkJobStatus(data.message);\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// document.getElementById(\"CompanyInterestsButton\").onclick = function() {\r\n\r\n\t\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-company-interests\", {\r\n\t\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t// email: email,\r\n\t\t\t\t\t\t\t\t\t\t\t// password: password,\r\n\t\t\t\t\t\t\t\t\t\t\t// cookie: cookie,\r\n\t\t\t\t\t\t\t\t\t\t\t// profileUrn: profileUrn\r\n\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// var jobId = data.message;\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// console.log(\"job of company interests\", jobId);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// function checkJobStatus(jobId) {\r\n\t\t\t\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// jobId: jobId\r\n\t\t\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// const status = data.status;\r\n\t\t\t\t\t\t\t\t\t\t\t\t// console.log(status);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// if (status === 'finished') {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// console.log(\"Successfully gotten company interests\", data.result);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// const words = data.result;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// var container = document.getElementById('CompanyInterestsContainer');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.value = words[i][0];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.id = words[i][1];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// var label = document.createElement('label');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// label.textContent = words[i][0];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// container.appendChild(label);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// // The job is not finished yet, check again in 1 second\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// setTimeout(() => checkJobStatus(jobId), 1000);\r\n\t\t\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t// checkJobStatus(data.message);\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t\t\t\t// document.getElementById(\"GenerateConnectNoteButton\").onclick = function() {\r\n\t\t\t\t\t\t\t\t\t// var checkboxes = document.querySelectorAll('input[type=checkbox]');\r\n\t\t\t\t\t\t\t\t\t// var topicList = [];\r\n\t\t\t\t\t\t\t\t\t// for (var i = 0; i < checkboxes.length; i++) {\r\n\t\t\t\t\t\t\t\t\t\t// if (checkboxes[i].checked) {\r\n\t\t\t\t\t\t\t\t\t\t\t// var topic = checkboxes[i].value;\r\n\t\t\t\t\t\t\t\t\t\t\t// topicList.push(topic);\r\n\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t// var topicListString = topicList.toString();\r\n\r\n\t\t\t\t\t\t\t\t\t// var prompt_string = \"This is the profile of a person: \" + \"\\n\" + first_name \r\n\t\t\t\t\t\t\t\t\t// + \" This is their summary: \" + summary +\r\n\t\t\t\t\t\t\t\t\t// \" These are their interests: \" + topicListString \r\n\t\t\t\t\t\t\t\t\t// + \" Use the internet to get something useful about the interests and use it in the request. \"\r\n\t\t\t\t\t\t\t\t\t// + \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// // console.log(prompt_string);\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/use-bingai\", {\r\n\t\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t// prompt: prompt_string\r\n\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// console.log(data.message);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t// document.getElementById(\"my-textarea\").value = data.message;\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\t\t// }).catch(error => console.error(error));\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t\t\t\t// document.getElementById(\"send-button\").onclick = function() {\r\n\r\n\t\t\t\t\t\t\t\t\t// // fetch to server.js, with profileId and text\r\n\t\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/send-connect\", {\r\n\t\t\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t\t// email: email,\r\n\t\t\t\t\t\t\t\t\t\t\t\t// password: password,\r\n\t\t\t\t\t\t\t\t\t\t\t\t// cookie: cookie,\r\n\t\t\t\t\t\t\t\t\t\t\t\t// profileId: profileId,\r\n\t\t\t\t\t\t\t\t\t\t\t\t// text: document.getElementById(\"my-textarea\").value\r\n\t\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t\t// console.log(\"Successfully sent connect to server\", data.message);\r\n\t\t\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t\t// // The job is not finished yet, check again in 1 second\r\n\t\t\t\t\t\t\t// setTimeout(() => checkJobStatus(jobId), 1000);\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t// });\r\n\t\t\t\t// }\r\n\t\t\t\t// // Keep polling until we get a proper answer\r\n\t\t\t\t// checkJobStatus(data.message);\t\r\n\t\t\t\t\t\t\r\n\t\t\t// });\t\t\t\t\t\t\t\r\n\t// }\r\n\r\n\t// document.getElementById(\"MessagesButton\").onclick = function() {\r\n\r\n\t\t// document.getElementById(\"linkedin-search-page\").style.display = \"none\";\r\n\r\n\t\t// // console.log(email);\r\n\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-convo-threads\", {\r\n\t\t\t\t// method: \"POST\",\r\n\t\t\t\t// headers: {\r\n\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t// },\r\n\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t// email: email,\r\n\t\t\t\t\t// password: password,\r\n\t\t\t\t\t// cookie: cookie\r\n\t\t\t\t// })\r\n\t\t\t// })\r\n\t\t\t// .then(response => response.json())\r\n\t\t\t// .then(data => {\r\n\t\t\t\t// console.log(\"Successfully gotten conversation threads\", data.message);\r\n\r\n\t\t\t\t// var words = data.message;\r\n\t\t\t\t// var container = document.getElementById('ThreadsContainer');\r\n\r\n\t\t\t\t// for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t// var button = document.createElement('input');\r\n\t\t\t\t\t// button.type = 'button';\r\n\t\t\t\t\t// button.value = words[i][0];\r\n\t\t\t\t\t// button.id = words[i][1];\r\n\t\t\t\t\t// button.className = \"OpenConvoButton\";\r\n\t\t\t\t\t// var label = document.createElement('label');\r\n\t\t\t\t\t// label.textContent = words[i][0];\r\n\t\t\t\t\t// label.appendChild(button);\r\n\t\t\t\t\t// container.appendChild(label);\r\n\t\t\t\t// }\r\n\t\t\t\t// const convoButtons = document.querySelectorAll('.OpenConvoButton');\r\n\t\t\t\t// convoButtons.forEach(function(button) {\r\n\t\t\t\t\t// button.addEventListener('click', function() {\r\n\r\n\t\t\t\t\t\t// // Clear the buttons, create a header of button.value\r\n\t\t\t\t\t\t// container.style.display = \"none\";\r\n\t\t\t\t\t\t// var msg_container = document.getElementById(\"MessagesContainer\");\r\n\t\t\t\t\t\t// var new_h1 = document.createElement(\"h1\")\r\n\t\t\t\t\t\t// new_h1.innerHTML = button.value;\r\n\r\n\t\t\t\t\t\t// msg_container.appendChild(new_h1);\r\n\r\n\t\t\t\t\t\t// // Display the messages, create a textarea with \"Get Interests\" and \"Generate Message\" button\r\n\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-convo-messages\", {\r\n\r\n\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t// email: email,\r\n\t\t\t\t\t\t\t\t\t// password: password,\r\n\t\t\t\t\t\t\t\t\t// cookie: cookie,\r\n\t\t\t\t\t\t\t\t\t// profileUrn: button.id\r\n\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t// console.log(\"Successfully gotten messages\", data.message);\r\n\r\n\t\t\t\t\t\t\t\t// var new_p = document.createElement(\"p\");\r\n\t\t\t\t\t\t\t\t// new_p.textContent = data.message;\r\n\t\t\t\t\t\t\t\t// new_p.style.color = \"white\";\r\n\r\n\t\t\t\t\t\t\t\t// var new_textarea = document.createElement(\"textarea\");\r\n\t\t\t\t\t\t\t\t// new_textarea.id = \"messageTextbox\";\r\n\t\t\t\t\t\t\t\t// var generate_interests_button = document.createElement(\"button\");\r\n\t\t\t\t\t\t\t\t// generate_interests_button.textContent = \"Get Interests\";\r\n\t\t\t\t\t\t\t\t// var generate_message_button = document.createElement(\"button\");\r\n\t\t\t\t\t\t\t\t// generate_message_button.textContent = \"Generate Message\";\r\n\r\n\t\t\t\t\t\t\t\t// var send_message_button = document.createElement(\"button\");\r\n\t\t\t\t\t\t\t\t// send_message_button.textContent = \"Send Message\";\r\n\r\n\t\t\t\t\t\t\t\t// msg_container.appendChild(new_p);\r\n\t\t\t\t\t\t\t\t// msg_container.appendChild(new_textarea);\r\n\t\t\t\t\t\t\t\t// msg_container.appendChild(generate_interests_button);\r\n\t\t\t\t\t\t\t\t// msg_container.appendChild(generate_message_button);\r\n\t\t\t\t\t\t\t\t// msg_container.appendChild(send_message_button);\t\r\n\r\n\t\t\t\t\t\t\t\t// generate_interests_button.onclick = function() {\r\n\r\n\t\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-interests-from-thread\", {\r\n\t\t\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t\t// email: email,\r\n\t\t\t\t\t\t\t\t\t\t\t\t// password: password,\r\n\t\t\t\t\t\t\t\t\t\t\t\t// cookie: cookie,\r\n\t\t\t\t\t\t\t\t\t\t\t\t// publicId: button.id\r\n\t\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t\t// console.log(\"Successfully gotten interests\", data.message);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// var words = data.message;\r\n\t\t\t\t\t\t\t\t\t\t\t// var container = document.getElementById('InterestsContainer');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t// var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t\t\t\t\t\t// checkbox.value = words[i];\r\n\t\t\t\t\t\t\t\t\t\t\t\t// var label = document.createElement('label');\r\n\t\t\t\t\t\t\t\t\t\t\t\t// label.textContent = words[i];\r\n\t\t\t\t\t\t\t\t\t\t\t\t// label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t\t\t\t\t\t// container.appendChild(label);\r\n\t\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t\t\t\t// // If generate_message_button is clicked\r\n\t\t\t\t\t\t\t\t// generate_message_button.onclick = function() {\r\n\r\n\t\t\t\t\t\t\t\t\t// var checkboxes = document.querySelectorAll('input[type=checkbox]');\r\n\t\t\t\t\t\t\t\t\t// var topicList = [];\r\n\t\t\t\t\t\t\t\t\t// for (var i = 0; i < checkboxes.length; i++) {\r\n\t\t\t\t\t\t\t\t\t\t// if (checkboxes[i].checked) {\r\n\t\t\t\t\t\t\t\t\t\t\t// var topic = checkboxes[i].value;\r\n\t\t\t\t\t\t\t\t\t\t\t// topicList.push(topic);\r\n\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t// var topicListString = topicList.toString();\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// var prompt_string = \"Reply to this: \" + data.message;\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// fetch('https://api.openai.com/v1/completions', {\r\n\t\t\t\t\t\t\t\t\t\t\t// method: 'POST',\r\n\t\t\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// 'Content-Type': 'application/json',\r\n\t\t\t\t\t\t\t\t\t\t\t\t// 'Authorization': 'Bearer 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'\r\n\t\t\t\t\t\t\t\t\t\t\t// },\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t\t// model: 'text-davinci-003',\r\n\t\t\t\t\t\t\t\t\t\t\t\t// prompt: prompt_string,\r\n\t\t\t\t\t\t\t\t\t\t\t\t// max_tokens: 55,\r\n\t\t\t\t\t\t\t\t\t\t\t\t// temperature: 0.7\r\n\t\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t// //console.log(JSON.stringify(data));\r\n\t\t\t\t\t\t\t\t\t\t// console.log(data.choices[0].text);\r\n\t\t\t\t\t\t\t\t\t\t// new_textarea.value = data.choices[0].text;\r\n\r\n\t\t\t\t\t\t\t\t\t// }).catch(error => console.error(error));\r\n\r\n\t\t\t\t\t\t\t\t\t// // document.getElementById(\"my-textarea\").value = prompt_string;\r\n\t\t\t\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t\t\t\t// send_message_button.onclick = function() {\r\n\r\n\t\t\t\t\t\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/send-message\", {\r\n\t\t\t\t\t\t\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t\t\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t\t\t\t\t\t\t// },\r\n\t\t\t\t\t\t\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t\t\t\t\t\t\t// email: email,\r\n\t\t\t\t\t\t\t\t\t\t\t\t// password: password,\r\n\t\t\t\t\t\t\t\t\t\t\t\t// cookie: cookie,\r\n\t\t\t\t\t\t\t\t\t\t\t\t// profileId: button.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t// text: new_textarea.value\r\n\t\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t// })\r\n\t\t\t\t\t\t\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t\t\t\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\t\t\t\t\t\t// console.log(\"Successfully sent connect to server\", data.message);\r\n\t\t\t\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t// });\r\n\t\t\t\t// });\r\n\t\t\t// });\r\n\t// }\r\n// };"],"mappings":"mJAAA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,CAAEC,SAAS,KAAO,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAEjD,QAAS,CAAAC,cAAcA,CAAA,CAAG,CAEzB,IAAAC,SAAA,CAA4BT,QAAQ,CAAC,EAAE,CAAC,CAAAU,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAjCG,MAAM,CAAAF,UAAA,IAAEG,SAAS,CAAAH,UAAA,IAExBT,SAAS,CAAE,UAAM,CAChBa,MAAM,CAACC,OAAO,CAACC,KAAK,CAACC,GAAG,CAAC,CACxB,gBAAgB,CAAEL,MACnB,CAAC,CAAC,CAEH,CAAC,CAAE,CAACA,MAAM,CAAC,CAAC,CAGZ,GAAM,CAAAM,oBAAoB,CAAG,QAAvB,CAAAA,oBAAoBA,CAAA,CAAS,CAElCJ,MAAM,CAACK,OAAO,CAACC,MAAM,CAAC,CAAEC,GAAG,CAAE,gCAAiC,CAAC,CAAE,SAACC,cAAc,CAAK,CAEpFC,OAAO,CAACC,GAAG,CAACF,cAAc,CAAC,CAE3B;AACC;AACA;AACC;AACD;AACA;AACC;AACD;AACD;AACA;AACA;AAEC;AAED;AAED,CAAC,CAAC,CAEH,CAAC,CAED,mBACCnB,IAAA,CAAAI,SAAA,EAAAkB,QAAA,CACCb,MAAM,GAAK,EAAE,cACbP,KAAA,QAAKqB,EAAE,CAAC,WAAW,CAAAD,QAAA,eAElBtB,IAAA,OAAAsB,QAAA,CAAI,+DAA6D,EAAK,cAEtEtB,IAAA,WAAQwB,OAAO,CAAET,oBAAqB,CAAAO,QAAA,CAAC,sBAEvC,EAAS,GAEJ,cAGNpB,KAAA,QAAKqB,EAAE,CAAC,oBAAoB,CAAAD,QAAA,eAC3BtB,IAAA,UAAOyB,IAAI,CAAC,MAAM,CAACF,EAAE,CAAC,OAAO,CAACG,WAAW,CAAC,eAAe,EAAG,cAC5D1B,IAAA,UAAOyB,IAAI,CAAC,MAAM,CAACF,EAAE,CAAC,UAAU,CAACG,WAAW,CAAC,UAAU,EAAG,cAC1D1B,IAAA,UAAOyB,IAAI,CAAC,MAAM,CAACF,EAAE,CAAC,gBAAgB,CAACG,WAAW,CAAC,iBAAiB,EAAG,cACvE1B,IAAA,UAAOyB,IAAI,CAAC,UAAU,CAACF,EAAE,CAAC,0BAA0B,EAAG,cACvDvB,IAAA,UAAO2B,GAAG,CAAC,0BAA0B,CAAAL,QAAA,CAAC,yBAEtC,EAAQ,cACRtB,IAAA,WAAQuB,EAAE,CAAC,mBAAmB,CAAAD,QAAA,CAAC,UAE/B,EAAS,GAEV,EACE,CAIL,CACA,cAAe,CAAAjB,cAAc,CAE7B;AAEC;AAEC;AACA;AAEA;AACA;AAEC;AACA;AACC;AACA;AACC;AACD;AACA;AACC;AACA;AACA;AACD;AACD;AACA;AACA;AAEC;AACA;AACA;AACA;AAEA;AACC;AACD;AACA;AACC;AACD;AACA;AACC;AACD;AACD;AAED;AACD;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACC;AACA;AACA;AACD;AACA;AACA;AACC;AACA;AACA;AACD;AAEA;AAEC;AACC;AACC;AACA;AACA;AACA;AACD;AACA;AACA;AACA;AACA;AACD;AAEA;AACA;AACA;AACA;AAEA;AACE;AACA;AACC;AACD;AACA;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACD;AACA;AACA;AAEC;AAEA;AACA;AACC;AACC;AACA;AACC;AACD;AACA;AACC;AACD;AACD;AAEA;AACA;AAEC;AAEA;AAEC;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACC;AACD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEC;AACC;AACA;AACC;AACD;AACA;AACC;AACA;AACA;AACA;AACD;AACD;AACA;AACA;AAEC;AAEA;AAEA;AACC;AACC;AACA;AACC;AACD;AACA;AACC;AACD;AACD;AAEA;AACA;AAEC;AACA;AAEA;AAEC;AAEA;AAEA;AAEA;AAEA;AAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAGD;AACC;AACA;AACD;AACD;AAED;AACA;AAED;AACD;AAEA;AAEC;AACC;AACA;AACC;AACD;AACA;AACC;AACA;AACA;AACA;AACD;AACD;AACA;AACA;AAEC;AAEA;AAEA;AACC;AACC;AACA;AACC;AACD;AACA;AACC;AACD;AACD;AAEA;AACA;AAEC;AACA;AAEA;AAEC;AAEA;AAEA;AAEA;AAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAGD;AACC;AACA;AACD;AACD;AAED;AACA;AAED;AAED;AACA;AACC;AACA;AACA;AACC;AACC;AACA;AACD;AACD;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACC;AACA;AACC;AACD;AACA;AACC;AACD;AACD;AACA;AACA;AAEC;AAEA;AAGD;AAED;AAEA;AAEC;AACA;AACE;AACA;AACC;AACD;AACA;AACC;AACA;AACA;AACA;AACA;AACD;AACD;AACA;AACA;AACC;AACD;AACF;AAGD;AAEA;AAEE;AACE;AACA;AACC;AACD;AACA;AACC;AACA;AACA;AACD;AACD;AACA;AACA;AACC;AAEA;AACA;AAEA;AAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACD;AACF;AAEA;AAEC;AACC;AACA;AACC;AACD;AACA;AACC;AACA;AACA;AACA;AACD;AACD;AACA;AACA;AAEC;AAEA;AAEA;AACC;AACC;AACA;AACC;AACD;AACA;AACC;AACD;AACD;AAEA;AACA;AAEC;AACA;AAEA;AAEC;AAEA;AAEA;AAEA;AAEA;AAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAGD;AACC;AACA;AACD;AACD;AAED;AACA;AAED;AACD;AAEA;AAEC;AACC;AACA;AACC;AACD;AACA;AACC;AACA;AACA;AACA;AACD;AACD;AACA;AACA;AAEC;AAEA;AAEA;AACC;AACC;AACA;AACC;AACD;AACA;AACC;AACD;AACD;AAEA;AACA;AAEC;AACA;AAEA;AAEC;AAEA;AAEA;AAEA;AAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAGD;AACC;AACA;AACD;AACD;AAED;AACA;AAED;AAED;AAEA;AACC;AACA;AACA;AACC;AACC;AACA;AACD;AACD;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACC;AACA;AACC;AACD;AACA;AACC;AACD;AACD;AACA;AACA;AAEC;AAEA;AAGD;AAED;AAEA;AAEC;AACA;AACE;AACA;AACC;AACD;AACA;AACC;AACA;AACA;AACA;AACA;AACD;AACD;AACA;AACA;AACC;AACD;AACF;AAEF;AACC;AACA;AACD;AACD;AACD;AACA;AACA;AAED;AACF;AAEA;AAEC;AAEA;AAEA;AACE;AACA;AACC;AACD;AACA;AACC;AACA;AACA;AACD;AACD;AACA;AACA;AACC;AAEA;AACA;AAEA;AAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACA;AACA;AACC;AAEC;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEE;AACA;AACC;AACD;AACA;AACC;AACA;AACA;AACA;AACD;AACD;AACA;AACA;AAEC;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEC;AACE;AACA;AACC;AACD;AACA;AACC;AACA;AACA;AACA;AACD;AACD;AACA;AACA;AACC;AAEA;AACA;AAEA;AAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACD;AACF;AAEA;AACA;AAEC;AACA;AACA;AACC;AACC;AACA;AACD;AACD;AACA;AAEA;AAEA;AACE;AACA;AACC;AACA;AACD;AAEA;AACC;AACA;AACA;AACA;AACD;AACF;AACA;AACA;AACC;AACA;AACA;AAED;AAEA;AACD;AAEA;AAEC;AACE;AACA;AACC;AACD;AACA;AACC;AACA;AACA;AACA;AACA;AACD;AACD;AACA;AACA;AACC;AACD;AACF;AACD;AACF;AACD;AACD;AACF;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}