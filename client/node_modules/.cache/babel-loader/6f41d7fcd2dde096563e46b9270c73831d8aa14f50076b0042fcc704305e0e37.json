{"ast":null,"code":"import _slicedToArray from\"C:/Users/farha/OneDrive/Desktop/sak-productivity-suite/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";/*global chrome*/import React,{useState,useEffect}from\"react\";import ProfileSearch from\"./ProfileSearch.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function DisplaySearchResults(props){var resultArray=props.resultArray;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),fullName=_useState2[0],setFullName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),latestTitle=_useState4[0],setLatestTitle=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),currentPage=_useState6[0],setCurrentPage=_useState6[1];var pageSize=1;// Divide the array into pages\nvar pages=[];for(var i=0;i<resultArray.length;i+=pageSize){pages.push(resultArray.slice(i,i+pageSize));}var userProfile=JSON.parse(JSON.stringify(pages[currentPage]));// const fullName = userProfile[0][\"firstName\"] + \" \" + userProfile[0][\"lastName\"];\n// const latestTitle = userProfile[0][\"headline\"];\n// const profileId = userProfile[0][\"profile_id\"];\n// const summary = userProfile[0][\"summary\"];\n// const skills = userProfile[0][\"skills\"];\n// const publicId = userProfile[0][\"public_id\"];\n// const profileUrn = userProfile[0][\"profile_urn\"];\nuseEffect(function(){setFullName(userProfile[0][\"firstName\"]+\" \"+userProfile[0][\"lastName\"]);setLatestTitle(userProfile[0][\"headline\"]);},[fullName,latestTitle]);var handleNextPage=function handleNextPage(){if(currentPage<pages.length-1){setCurrentPage(currentPage+1);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{id:\"name\",children:fullName}),/*#__PURE__*/_jsx(\"div\",{id:\"title\",children:latestTitle}),/*#__PURE__*/_jsx(\"button\",{id:\"next-button\",onClick:handleNextPage,children:\"Next\"})]});}export default DisplaySearchResults;// const resultArray = data.result;\n// // console.log(result);\n// // return result;\n// document.getElementById(\"linkedin-search-page\").style.display = \"none\";\n// document.getElementById(\"linkedin-page\").style.display = \"block\";\n// var myArray = resultArray;\n// // var myArray = data.message;\n// var pageSize = 1;\n// var currentPage = 0;\n// // Divide the array into pages\n// var pages = [];\n// for (var i = 0; i < myArray.length; i += pageSize) {\n// pages.push(myArray.slice(i, i + pageSize));\n// }\n// var copyProfile = JSON.parse(JSON.stringify(pages[currentPage]));\n// var first_name = copyProfile[0]['firstName'] + \" \" + copyProfile[0]['lastName'];\n// var first_title = copyProfile[0]['headline'];\n// var profileId = copyProfile[0]['profile_id'];\n// var summary = copyProfile[0]['summary'];\n// var skills = copyProfile[0]['skills'];\n// var public_id = copyProfile[0]['public_id'];\n// var profileUrn = copyProfile[0]['profile_urn'];\n// document.getElementById(\"name\").innerHTML = first_name;\n// document.getElementById(\"title\").innerHTML = first_title;\n// var nextButton = document.getElementById(\"next-button\");\n// nextButton.addEventListener(\"click\", function() {\n// // Clear\n// document.getElementById(\"my-textarea\").value = \"\";\n// document.getElementById(\"CheckboxContainer\").innerHTML = \"\";\n// document.getElementById(\"InterestsContainer\").innerHTML = \"\";\n// document.getElementById(\"PeopleInterestsContainer\").innerHTML = \"\";\n// document.getElementById(\"CompanyInterestsContainer\").innerHTML = \"\";\t\t\t\t\t\n// // Increment the current page index\n// currentPage = (currentPage + 1) % pages.length;\n// var copyProfile = JSON.parse(JSON.stringify(pages[currentPage]));\n// var name = copyProfile[0]['firstName'] + \" \" + copyProfile[0]['lastName'];\n// var title = copyProfile[0]['headline'];\n// var profileId = copyProfile[0]['profile_id'];\n// var summary = copyProfile[0]['summary'];\n// var skills = copyProfile[0]['skills'];\n// var publicId = copyProfile[0]['public_id'];\n// var profileUrn = copyProfile[0]['profile_urn'];\n// document.getElementById(\"name\").innerHTML = name;\n// document.getElementById(\"title\").innerHTML = title;\n// document.getElementById(\"PeopleInterestsButton\").onclick = function() {\n// fetch(\"https://ai-assistant.herokuapp.com/get-people-interests\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileUrn: profileUrn\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// var jobId = data.message;\n// console.log(\"job of people interests\", jobId);\n// function checkJobStatus(jobId) {\n// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// jobId: jobId\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// const status = data.status;\n// console.log(status);\n// if (status === 'finished') {\n// console.log(\"Successfully gotten people interests\", data.result);\n// const words = data.result;\n// // var words = data.message;\n// var container = document.getElementById('PeopleInterestsContainer');\n// for (var i = 0; i < words.length; i++) {\n// var checkbox = document.createElement('input');\n// checkbox.type = 'checkbox';\n// checkbox.value = words[i][0];\n// checkbox.id = words[i][1];\n// var label = document.createElement('label');\n// label.textContent = words[i][0];\n// label.appendChild(checkbox);\n// container.appendChild(label);\n// }\n// } else {\n// // The job is not finished yet, check again in 1 second\n// setTimeout(() => checkJobStatus(jobId), 1000);\n// }\n// });\n// }\n// checkJobStatus(data.message);\n// });\n// }\n// document.getElementById(\"CompanyInterestsButton\").onclick = function() {\n// fetch(\"https://ai-assistant.herokuapp.com/get-company-interests\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileUrn: profileUrn\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// var jobId = data.message;\n// console.log(\"job of company interests\", jobId);\n// function checkJobStatus(jobId) {\n// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// jobId: jobId\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// const status = data.status;\n// console.log(status);\n// if (status === 'finished') {\n// console.log(\"Successfully gotten company interests\", data.result);\n// const words = data.result;\n// var container = document.getElementById('CompanyInterestsContainer');\n// for (var i = 0; i < words.length; i++) {\n// var checkbox = document.createElement('input');\n// checkbox.type = 'checkbox';\n// checkbox.value = words[i][0];\n// checkbox.id = words[i][1];\n// var label = document.createElement('label');\n// label.textContent = words[i][0];\n// label.appendChild(checkbox);\n// container.appendChild(label);\n// }\n// } else {\n// // The job is not finished yet, check again in 1 second\n// setTimeout(() => checkJobStatus(jobId), 1000);\n// }\n// });\n// }\n// checkJobStatus(data.message);\n// });\n// }\n// document.getElementById(\"GenerateConnectNoteButton\").onclick = function() {\n// var checkboxes = document.querySelectorAll('input[type=checkbox]');\n// var topicList = [];\n// for (var i = 0; i < checkboxes.length; i++) {\n// if (checkboxes[i].checked) {\n// var topic = checkboxes[i].value;\n// topicList.push(topic);\n// }\n// }\n// var topicListString = topicList.toString();\n// var prompt_string = \"This is the profile of a person: \" + \"\\n\" + name \n// + \" This is their summary: \" + summary +\n// \" These are their interests: \" + topicListString \n// + \" Use the internet to get something useful about the interests and use it in the request. \"\n// + \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\n// // console.log(prompt_string);\t\t\t\n// fetch(\"https://ai-assistant.herokuapp.com/use-bingai\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// prompt: prompt_string\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// console.log(data.message);\n// document.getElementById(\"my-textarea\").value = data.message;\n// }).catch(error => console.error(error));\n// }\n// document.getElementById(\"send-button\").onclick = function() {\n// // fetch to server.js, with profileId and text\n// fetch(\"https://ai-assistant.herokuapp.com/send-connect\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileId: profileId,\n// text: document.getElementById(\"my-textarea\").value\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// console.log(\"Successfully sent connect to server\", data.message);\n// });\n// }\n// });\n// // document.getElementById(\"InterestsButton\").onclick = function() {\n// // fetch(\"https://ai-assistant.herokuapp.com/get-interests\", {\n// // method: \"POST\",\n// // headers: {\n// // \"Content-Type\": \"application/json\"\n// // },\n// // body: JSON.stringify({\n// // email: email,\n// // password: password,\n// // publicId: publicId\n// // })\n// // })\n// // .then(response => response.json())\n// // .then(data => {\n// // console.log(\"Successfully gotten interests\", data.message);\n// // var words = data.message;\n// // var container = document.getElementById('CheckboxContainer');\n// // for (var i = 0; i < words.length; i++) {\n// // var checkbox = document.createElement('input');\n// // checkbox.type = 'checkbox';\n// // checkbox.value = words[i];\n// // var label = document.createElement('label');\n// // label.textContent = words[i];\n// // label.appendChild(checkbox);\n// // container.appendChild(label);\n// // }\n// // });\n// // }\n// document.getElementById(\"PeopleInterestsButton\").onclick = function() {\n// fetch(\"https://ai-assistant.herokuapp.com/get-people-interests\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileUrn: profileUrn\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// var jobId = data.message;\n// console.log(\"job of people interests\", jobId);\n// function checkJobStatus(jobId) {\n// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// jobId: jobId\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// const status = data.status;\n// console.log(status);\n// if (status === 'finished') {\n// console.log(\"Successfully gotten people interests\", data.result);\n// const words = data.result;\n// // var words = data.message;\n// var container = document.getElementById('PeopleInterestsContainer');\n// for (var i = 0; i < words.length; i++) {\n// var checkbox = document.createElement('input');\n// checkbox.type = 'checkbox';\n// checkbox.value = words[i][0];\n// checkbox.id = words[i][1];\n// var label = document.createElement('label');\n// label.textContent = words[i][0];\n// label.appendChild(checkbox);\n// container.appendChild(label);\n// }\n// } else {\n// // The job is not finished yet, check again in 1 second\n// setTimeout(() => checkJobStatus(jobId), 1000);\n// }\n// });\n// }\n// checkJobStatus(data.message);\n// });\n// }\n// document.getElementById(\"CompanyInterestsButton\").onclick = function() {\n// fetch(\"https://ai-assistant.herokuapp.com/get-company-interests\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileUrn: profileUrn\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// var jobId = data.message;\n// console.log(\"job of company interests\", jobId);\n// function checkJobStatus(jobId) {\n// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// jobId: jobId\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// const status = data.status;\n// console.log(status);\n// if (status === 'finished') {\n// console.log(\"Successfully gotten company interests\", data.result);\n// const words = data.result;\n// var container = document.getElementById('CompanyInterestsContainer');\n// for (var i = 0; i < words.length; i++) {\n// var checkbox = document.createElement('input');\n// checkbox.type = 'checkbox';\n// checkbox.value = words[i][0];\n// checkbox.id = words[i][1];\n// var label = document.createElement('label');\n// label.textContent = words[i][0];\n// label.appendChild(checkbox);\n// container.appendChild(label);\n// }\n// } else {\n// // The job is not finished yet, check again in 1 second\n// setTimeout(() => checkJobStatus(jobId), 1000);\n// }\n// });\n// }\n// checkJobStatus(data.message);\n// });\n// }\n// document.getElementById(\"GenerateConnectNoteButton\").onclick = function() {\n// var checkboxes = document.querySelectorAll('input[type=checkbox]');\n// var topicList = [];\n// for (var i = 0; i < checkboxes.length; i++) {\n// if (checkboxes[i].checked) {\n// var topic = checkboxes[i].value;\n// topicList.push(topic);\n// }\n// }\n// var topicListString = topicList.toString();\n// var prompt_string = \"This is the profile of a person: \" + \"\\n\" + first_name \n// + \" This is their summary: \" + summary +\n// \" These are their interests: \" + topicListString \n// + \" Use the internet to get something useful about the interests and use it in the request. \"\n// + \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\n// // console.log(prompt_string);\t\t\t\n// fetch(\"https://ai-assistant.herokuapp.com/use-bingai\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// prompt: prompt_string\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// console.log(data.message);\n// document.getElementById(\"my-textarea\").value = data.message;\n// }).catch(error => console.error(error));\n// }\n// document.getElementById(\"send-button\").onclick = function() {\n// // fetch to server.js, with profileId and text\n// fetch(\"https://ai-assistant.herokuapp.com/send-connect\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileId: profileId,\n// text: document.getElementById(\"my-textarea\").value\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// console.log(\"Successfully sent connect to server\", data.message);\n// });\n// }","map":{"version":3,"names":["React","useState","useEffect","ProfileSearch","jsx","_jsx","jsxs","_jsxs","DisplaySearchResults","props","resultArray","_useState","_useState2","_slicedToArray","fullName","setFullName","_useState3","_useState4","latestTitle","setLatestTitle","_useState5","_useState6","currentPage","setCurrentPage","pageSize","pages","i","length","push","slice","userProfile","JSON","parse","stringify","handleNextPage","children","id","onClick"],"sources":["C:/Users/farha/OneDrive/Desktop/sak-productivity-suite/client/src/DisplaySearchResults.js"],"sourcesContent":["/*global chrome*/\r\nimport React, {useState, useEffect} from \"react\";\r\nimport ProfileSearch from \"./ProfileSearch.js\";\r\n\r\nfunction DisplaySearchResults(props) {\r\n\t\r\n\tconst {resultArray} = props;\r\n\tconst [fullName, setFullName] = useState(\"\");\r\n\tconst [latestTitle, setLatestTitle] = useState(\"\");\r\n\tconst [currentPage, setCurrentPage] = useState(0);\r\n\tconst pageSize = 1;\r\n\t\r\n\t// Divide the array into pages\r\n\tconst pages = [];\r\n\tfor (let i = 0; i < resultArray.length; i += pageSize) {\r\n\t\tpages.push(resultArray.slice(i, i + pageSize));\r\n\t}\r\n\r\n\tconst userProfile = JSON.parse(JSON.stringify(pages[currentPage]));\r\n\t// const fullName = userProfile[0][\"firstName\"] + \" \" + userProfile[0][\"lastName\"];\r\n\t// const latestTitle = userProfile[0][\"headline\"];\r\n\t// const profileId = userProfile[0][\"profile_id\"];\r\n\t// const summary = userProfile[0][\"summary\"];\r\n\t// const skills = userProfile[0][\"skills\"];\r\n\t// const publicId = userProfile[0][\"public_id\"];\r\n\t// const profileUrn = userProfile[0][\"profile_urn\"];\r\n\r\n\tuseEffect(() => {\r\n\t\tsetFullName( userProfile[0][\"firstName\"] + \" \" + userProfile[0][\"lastName\"] );\r\n\t\tsetLatestTitle( userProfile[0][\"headline\"] );\r\n\t}, [fullName, latestTitle]);\r\n\r\n\tconst handleNextPage = () => {\r\n\t\tif (currentPage < pages.length - 1) {\r\n\t\t\tsetCurrentPage(currentPage + 1);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div id=\"name\">{fullName}</div>\r\n\t\t\t<div id=\"title\">{latestTitle}</div>\r\n\t\t\t<button id=\"next-button\" onClick={handleNextPage}>Next</button>\r\n\t\t</div>\r\n\t);\r\n\t\r\n\t\r\n}\r\nexport default DisplaySearchResults\r\n\r\n// const resultArray = data.result;\r\n\r\n// // console.log(result);\r\n// // return result;\r\n\r\n// document.getElementById(\"linkedin-search-page\").style.display = \"none\";\r\n// document.getElementById(\"linkedin-page\").style.display = \"block\";\r\n\r\n// var myArray = resultArray;\r\n// // var myArray = data.message;\r\n// var pageSize = 1;\r\n// var currentPage = 0;\r\n\r\n// // Divide the array into pages\r\n// var pages = [];\r\n// for (var i = 0; i < myArray.length; i += pageSize) {\r\n\t// pages.push(myArray.slice(i, i + pageSize));\r\n// }\r\n\r\n// var copyProfile = JSON.parse(JSON.stringify(pages[currentPage]));\r\n// var first_name = copyProfile[0]['firstName'] + \" \" + copyProfile[0]['lastName'];\r\n// var first_title = copyProfile[0]['headline'];\r\n// var profileId = copyProfile[0]['profile_id'];\r\n// var summary = copyProfile[0]['summary'];\r\n// var skills = copyProfile[0]['skills'];\r\n// var public_id = copyProfile[0]['public_id'];\r\n// var profileUrn = copyProfile[0]['profile_urn'];\r\n\r\n// document.getElementById(\"name\").innerHTML = first_name;\r\n// document.getElementById(\"title\").innerHTML = first_title;\r\n\r\n// var nextButton = document.getElementById(\"next-button\");\r\n\r\n// nextButton.addEventListener(\"click\", function() {\r\n\t\r\n\t// // Clear\r\n\t// document.getElementById(\"my-textarea\").value = \"\";\r\n\t// document.getElementById(\"CheckboxContainer\").innerHTML = \"\";\r\n\t// document.getElementById(\"InterestsContainer\").innerHTML = \"\";\r\n\t// document.getElementById(\"PeopleInterestsContainer\").innerHTML = \"\";\r\n\t// document.getElementById(\"CompanyInterestsContainer\").innerHTML = \"\";\t\t\t\t\t\r\n\r\n\t// // Increment the current page index\r\n\t// currentPage = (currentPage + 1) % pages.length;\r\n\t// var copyProfile = JSON.parse(JSON.stringify(pages[currentPage]));\r\n\t// var name = copyProfile[0]['firstName'] + \" \" + copyProfile[0]['lastName'];\r\n\t// var title = copyProfile[0]['headline'];\r\n\t// var profileId = copyProfile[0]['profile_id'];\r\n\t// var summary = copyProfile[0]['summary'];\r\n\t// var skills = copyProfile[0]['skills'];\r\n\t// var publicId = copyProfile[0]['public_id'];\r\n\t// var profileUrn = copyProfile[0]['profile_urn'];\r\n\r\n\t// document.getElementById(\"name\").innerHTML = name;\r\n\t// document.getElementById(\"title\").innerHTML = title;\r\n\t\r\n\t// document.getElementById(\"PeopleInterestsButton\").onclick = function() {\r\n\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-people-interests\", {\r\n\t\t\t// method: \"POST\",\r\n\t\t\t// headers: {\r\n\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t// },\r\n\t\t\t// body: JSON.stringify({\r\n\t\t\t\t// email: email,\r\n\t\t\t\t// password: password,\r\n\t\t\t\t// cookie: cookie,\r\n\t\t\t\t// profileUrn: profileUrn\r\n\t\t\t// })\r\n\t\t// })\r\n\t\t// .then(response => response.json())\r\n\t\t// .then(data => {\r\n\t\t\t\r\n\t\t\t// var jobId = data.message;\r\n\t\t\t\r\n\t\t\t// console.log(\"job of people interests\", jobId);\r\n\t\t\t\r\n\t\t\t// function checkJobStatus(jobId) {\r\n\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\r\n\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t// },\r\n\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t// jobId: jobId\r\n\t\t\t\t\t// })\r\n\t\t\t\t// })\r\n\t\t\t\t\r\n\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// const status = data.status;\r\n\t\t\t\t\t// console.log(status);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// if (status === 'finished') {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t// console.log(\"Successfully gotten people interests\", data.result);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// const words = data.result;\r\n\r\n\t\t\t\t\t\t// // var words = data.message;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// var container = document.getElementById('PeopleInterestsContainer');\r\n\r\n\t\t\t\t\t\t// for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t// var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t// checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t// checkbox.value = words[i][0];\r\n\t\t\t\t\t\t\t// checkbox.id = words[i][1];\r\n\t\t\t\t\t\t\t// var label = document.createElement('label');\r\n\t\t\t\t\t\t\t// label.textContent = words[i][0];\r\n\t\t\t\t\t\t\t// label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t// container.appendChild(label);\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t// // The job is not finished yet, check again in 1 second\r\n\t\t\t\t\t\t// setTimeout(() => checkJobStatus(jobId), 1000);\r\n\t\t\t\t\t// }\r\n\t\t\t\t// });\r\n\t\t\t\t\t\r\n\t\t\t// }\r\n\t\t\t// checkJobStatus(data.message);\r\n\t\t\t\t\r\n\t\t// });\r\n\t// }\r\n\t\r\n\t// document.getElementById(\"CompanyInterestsButton\").onclick = function() {\r\n\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-company-interests\", {\r\n\t\t\t// method: \"POST\",\r\n\t\t\t// headers: {\r\n\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t// },\r\n\t\t\t// body: JSON.stringify({\r\n\t\t\t\t// email: email,\r\n\t\t\t\t// password: password,\r\n\t\t\t\t// cookie: cookie,\r\n\t\t\t\t// profileUrn: profileUrn\r\n\t\t\t// })\r\n\t\t// })\r\n\t\t// .then(response => response.json())\r\n\t\t// .then(data => {\r\n\t\t\t\r\n\t\t\t// var jobId = data.message;\r\n\t\t\t\r\n\t\t\t// console.log(\"job of company interests\", jobId);\r\n\t\t\t\r\n\t\t\t// function checkJobStatus(jobId) {\r\n\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\r\n\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t// },\r\n\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t// jobId: jobId\r\n\t\t\t\t\t// })\r\n\t\t\t\t// })\r\n\t\t\t\t\r\n\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// const status = data.status;\r\n\t\t\t\t\t// console.log(status);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// if (status === 'finished') {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t// console.log(\"Successfully gotten company interests\", data.result);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// const words = data.result;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t// var container = document.getElementById('CompanyInterestsContainer');\r\n\r\n\t\t\t\t\t\t// for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t// var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t// checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t// checkbox.value = words[i][0];\r\n\t\t\t\t\t\t\t// checkbox.id = words[i][1];\r\n\t\t\t\t\t\t\t// var label = document.createElement('label');\r\n\t\t\t\t\t\t\t// label.textContent = words[i][0];\r\n\t\t\t\t\t\t\t// label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t// container.appendChild(label);\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t// // The job is not finished yet, check again in 1 second\r\n\t\t\t\t\t\t// setTimeout(() => checkJobStatus(jobId), 1000);\r\n\t\t\t\t\t// }\r\n\t\t\t\t// });\r\n\t\t\t\t\t\r\n\t\t\t// }\r\n\t\t\t// checkJobStatus(data.message);\r\n\t\t\t\t\r\n\t\t// });\r\n\t\r\n\t// }\r\n\t// document.getElementById(\"GenerateConnectNoteButton\").onclick = function() {\r\n\t\t// var checkboxes = document.querySelectorAll('input[type=checkbox]');\r\n\t\t// var topicList = [];\r\n\t\t// for (var i = 0; i < checkboxes.length; i++) {\r\n\t\t\t// if (checkboxes[i].checked) {\r\n\t\t\t\t// var topic = checkboxes[i].value;\r\n\t\t\t\t// topicList.push(topic);\r\n\t\t\t// }\r\n\t\t// }\r\n\t\t// var topicListString = topicList.toString();\r\n\r\n\t\t// var prompt_string = \"This is the profile of a person: \" + \"\\n\" + name \r\n\t\t// + \" This is their summary: \" + summary +\r\n\t\t// \" These are their interests: \" + topicListString \r\n\t\t// + \" Use the internet to get something useful about the interests and use it in the request. \"\r\n\t\t// + \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\r\n\t\t\r\n\t\t// // console.log(prompt_string);\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/use-bingai\", {\r\n\t\t\t// method: \"POST\",\r\n\t\t\t// headers: {\r\n\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t// },\r\n\t\t\t// body: JSON.stringify({\r\n\t\t\t\t// prompt: prompt_string\r\n\t\t\t// })\r\n\t\t// })\r\n\t\t// .then(response => response.json())\r\n\t\t// .then(data => {\r\n\t\t\t\r\n\t\t\t// console.log(data.message);\r\n\t\t\t\r\n\t\t\t// document.getElementById(\"my-textarea\").value = data.message;\r\n\t\t\t\r\n\r\n\t\t// }).catch(error => console.error(error));\r\n\r\n\t// }\r\n\r\n\t// document.getElementById(\"send-button\").onclick = function() {\r\n\r\n\t\t// // fetch to server.js, with profileId and text\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/send-connect\", {\r\n\t\t\t\t// method: \"POST\",\r\n\t\t\t\t// headers: {\r\n\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t// },\r\n\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t// email: email,\r\n\t\t\t\t\t// password: password,\r\n\t\t\t\t\t// cookie: cookie,\r\n\t\t\t\t\t// profileId: profileId,\r\n\t\t\t\t\t// text: document.getElementById(\"my-textarea\").value\r\n\t\t\t\t// })\r\n\t\t\t// })\r\n\t\t\t// .then(response => response.json())\r\n\t\t\t// .then(data => {\r\n\t\t\t\t// console.log(\"Successfully sent connect to server\", data.message);\r\n\t\t\t// });\r\n\t// }\r\n\t\r\n\t\r\n// });\r\n\r\n// // document.getElementById(\"InterestsButton\").onclick = function() {\r\n\r\n\t\t// // fetch(\"https://ai-assistant.herokuapp.com/get-interests\", {\r\n\t\t\t\t// // method: \"POST\",\r\n\t\t\t\t// // headers: {\r\n\t\t\t\t\t// // \"Content-Type\": \"application/json\"\r\n\t\t\t\t// // },\r\n\t\t\t\t// // body: JSON.stringify({\r\n\t\t\t\t\t// // email: email,\r\n\t\t\t\t\t// // password: password,\r\n\t\t\t\t\t// // publicId: publicId\r\n\t\t\t\t// // })\r\n\t\t\t// // })\r\n\t\t\t// // .then(response => response.json())\r\n\t\t\t// // .then(data => {\r\n\t\t\t\t// // console.log(\"Successfully gotten interests\", data.message);\r\n\r\n\t\t\t\t// // var words = data.message;\r\n\t\t\t\t// // var container = document.getElementById('CheckboxContainer');\r\n\r\n\t\t\t\t// // for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t// // var checkbox = document.createElement('input');\r\n\t\t\t\t\t// // checkbox.type = 'checkbox';\r\n\t\t\t\t\t// // checkbox.value = words[i];\r\n\t\t\t\t\t// // var label = document.createElement('label');\r\n\t\t\t\t\t// // label.textContent = words[i];\r\n\t\t\t\t\t// // label.appendChild(checkbox);\r\n\t\t\t\t\t// // container.appendChild(label);\r\n\t\t\t\t// // }\r\n\t\t\t// // });\r\n\t// // }\r\n\t\r\n\t// document.getElementById(\"PeopleInterestsButton\").onclick = function() {\r\n\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-people-interests\", {\r\n\t\t\t// method: \"POST\",\r\n\t\t\t// headers: {\r\n\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t// },\r\n\t\t\t// body: JSON.stringify({\r\n\t\t\t\t// email: email,\r\n\t\t\t\t// password: password,\r\n\t\t\t\t// cookie: cookie,\r\n\t\t\t\t// profileUrn: profileUrn\r\n\t\t\t// })\r\n\t\t// })\r\n\t\t// .then(response => response.json())\r\n\t\t// .then(data => {\r\n\t\t\t\r\n\t\t\t// var jobId = data.message;\r\n\t\t\t\r\n\t\t\t// console.log(\"job of people interests\", jobId);\r\n\t\t\t\r\n\t\t\t// function checkJobStatus(jobId) {\r\n\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\r\n\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t// },\r\n\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t// jobId: jobId\r\n\t\t\t\t\t// })\r\n\t\t\t\t// })\r\n\t\t\t\t\r\n\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// const status = data.status;\r\n\t\t\t\t\t// console.log(status);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// if (status === 'finished') {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t// console.log(\"Successfully gotten people interests\", data.result);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// const words = data.result;\r\n\r\n\t\t\t\t\t\t// // var words = data.message;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// var container = document.getElementById('PeopleInterestsContainer');\r\n\r\n\t\t\t\t\t\t// for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t// var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t// checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t// checkbox.value = words[i][0];\r\n\t\t\t\t\t\t\t// checkbox.id = words[i][1];\r\n\t\t\t\t\t\t\t// var label = document.createElement('label');\r\n\t\t\t\t\t\t\t// label.textContent = words[i][0];\r\n\t\t\t\t\t\t\t// label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t// container.appendChild(label);\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t// // The job is not finished yet, check again in 1 second\r\n\t\t\t\t\t\t// setTimeout(() => checkJobStatus(jobId), 1000);\r\n\t\t\t\t\t// }\r\n\t\t\t\t// });\r\n\t\t\t\t\t\r\n\t\t\t// }\r\n\t\t\t// checkJobStatus(data.message);\r\n\t\t\t\t\r\n\t\t// });\r\n\t// }\r\n\t\r\n\t// document.getElementById(\"CompanyInterestsButton\").onclick = function() {\r\n\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-company-interests\", {\r\n\t\t\t// method: \"POST\",\r\n\t\t\t// headers: {\r\n\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t// },\r\n\t\t\t// body: JSON.stringify({\r\n\t\t\t\t// email: email,\r\n\t\t\t\t// password: password,\r\n\t\t\t\t// cookie: cookie,\r\n\t\t\t\t// profileUrn: profileUrn\r\n\t\t\t// })\r\n\t\t// })\r\n\t\t// .then(response => response.json())\r\n\t\t// .then(data => {\r\n\t\t\t\r\n\t\t\t// var jobId = data.message;\r\n\t\t\t\r\n\t\t\t// console.log(\"job of company interests\", jobId);\r\n\t\t\t\r\n\t\t\t// function checkJobStatus(jobId) {\r\n\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\r\n\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t// },\r\n\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t// jobId: jobId\r\n\t\t\t\t\t// })\r\n\t\t\t\t// })\r\n\t\t\t\t\r\n\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// const status = data.status;\r\n\t\t\t\t\t// console.log(status);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// if (status === 'finished') {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t// console.log(\"Successfully gotten company interests\", data.result);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// const words = data.result;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t// var container = document.getElementById('CompanyInterestsContainer');\r\n\r\n\t\t\t\t\t\t// for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t// var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t// checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t// checkbox.value = words[i][0];\r\n\t\t\t\t\t\t\t// checkbox.id = words[i][1];\r\n\t\t\t\t\t\t\t// var label = document.createElement('label');\r\n\t\t\t\t\t\t\t// label.textContent = words[i][0];\r\n\t\t\t\t\t\t\t// label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t// container.appendChild(label);\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t// // The job is not finished yet, check again in 1 second\r\n\t\t\t\t\t\t// setTimeout(() => checkJobStatus(jobId), 1000);\r\n\t\t\t\t\t// }\r\n\t\t\t\t// });\r\n\t\t\t\t\t\r\n\t\t\t// }\r\n\t\t\t// checkJobStatus(data.message);\r\n\t\t\t\t\r\n\t\t// });\r\n\t\r\n\t// }\r\n\r\n\t// document.getElementById(\"GenerateConnectNoteButton\").onclick = function() {\r\n\t\t// var checkboxes = document.querySelectorAll('input[type=checkbox]');\r\n\t\t// var topicList = [];\r\n\t\t// for (var i = 0; i < checkboxes.length; i++) {\r\n\t\t\t// if (checkboxes[i].checked) {\r\n\t\t\t\t// var topic = checkboxes[i].value;\r\n\t\t\t\t// topicList.push(topic);\r\n\t\t\t// }\r\n\t\t// }\r\n\t\t// var topicListString = topicList.toString();\r\n\r\n\t\t// var prompt_string = \"This is the profile of a person: \" + \"\\n\" + first_name \r\n\t\t// + \" This is their summary: \" + summary +\r\n\t\t// \" These are their interests: \" + topicListString \r\n\t\t// + \" Use the internet to get something useful about the interests and use it in the request. \"\r\n\t\t// + \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\r\n\t\t\r\n\t\t// // console.log(prompt_string);\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/use-bingai\", {\r\n\t\t\t// method: \"POST\",\r\n\t\t\t// headers: {\r\n\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t// },\r\n\t\t\t// body: JSON.stringify({\r\n\t\t\t\t// prompt: prompt_string\r\n\t\t\t// })\r\n\t\t// })\r\n\t\t// .then(response => response.json())\r\n\t\t// .then(data => {\r\n\t\t\t\r\n\t\t\t// console.log(data.message);\r\n\t\t\t\r\n\t\t\t// document.getElementById(\"my-textarea\").value = data.message;\r\n\t\t\t\r\n\r\n\t\t// }).catch(error => console.error(error));\r\n\r\n\t// }\r\n\r\n\t// document.getElementById(\"send-button\").onclick = function() {\r\n\r\n\t\t// // fetch to server.js, with profileId and text\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/send-connect\", {\r\n\t\t\t\t// method: \"POST\",\r\n\t\t\t\t// headers: {\r\n\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t// },\r\n\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t// email: email,\r\n\t\t\t\t\t// password: password,\r\n\t\t\t\t\t// cookie: cookie,\r\n\t\t\t\t\t// profileId: profileId,\r\n\t\t\t\t\t// text: document.getElementById(\"my-textarea\").value\r\n\t\t\t\t// })\r\n\t\t\t// })\r\n\t\t\t// .then(response => response.json())\r\n\t\t\t// .then(data => {\r\n\t\t\t\t// console.log(\"Successfully sent connect to server\", data.message);\r\n\t\t\t// });\r\n\t// }\r\n"],"mappings":"mJAAA,iBACA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,CAAEC,SAAS,KAAO,OAAO,CAChD,MAAO,CAAAC,aAAa,KAAM,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE/C,QAAS,CAAAC,oBAAoBA,CAACC,KAAK,CAAE,CAEpC,GAAO,CAAAC,WAAW,CAAID,KAAK,CAApBC,WAAW,CAClB,IAAAC,SAAA,CAAgCV,QAAQ,CAAC,EAAE,CAAC,CAAAW,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAArCG,QAAQ,CAAAF,UAAA,IAAEG,WAAW,CAAAH,UAAA,IAC5B,IAAAI,UAAA,CAAsCf,QAAQ,CAAC,EAAE,CAAC,CAAAgB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA3CE,WAAW,CAAAD,UAAA,IAAEE,cAAc,CAAAF,UAAA,IAClC,IAAAG,UAAA,CAAsCnB,QAAQ,CAAC,CAAC,CAAC,CAAAoB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAA1CE,WAAW,CAAAD,UAAA,IAAEE,cAAc,CAAAF,UAAA,IAClC,GAAM,CAAAG,QAAQ,CAAG,CAAC,CAElB;AACA,GAAM,CAAAC,KAAK,CAAG,EAAE,CAChB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGhB,WAAW,CAACiB,MAAM,CAAED,CAAC,EAAIF,QAAQ,CAAE,CACtDC,KAAK,CAACG,IAAI,CAAClB,WAAW,CAACmB,KAAK,CAACH,CAAC,CAAEA,CAAC,CAAGF,QAAQ,CAAC,CAAC,CAC/C,CAEA,GAAM,CAAAM,WAAW,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACR,KAAK,CAACH,WAAW,CAAC,CAAC,CAAC,CAClE;AACA;AACA;AACA;AACA;AACA;AACA;AAEApB,SAAS,CAAC,UAAM,CACfa,WAAW,CAAEe,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAG,GAAG,CAAGA,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAE,CAC7EX,cAAc,CAAEW,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAE,CAC7C,CAAC,CAAE,CAAChB,QAAQ,CAAEI,WAAW,CAAC,CAAC,CAE3B,GAAM,CAAAgB,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAA,CAAS,CAC5B,GAAIZ,WAAW,CAAGG,KAAK,CAACE,MAAM,CAAG,CAAC,CAAE,CACnCJ,cAAc,CAACD,WAAW,CAAG,CAAC,CAAC,CAChC,CACD,CAAC,CAED,mBACCf,KAAA,QAAA4B,QAAA,eACC9B,IAAA,QAAK+B,EAAE,CAAC,MAAM,CAAAD,QAAA,CAAErB,QAAQ,EAAO,cAC/BT,IAAA,QAAK+B,EAAE,CAAC,OAAO,CAAAD,QAAA,CAAEjB,WAAW,EAAO,cACnCb,IAAA,WAAQ+B,EAAE,CAAC,aAAa,CAACC,OAAO,CAAEH,cAAe,CAAAC,QAAA,CAAC,MAAI,EAAS,GAC1D,CAIR,CACA,cAAe,CAAA3B,oBAAoB,CAEn},"metadata":{},"sourceType":"module","externalDependencies":[]}