{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\farha\\\\OneDrive\\\\Desktop\\\\sak-productivity-suite\\\\client\\\\src\\\\DisplayThread.js\",\n  _s = $RefreshSig$();\n/*global chrome*/\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DisplayThread(props) {\n  _s();\n  const {\n    cookie,\n    threadName,\n    threadId\n  } = props;\n  const [convoArray, setConvoArray] = useState([]);\n  const [replyTextArea, setReplyTextArea] = useState([]);\n  useEffect(() => {\n    const handleGetSingleThread = async () => {\n      const response = await fetch('https://sak-productivity-suite.herokuapp.com/get-convo-messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cookie: cookie,\n          profileUrn: threadId\n        })\n      });\n      const data = await response.json();\n      const thread = data.message;\n      setConvoArray(thread);\n    };\n    handleGetSingleThread();\n  }, []);\n  const handleMakingReply = async () => {\n    const prompt = \"Reply to this: \" + convoArray;\n    try {\n      const response = await fetch(\"https://sak-productivity-suite.herokuapp.com/use-bingai\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt: prompt\n        })\n      });\n      const data = await response.json();\n      setReplyTextArea(data.message);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleSendingMessage = async () => {\n    try {\n      const response = await fetch(\"https://sak-productivity-suite.herokuapp.com/send-message\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          cookie: cookie,\n          profileId: threadId,\n          text: replyTextArea\n        })\n      });\n      const data = await response.json();\n      console.log(\"Successfully sent the message to the person\", data.message);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleReplyTextAreaChange = event => {\n    setReplyTextArea(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: threadName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: convoArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: replyTextArea,\n      onChange: handleReplyTextAreaChange,\n      placeholder: \"The generated note will appear here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMakingReply,\n      children: \"Reply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendingMessage,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 3\n  }, this);\n}\n_s(DisplayThread, \"iocyVhoQtvupwde+DIumNQvW8dQ=\");\n_c = DisplayThread;\nexport default DisplayThread;\nvar _c;\n$RefreshReg$(_c, \"DisplayThread\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DisplayThread","props","_s","cookie","threadName","threadId","convoArray","setConvoArray","replyTextArea","setReplyTextArea","handleGetSingleThread","response","fetch","method","headers","body","JSON","stringify","profileUrn","data","json","thread","message","handleMakingReply","prompt","error","console","log","handleSendingMessage","profileId","text","handleReplyTextAreaChange","event","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/farha/OneDrive/Desktop/sak-productivity-suite/client/src/DisplayThread.js"],"sourcesContent":["/*global chrome*/\r\nimport React, {useState, useEffect} from \"react\";\r\n\r\nfunction DisplayThread(props) {\r\n\t\r\n\tconst {cookie, threadName, threadId} = props;\t\r\n\tconst [convoArray, setConvoArray] = useState([]);\r\n\tconst [replyTextArea, setReplyTextArea] = useState([]);\r\n\r\n\tuseEffect( () => {\r\n\t\t\r\n\t\tconst handleGetSingleThread = async () => {\r\n\t\t\r\n\t\t\tconst response = await fetch('https://sak-productivity-suite.herokuapp.com/get-convo-messages', {\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tcookie: cookie,\r\n\t\t\t\t\tprofileUrn: threadId\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst thread = data.message;\r\n\t\t\tsetConvoArray(thread);\r\n\t\t};\t\r\n\t\thandleGetSingleThread();\r\n\t}, []);\r\n\t\r\n\tconst handleMakingReply = async() => {\r\n\t\tconst prompt = \"Reply to this: \" + convoArray;\r\n\t\t\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/use-bingai\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tprompt: prompt\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tconst data = await response.json();\r\n\t\t\tsetReplyTextArea(data.message);\t\t\t\r\n\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleSendingMessage = async () => {\r\n\t\t\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/send-message\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tcookie: cookie,\r\n\t\t\t\t\tprofileId: threadId,\r\n\t\t\t\t\ttext: replyTextArea\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconsole.log(\"Successfully sent the message to the person\", data.message);\r\n\t\t\t\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleReplyTextAreaChange = (event) => {\r\n\t\tsetReplyTextArea(event.target.value);\r\n\t};\r\n\t\t\r\n\treturn (\r\n\t\t<div>\r\n            <h1>{threadName}</h1>\r\n\t\t\t<p>{convoArray}</p>\r\n            <textarea value={replyTextArea} onChange={handleReplyTextAreaChange} placeholder=\"The generated note will appear here\"></textarea>\r\n            <button onClick={handleMakingReply}>Reply</button>\r\n            <button onClick={handleSendingMessage}>Send Message</button>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\nexport default DisplayThread;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}