{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\farha\\\\OneDrive\\\\Documents\\\\sak-productivity-suite\\\\client\\\\src\\\\DisplaySearchResults.js\",\n  _s = $RefreshSig$();\n/*global chrome*/\nimport React, { useState, useEffect } from \"react\";\nimport { CheckJobStatus } from \"./CheckJobStatus.js\";\nimport ProfileSearch from \"./ProfileSearch.js\";\nimport loadingGif from \"./loading.gif\";\n\n// TODO: \n// Move peopleInterests, companyInterests and activityInterests to 3 separate components\n// Move making note to a separate component\n\n// Next button still clickable at the last page\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DisplaySearchResults(props) {\n  _s();\n  const {\n    cookie,\n    resultArray\n  } = props;\n  const [userProfile, setUserProfile] = useState([]);\n  const [pageArray, setPageArray] = useState([]);\n  const [pageIndex, setPageIndex] = useState(0);\n  const [fullName, setFullName] = useState(\"\");\n  const [latestTitle, setLatestTitle] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n  const [skills, setSkills] = useState(\"\");\n  const [publicId, setPublicId] = useState(\"\");\n  const [profileUrn, setProfileUrn] = useState(\"\");\n  const [noteTextArea, setNoteTextArea] = useState(\"\");\n  const [interests, setInterests] = useState(\"\");\n  const [peopleInterestsArray, setPeopleInterestsArray] = useState([]);\n  const [companyInterestsArray, setCompanyInterestsArray] = useState([]);\n  const [activityInterestsArray, setActivityInterestsArray] = useState([]);\n  const [selectedInterests, setSelectedInterests] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    // Divide the array into pages\n    const pageSize = 1;\n    const pageArray = [];\n    for (let i = 0; i < resultArray.length; i += pageSize) {\n      pageArray.push(resultArray.slice(i, i + pageSize));\n    }\n    setPageArray(pageArray);\n  }, [resultArray]);\n  useEffect(() => {\n    if (pageArray[pageIndex]) {\n      const userProfile = pageArray[pageIndex][0];\n      setUserProfile(userProfile);\n      setFullName(userProfile[\"full_name\"]);\n      setLatestTitle(userProfile[\"latest_title\"]);\n      setPublicId(userProfile[\"public_id\"]);\n      setProfileUrn(userProfile[\"profile_urn\"]);\n      setNoteTextArea(\"\");\n      setPeopleInterestsArray([]);\n      setCompanyInterestsArray([]);\n      setActivityInterestsArray([]);\n      setSelectedInterests(\"\");\n    }\n  }, [pageIndex, pageArray]);\n  const handleNextPage = () => {\n    if (pageIndex < pageArray.length - 1) {\n      setPageIndex(pageIndex + 1);\n    }\n  };\n  const handleGettingPeopleInterests = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-people-interests\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          cookie: cookie,\n          profileUrn: profileUrn\n        })\n      });\n      const data = await response.json();\n      const jobId = data.message;\n      CheckJobStatus(jobId, peopleInterestsArray => {\n        setIsLoading(false);\n        setPeopleInterestsArray(peopleInterestsArray);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleGettingCompanyInterests = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-company-interests\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          cookie: cookie,\n          profileUrn: profileUrn,\n          publicId: publicId\n        })\n      });\n      const data = await response.json();\n      const jobId = data.message;\n      CheckJobStatus(jobId, companyInterestsArray => {\n        setIsLoading(false);\n        setCompanyInterestsArray(companyInterestsArray);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // const handleGettingActivityInterests = () => {\n  // // TODO\n  // };\n\n  const handleInterestsSelection = event => {\n    var selections = event.target.options;\n    const updatedInterestsArray = [];\n    for (var i = 0; i < selections.length; i++) {\n      if (selections[i].selected) {\n        updatedInterestsArray.push(selections[i].value);\n      }\n    }\n    setSelectedInterests(updatedInterestsArray);\n  };\n  const handleMakingConnectNote = async () => {\n    const prompt = \"This is the profile of a person: \" + \"\\n\" + fullName + \" This is their summary: \" + summary + \" These are their interests: \" + selectedInterests + \" Use the internet to get something useful about the interests and use it in the request. \" + \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\n    setIsLoading(true);\n    try {\n      const response = await fetch(\"https://sak-productivity-suite.herokuapp.com/use-bingai\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          prompt: prompt\n        })\n      });\n      const data = await response.json();\n      const jobId = data.message;\n      CheckJobStatus(jobId, resultArray => {\n        setIsLoading(false);\n        setNoteTextArea(resultArray);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleSendingConnectNote = async () => {\n    try {\n      const response = await fetch(\"https://sak-productivity-suite.herokuapp.com/send-connect\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          cookie: cookie,\n          publicId: publicId,\n          text: noteTextArea\n        })\n      });\n      const data = await response.json();\n      console.log(\"Successfully sent the connect note to the person\", data.message);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleNoteTextAreaChange = event => {\n    setNoteTextArea(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: fullName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: latestTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: noteTextArea,\n      onChange: handleNoteTextAreaChange,\n      placeholder: \"The generated note will appear here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: interests\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 4\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: loadingGif,\n      alt: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGettingPeopleInterests,\n      children: \"Get people interests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGettingCompanyInterests,\n      children: \"Get company interests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextPage,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMakingConnectNote,\n      children: \"Make Connect Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendingConnectNote,\n      children: \"Send Connect Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 4\n    }, this), peopleInterestsArray.length > 0 && /*#__PURE__*/_jsxDEV(\"select\", {\n      multiple: true,\n      onChange: handleInterestsSelection,\n      children: peopleInterestsArray.map(interest => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: interest[0]\n      }, interest, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 5\n    }, this), companyInterestsArray.length > 0 && /*#__PURE__*/_jsxDEV(\"select\", {\n      multiple: true,\n      onChange: handleInterestsSelection,\n      children: companyInterestsArray.map(interest => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: interest[0]\n      }, interest, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 5\n    }, this), activityInterestsArray.length > 0 && /*#__PURE__*/_jsxDEV(\"select\", {\n      multiple: true,\n      onChange: handleInterestsSelection,\n      children: activityInterestsArray.map(interest => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: interest[0]\n      }, interest, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 3\n  }, this);\n}\n_s(DisplaySearchResults, \"OhWh/2z9opjkQw8FTYI0q0gtCkE=\");\n_c = DisplaySearchResults;\nexport default DisplaySearchResults;\nvar _c;\n$RefreshReg$(_c, \"DisplaySearchResults\");","map":{"version":3,"names":["React","useState","useEffect","CheckJobStatus","ProfileSearch","loadingGif","jsxDEV","_jsxDEV","DisplaySearchResults","props","_s","cookie","resultArray","userProfile","setUserProfile","pageArray","setPageArray","pageIndex","setPageIndex","fullName","setFullName","latestTitle","setLatestTitle","summary","setSummary","skills","setSkills","publicId","setPublicId","profileUrn","setProfileUrn","noteTextArea","setNoteTextArea","interests","setInterests","peopleInterestsArray","setPeopleInterestsArray","companyInterestsArray","setCompanyInterestsArray","activityInterestsArray","setActivityInterestsArray","selectedInterests","setSelectedInterests","isLoading","setIsLoading","pageSize","i","length","push","slice","handleNextPage","handleGettingPeopleInterests","response","fetch","method","headers","body","JSON","stringify","data","json","jobId","message","error","console","handleGettingCompanyInterests","handleInterestsSelection","event","selections","target","options","updatedInterestsArray","selected","value","handleMakingConnectNote","prompt","log","handleSendingConnectNote","text","handleNoteTextAreaChange","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","src","alt","onClick","multiple","map","interest","_c","$RefreshReg$"],"sources":["C:/Users/farha/OneDrive/Documents/sak-productivity-suite/client/src/DisplaySearchResults.js"],"sourcesContent":["/*global chrome*/\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {CheckJobStatus} from \"./CheckJobStatus.js\";\r\nimport ProfileSearch from \"./ProfileSearch.js\";\r\nimport loadingGif from \"./loading.gif\";\r\n\r\n// TODO: \r\n// Move peopleInterests, companyInterests and activityInterests to 3 separate components\r\n// Move making note to a separate component\r\n\r\n// Next button still clickable at the last page\r\n\r\nfunction DisplaySearchResults(props) {\r\n\t\r\n\tconst {cookie, resultArray} = props;\r\n\t\r\n\tconst [userProfile, setUserProfile] = useState([]);\r\n\tconst [pageArray, setPageArray] = useState([]);\r\n\tconst [pageIndex, setPageIndex] = useState(0);\r\n\t\r\n\tconst [fullName, setFullName] = useState(\"\");\r\n\tconst [latestTitle, setLatestTitle] = useState(\"\");\r\n\tconst [summary, setSummary] = useState(\"\");\r\n\tconst [skills, setSkills] = useState(\"\");\r\n\tconst [publicId, setPublicId] = useState(\"\");\r\n\tconst [profileUrn, setProfileUrn] = useState(\"\");\r\n\tconst [noteTextArea, setNoteTextArea] = useState(\"\"); \r\n\t\r\n\tconst [interests, setInterests] = useState(\"\"); \r\n\t\r\n\tconst [peopleInterestsArray, setPeopleInterestsArray] = useState([]);\t\r\n\tconst [companyInterestsArray, setCompanyInterestsArray] = useState([]);\t\r\n\tconst [activityInterestsArray, setActivityInterestsArray] = useState([]);\r\n\t\r\n\tconst [selectedInterests, setSelectedInterests] = useState(\"\");\r\n\t\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\t\r\n\tuseEffect(() => {\r\n\t\t// Divide the array into pages\r\n\t\tconst pageSize = 1;\r\n\t\tconst pageArray = [];\r\n\t\tfor (let i = 0; i < resultArray.length; i += pageSize) {\r\n\t\t\tpageArray.push(resultArray.slice(i, i + pageSize));\r\n\t\t}\r\n\t\tsetPageArray(pageArray);\r\n\t}, [resultArray]);\t\r\n\t\r\n\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tif (pageArray[pageIndex]) {\r\n\t\t\r\n\t\t\tconst userProfile = pageArray[pageIndex][0];\r\n\t\t\tsetUserProfile(userProfile);\r\n\t\t\t\r\n\t\t\tsetFullName(userProfile[\"full_name\"]);\r\n\t\t\tsetLatestTitle(userProfile[\"latest_title\"]);\r\n\t\t\tsetPublicId(userProfile[\"public_id\"]);\r\n\t\t\tsetProfileUrn(userProfile[\"profile_urn\"]);\r\n\t\t\t\r\n\t\t\tsetNoteTextArea(\"\");\r\n\t\t\t\r\n\t\t\tsetPeopleInterestsArray([]);\r\n\t\t\tsetCompanyInterestsArray([]);\r\n\t\t\tsetActivityInterestsArray([]);\r\n\t\t\t\r\n\t\t\tsetSelectedInterests(\"\");\r\n\t\t}\r\n\t\t\r\n\t}, [pageIndex, pageArray]);\r\n\r\n\tconst handleNextPage = () => {\r\n\t\tif (pageIndex < pageArray.length - 1) {\r\n\t\t\tsetPageIndex(pageIndex + 1);\r\n\t\t}\r\n\t};\r\n\t\t\r\n\tconst handleGettingPeopleInterests = async () => {\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-people-interests\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tcookie: cookie,\r\n\t\t\t\t\tprofileUrn: profileUrn\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tconst data = await response.json();\t\t\t\r\n\t\t\tconst jobId = data.message;\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId, (peopleInterestsArray) => {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\tsetPeopleInterestsArray(peopleInterestsArray);\t\r\n\t\t\t});\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleGettingCompanyInterests = async () => {\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-company-interests\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tcookie: cookie,\r\n\t\t\t\t\tprofileUrn: profileUrn,\r\n\t\t\t\t\tpublicId: publicId\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst jobId = data.message;\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId, (companyInterestsArray) => {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\tsetCompanyInterestsArray(companyInterestsArray);\t\r\n\t\t\t});\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\t// const handleGettingActivityInterests = () => {\r\n\t\t// // TODO\r\n\t// };\r\n\t\r\n\tconst handleInterestsSelection = (event) => {\r\n\t\t\r\n\t\tvar selections = event.target.options;\r\n\t\tconst updatedInterestsArray = [];\r\n\t\tfor (var i = 0; i < selections.length; i++){\r\n\t\t\tif(selections[i].selected){\r\n\t\t\t\tupdatedInterestsArray.push(selections[i].value);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tsetSelectedInterests(updatedInterestsArray);\r\n\t}\r\n\t\r\n\tconst handleMakingConnectNote = async () => {\r\n\t\t\r\n\t\tconst prompt = \"This is the profile of a person: \" + \"\\n\" + fullName \r\n\t\t+ \" This is their summary: \" + summary +\r\n\t\t\" These are their interests: \" + selectedInterests \r\n\t\t+ \" Use the internet to get something useful about the interests and use it in the request. \"\r\n\t\t+ \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/use-bingai\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tprompt: prompt\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst jobId = data.message;\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId, (resultArray) => {\r\n\t\t\t\tsetIsLoading(false);\t\r\n\t\t\t\tsetNoteTextArea(resultArray);\t\r\n\t\t\t});\r\n\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleSendingConnectNote = async () => {\r\n\t\t\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/send-connect\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tcookie: cookie,\r\n\t\t\t\t\tpublicId: publicId,\r\n\t\t\t\t\ttext: noteTextArea\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconsole.log(\"Successfully sent the connect note to the person\", data.message);\r\n\t\t\t\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleNoteTextAreaChange = (event) => {\r\n\t\tsetNoteTextArea(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>{fullName}</div>\r\n\t\t\t<div>{latestTitle}</div>\r\n\t\t\t<textarea value={noteTextArea} onChange={handleNoteTextAreaChange} placeholder=\"The generated note will appear here\"></textarea>\t\r\n\r\n\t\t\t<div>{interests}</div>\r\n\r\n\t\t\t{isLoading && <img src={loadingGif} alt=\"loading\" />}\r\n\r\n\t\t\t<button onClick={handleGettingPeopleInterests}>\r\n\t\t\t\tGet people interests\r\n\t\t\t</button>\r\n\t\t\t<button onClick={handleGettingCompanyInterests}>\r\n\t\t\t\tGet company interests\r\n\t\t\t</button>\r\n\t\t\t{/*<button onClick={handleGettingActivityInterests}>\r\n\t\t\t\tGet interests from Linkedin activity\r\n\t\t\t</button>*/}\r\n\t\t\t<button onClick={handleNextPage}>\r\n\t\t\t\tNext\r\n\t\t\t</button>\r\n\t\t\t<button onClick={handleMakingConnectNote}>\r\n\t\t\t\tMake Connect Note\r\n\t\t\t</button>\r\n\t\t\t<button onClick={handleSendingConnectNote}>\r\n\t\t\t\tSend Connect Note\r\n\t\t\t</button>\r\n\t\t\r\n\t\t\t{peopleInterestsArray.length > 0 && (\r\n\r\n\t\t\t\t<select multiple onChange={handleInterestsSelection} >\r\n\t\t\t\t\r\n\t\t\t\t\t{peopleInterestsArray.map( (interest) => (\r\n\t\t\t\t\t\t<option key={interest}>{interest[0]}</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t)}\r\n\r\n\t\t\t{companyInterestsArray.length > 0 && (\r\n\t\t\t\t\r\n\t\t\t\t<select multiple onChange={handleInterestsSelection} >\r\n\t\t\t\t\r\n\t\t\t\t\t{companyInterestsArray.map( (interest) => (\r\n\t\t\t\t\t\t<option key={interest}>{ interest[0] }</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t)}\r\n\t\t\t\r\n\t\t\t{activityInterestsArray.length > 0 && (\r\n\t\t\t\r\n\t\t\t\t<select multiple onChange={handleInterestsSelection} >\r\n\t\t\t\t\r\n\t\t\t\t\t{activityInterestsArray.map( (interest) => (\r\n\t\t\t\t\t\t<option key={interest}>{ interest[0] }</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t)}\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default DisplaySearchResults;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}