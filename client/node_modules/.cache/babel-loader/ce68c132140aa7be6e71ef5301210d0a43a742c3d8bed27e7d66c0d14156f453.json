{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/farha/OneDrive/Documents/sak-productivity-suite/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/farha/OneDrive/Documents/sak-productivity-suite/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/farha/OneDrive/Documents/sak-productivity-suite/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{useNavigate}from'react-router-dom';import Button from'react-bootstrap/Button';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Home(props){var sessionId=props.sessionId;console.log(\"Home sessionId: \",sessionId);// Need to get this information, for now backend is not returning it\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),summary=_useState2[0],setSummary=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),skills=_useState4[0],setSkills=_useState4[1];// Need to get this information, for now backend is not returning it\nvar _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),noteTextArea=_useState6[0],setNoteTextArea=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),peopleInterestsArray=_useState8[0],setPeopleInterestsArray=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),companyInterestsArray=_useState10[0],setCompanyInterestsArray=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),activityInterestsArray=_useState12[0],setActivityInterestsArray=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),selectedInterests=_useState14[0],setSelectedInterests=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),isLoading=_useState16[0],setIsLoading=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),showProfileArea=_useState18[0],setShowProfileArea=_useState18[1];var _useState19=useState([]),_useState20=_slicedToArray(_useState19,2),profileInfoArray=_useState20[0],setProfileInfoArray=_useState20[1];var _useState21=useState(\"\"),_useState22=_slicedToArray(_useState21,2),selectedName=_useState22[0],setSelectedName=_useState22[1];var _useState23=useState(\"\"),_useState24=_slicedToArray(_useState23,2),leads=_useState24[0],setLeads=_useState24[1];// resultArray[i][\"full_name\"],\n// resultArray[i][\"latest_title\"],\n// resultArray[i][\"profile_id\"],\n// resultArray[i][\"public_id\"],\n// resultArray[i][\"profile_urn\"]\n// TODO: show leads, create List group of leads\n// Have a button that gets all of the interests and creates connect note\n// Save leads to database\nvar handleGettingLeads=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"https://sak-productivity-suite.herokuapp.com/get-leads\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({sessionId:sessionId})});case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;console.log(\"Successfully gotten leads: \",data.message);setLeads(data.message);_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 14:case\"end\":return _context.stop();}},_callee,null,[[0,11]]);}));return function handleGettingLeads(){return _ref.apply(this,arguments);};}();// useEffect(() => {\n// \t// Change temp to JSON \n// \tconst temp = []\n// \tfor (let i = 0; i < resultArray.length; i += 1) {\n// \t\ttemp.push([ \n// \t\t\tresultArray[i][\"full_name\"],\n// \t\t\tresultArray[i][\"latest_title\"],\n// \t\t\tresultArray[i][\"profile_id\"],\n// \t\t\tresultArray[i][\"public_id\"],\n// \t\t\tresultArray[i][\"profile_urn\"]\n// \t\t])\n// \t}\n// \tsetProfileInfoArray(temp);\n// }, [resultArray]);\t\nvar handleGettingPeopleInterests=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(sessionId,profileUrn){var response,data,jobId;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:setIsLoading(true);_context2.prev=1;_context2.next=4;return fetch(\"https://sak-productivity-suite.herokuapp.com/get-people-interests\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({sessionId:sessionId,profileUrn:profileUrn})});case 4:response=_context2.sent;_context2.next=7;return response.json();case 7:data=_context2.sent;jobId=data.message;CheckJobStatus(jobId,function(peopleInterestsArray){setIsLoading(false);setPeopleInterestsArray(peopleInterestsArray);});_context2.next=15;break;case 12:_context2.prev=12;_context2.t0=_context2[\"catch\"](1);console.error(_context2.t0);case 15:case\"end\":return _context2.stop();}},_callee2,null,[[1,12]]);}));return function handleGettingPeopleInterests(_x,_x2){return _ref2.apply(this,arguments);};}();var handleGettingCompanyInterests=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(sessionId,profileUrn,publicId){var response,data,jobId;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:setIsLoading(true);_context3.prev=1;_context3.next=4;return fetch(\"https://sak-productivity-suite.herokuapp.com/get-company-interests\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({sessionId:sessionId,profileUrn:profileUrn,publicId:publicId})});case 4:response=_context3.sent;_context3.next=7;return response.json();case 7:data=_context3.sent;jobId=data.message;CheckJobStatus(jobId,function(companyInterestsArray){setIsLoading(false);setCompanyInterestsArray(companyInterestsArray);});_context3.next=15;break;case 12:_context3.prev=12;_context3.t0=_context3[\"catch\"](1);console.error(_context3.t0);case 15:case\"end\":return _context3.stop();}},_callee3,null,[[1,12]]);}));return function handleGettingCompanyInterests(_x3,_x4,_x5){return _ref3.apply(this,arguments);};}();// const handleGettingActivityInterests = () => {\n// // TODO\n// };\nvar handleInterestsSelection=function handleInterestsSelection(event){var selections=event.target.options;var updatedInterestsArray=[];for(var i=0;i<selections.length;i++){if(selections[i].selected){updatedInterestsArray.push(selections[i].value);}}setSelectedInterests(updatedInterestsArray);};var handleMakingConnectNote=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(fullName){var prompt,response,data,jobId;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:prompt=\"This is the profile of a person: \"+\"\\n\"+fullName+\" This is their summary: \"+\" These are their interests: \"+selectedInterests+\" Use the internet to get something useful about the interests and use it in the request. \"+\" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 300 characters.\";setIsLoading(true);_context4.prev=2;_context4.next=5;return fetch(\"https://sak-productivity-suite.herokuapp.com/use-bingai\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({prompt:prompt})});case 5:response=_context4.sent;_context4.next=8;return response.json();case 8:data=_context4.sent;jobId=data.message;CheckJobStatus(jobId,function(resultArray){setIsLoading(false);setNoteTextArea(resultArray);});_context4.next=16;break;case 13:_context4.prev=13;_context4.t0=_context4[\"catch\"](2);console.log(_context4.t0);case 16:case\"end\":return _context4.stop();}},_callee4,null,[[2,13]]);}));return function handleMakingConnectNote(_x6){return _ref4.apply(this,arguments);};}();var handleSendingConnectNote=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(sessionId,profileId){var response,data;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return fetch(\"https://sak-productivity-suite.herokuapp.com/send-connect\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({sessionId:sessionId,profileId:profileId,text:noteTextArea})});case 3:response=_context5.sent;_context5.next=6;return response.json();case 6:data=_context5.sent;console.log(\"Successfully sent the connect note to the person\",data.message);_context5.next=13;break;case 10:_context5.prev=10;_context5.t0=_context5[\"catch\"](0);console.log(_context5.t0);case 13:case\"end\":return _context5.stop();}},_callee5,null,[[0,10]]);}));return function handleSendingConnectNote(_x7,_x8){return _ref5.apply(this,arguments);};}();var handleNoteTextAreaChange=function handleNoteTextAreaChange(event){setNoteTextArea(event.target.value);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"button\",onClick:handleGettingLeads,children:\"Get Leads\"}),/*#__PURE__*/_jsx(\"p\",{children:leads})]});}export default Home;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Button","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Home","props","sessionId","console","log","_useState","_useState2","_slicedToArray","summary","setSummary","_useState3","_useState4","skills","setSkills","_useState5","_useState6","noteTextArea","setNoteTextArea","_useState7","_useState8","peopleInterestsArray","setPeopleInterestsArray","_useState9","_useState10","companyInterestsArray","setCompanyInterestsArray","_useState11","_useState12","activityInterestsArray","setActivityInterestsArray","_useState13","_useState14","selectedInterests","setSelectedInterests","_useState15","_useState16","isLoading","setIsLoading","_useState17","_useState18","showProfileArea","setShowProfileArea","_useState19","_useState20","profileInfoArray","setProfileInfoArray","_useState21","_useState22","selectedName","setSelectedName","_useState23","_useState24","leads","setLeads","handleGettingLeads","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_callee$","_context","prev","next","fetch","method","headers","body","JSON","stringify","sent","json","message","t0","stop","apply","arguments","handleGettingPeopleInterests","_ref2","_callee2","profileUrn","jobId","_callee2$","_context2","CheckJobStatus","error","_x","_x2","handleGettingCompanyInterests","_ref3","_callee3","publicId","_callee3$","_context3","_x3","_x4","_x5","handleInterestsSelection","event","selections","target","options","updatedInterestsArray","i","length","selected","push","value","handleMakingConnectNote","_ref4","_callee4","fullName","prompt","_callee4$","_context4","resultArray","_x6","handleSendingConnectNote","_ref5","_callee5","profileId","_callee5$","_context5","text","_x7","_x8","handleNoteTextAreaChange","children","variant","type","onClick"],"sources":["C:/Users/farha/OneDrive/Documents/sak-productivity-suite/client/src/Home.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction Home(props) {\r\n\tconst {sessionId} = props;\r\n\tconsole.log(\"Home sessionId: \", sessionId);\r\n\r\n\t// Need to get this information, for now backend is not returning it\r\n\tconst [summary, setSummary] = useState(\"\");\r\n\tconst [skills, setSkills] = useState(\"\");\r\n\t// Need to get this information, for now backend is not returning it\r\n\t\r\n\tconst [noteTextArea, setNoteTextArea] = useState(\"\"); \r\n\t\r\n\tconst [peopleInterestsArray, setPeopleInterestsArray] = useState([]);\t\r\n\tconst [companyInterestsArray, setCompanyInterestsArray] = useState([]);\t\r\n\tconst [activityInterestsArray, setActivityInterestsArray] = useState([]);\r\n\tconst [selectedInterests, setSelectedInterests] = useState(\"\");\r\n\t\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\tconst [showProfileArea, setShowProfileArea] = useState(false);\r\n\tconst [profileInfoArray, setProfileInfoArray] = useState([]);\r\n\r\n\tconst [selectedName, setSelectedName] = useState(\"\");\r\n\r\n\tconst [leads, setLeads] = useState(\"\");\r\n\r\n\t// resultArray[i][\"full_name\"],\r\n\t// resultArray[i][\"latest_title\"],\r\n\t// resultArray[i][\"profile_id\"],\r\n\t// resultArray[i][\"public_id\"],\r\n\t// resultArray[i][\"profile_urn\"]\r\n\r\n    // TODO: show leads, create List group of leads\r\n    // Have a button that gets all of the interests and creates connect note\r\n    // Save leads to database\r\n\t\t\r\n\tconst handleGettingLeads = async() => {\r\n        try {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-leads\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tsessionId: sessionId\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconsole.log(\"Successfully gotten leads: \", data.message);\r\n            setLeads(data.message)\r\n\t\t\t\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\t\r\n\t};\r\n\t\r\n\t// useEffect(() => {\r\n\t// \t// Change temp to JSON \r\n\t// \tconst temp = []\r\n\t// \tfor (let i = 0; i < resultArray.length; i += 1) {\r\n\t// \t\ttemp.push([ \r\n\t// \t\t\tresultArray[i][\"full_name\"],\r\n\t// \t\t\tresultArray[i][\"latest_title\"],\r\n\t// \t\t\tresultArray[i][\"profile_id\"],\r\n\t// \t\t\tresultArray[i][\"public_id\"],\r\n\t// \t\t\tresultArray[i][\"profile_urn\"]\r\n\t// \t\t])\r\n\t// \t}\r\n\t// \tsetProfileInfoArray(temp);\r\n\t// }, [resultArray]);\t\r\n\t\t\r\n\tconst handleGettingPeopleInterests = async (sessionId, profileUrn) => {\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-people-interests\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tsessionId: sessionId,\r\n\t\t\t\t\tprofileUrn: profileUrn\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tconst data = await response.json();\t\t\t\r\n\t\t\tconst jobId = data.message;\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId, (peopleInterestsArray) => {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\tsetPeopleInterestsArray(peopleInterestsArray);\t\r\n\t\t\t});\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleGettingCompanyInterests = async (sessionId, profileUrn, publicId) => {\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-company-interests\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tsessionId: sessionId,\r\n\t\t\t\t\tprofileUrn: profileUrn,\r\n\t\t\t\t\tpublicId: publicId\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst jobId = data.message;\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId, (companyInterestsArray) => {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\tsetCompanyInterestsArray(companyInterestsArray);\t\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\t// const handleGettingActivityInterests = () => {\r\n\t\t// // TODO\r\n\t// };\r\n\t\r\n\tconst handleInterestsSelection = (event) => {\r\n\t\tvar selections = event.target.options;\r\n\t\tconst updatedInterestsArray = [];\r\n\t\tfor (var i = 0; i < selections.length; i++){\r\n\t\t\tif(selections[i].selected){\r\n\t\t\t\tupdatedInterestsArray.push(selections[i].value);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetSelectedInterests(updatedInterestsArray);\r\n\t}\r\n\t\r\n\tconst handleMakingConnectNote = async (fullName) => {\r\n\t\tconst prompt = \"This is the profile of a person: \" + \"\\n\" + fullName \r\n\t\t+ \" This is their summary: \" +\r\n\t\t\" These are their interests: \" + selectedInterests \r\n\t\t+ \" Use the internet to get something useful about the interests and use it in the request. \"\r\n\t\t+ \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 300 characters.\";\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/use-bingai\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tprompt: prompt\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst jobId = data.message;\r\n\t\t\tCheckJobStatus(jobId, (resultArray) => {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\tsetNoteTextArea(resultArray);\t\r\n\t\t\t});\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleSendingConnectNote = async (sessionId, profileId) => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/send-connect\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tsessionId: sessionId,\r\n\t\t\t\t\tprofileId: profileId,\r\n\t\t\t\t\ttext: noteTextArea\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconsole.log(\"Successfully sent the connect note to the person\", data.message);\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleNoteTextAreaChange = (event) => {\r\n\t\tsetNoteTextArea(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n            <Button variant=\"primary\" type=\"button\" onClick={handleGettingLeads}>\r\n                Get Leads\r\n            </Button>\r\n            <p>\r\n                {leads}\r\n            </p>\r\n\t\t\t{/* <Container>\r\n\t\t\t\t<h1>Search Results:</h1>\r\n\t\t\t\t<ListGroup>\r\n\t\t\t\t\t{profileInfoArray.map((profileInfo) => (\r\n\t\t\t\t\t\t<ListGroup.Item\r\n\t\t\t\t\t\t\taction\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetShowProfileArea(true);\r\n\t\t\t\t\t\t\t\tsetSelectedName(profileInfo[0]);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{profileInfo[0]}, {profileInfo[1]}\r\n\t\t\t\t\t\t\t{showProfileArea && selectedName === profileInfo[0] && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={noteTextArea}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleNoteTextAreaChange}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"The generated note will appear here\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t\t\t<ButtonGroup aria-label=\"Basic example\" className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={handleGettingPeopleInterests(sessionId, profileInfo[4])}>\r\n\t\t\t\t\t\t\t\t\t\t\tGet people interests\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={handleGettingCompanyInterests(sessionId, profileInfo[4], profileInfo[3])}>\r\n\t\t\t\t\t\t\t\t\t\t\tGet company interests\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={handleMakingConnectNote(profileInfo[0])}>\r\n\t\t\t\t\t\t\t\t\t\t\tMake Connect Note\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={handleSendingConnectNote(sessionId, profileInfo[2])}>\r\n\t\t\t\t\t\t\t\t\t\t\tSend Connect Note\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</ButtonGroup>\r\n\r\n\t\t\t\t\t\t\t\t\t{peopleInterestsArray.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleInterestsSelection}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{peopleInterestsArray.map((interest) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={interest}>{interest[0]}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{companyInterestsArray.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleInterestsSelection}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{companyInterestsArray.map((interest) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={interest}>{interest[0]}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{activityInterestsArray.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleInterestsSelection}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{activityInterestsArray.map((interest) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={interest}>{interest[0]}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ListGroup>\r\n\t\t\t</Container> */}\r\n\t\t</>\r\n\t)\r\n}\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}