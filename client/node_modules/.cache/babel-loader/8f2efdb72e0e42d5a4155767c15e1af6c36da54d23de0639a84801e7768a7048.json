{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/farha/OneDrive/Desktop/sak-productivity-suite/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/farha/OneDrive/Desktop/sak-productivity-suite/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/farha/OneDrive/Desktop/sak-productivity-suite/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";/*global chrome*/import React,{useState,useEffect}from\"react\";import{CheckJobStatus}from\"./CheckJobStatus.js\";import ProfileSearch from\"./ProfileSearch.js\";// TODO: Next button still clickable at the last page\n// When to move to full page?\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function DisplaySearchResults(props){var resultArray=props.resultArray;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),userProfile=_useState2[0],setUserProfile=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),pageArray=_useState4[0],setPageArray=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),pageIndex=_useState6[0],setPageIndex=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),fullName=_useState8[0],setFullName=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),latestTitle=_useState10[0],setLatestTitle=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),profileId=_useState12[0],setProfileId=_useState12[1];var _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),summary=_useState14[0],setSummary=_useState14[1];var _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),skills=_useState16[0],setSkills=_useState16[1];var _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),publicId=_useState18[0],setPublicId=_useState18[1];var _useState19=useState(\"\"),_useState20=_slicedToArray(_useState19,2),profileUrn=_useState20[0],setProfileUrn=_useState20[1];var _useState21=useState(\"\"),_useState22=_slicedToArray(_useState21,2),noteTextArea=_useState22[0],setNoteTextArea=_useState22[1];var _useState23=useState(false),_useState24=_slicedToArray(_useState23,2),jobFinished=_useState24[0],setJobFinished=_useState24[1];var _useState25=useState([]),_useState26=_slicedToArray(_useState25,2),peopleInterestsArray=_useState26[0],setPeopleInterestsArray=_useState26[1];var _useState27=useState([]),_useState28=_slicedToArray(_useState27,2),companyInterestsArray=_useState28[0],setCompanyInterestsArray=_useState28[1];var _useState29=useState([]),_useState30=_slicedToArray(_useState29,2),activityInterestsArray=_useState30[0],setActivityInterestsArray=_useState30[1];useEffect(function(){// Divide the array into pages\nvar pageSize=1;var pageArray=[];for(var i=0;i<resultArray.length;i+=pageSize){pageArray.push(resultArray.slice(i,i+pageSize));}setPageArray(pageArray);},[resultArray]);useEffect(function(){if(pageArray[pageIndex]){var _userProfile=pageArray[pageIndex][0];setUserProfile(_userProfile);setFullName(_userProfile[\"firstName\"]+\" \"+_userProfile[\"lastName\"]);setLatestTitle(_userProfile[\"headline\"]);setProfileId(_userProfile[\"profile_id\"]);setSummary(_userProfile[\"summary\"]);setSkills(_userProfile[\"skills\"]);setPublicId(_userProfile[\"public_id\"]);setProfileUrn(_userProfile[\"profile_urn\"]);setNoteTextArea(\"\");}},[pageIndex,pageArray]);var handleNextPage=function handleNextPage(){if(pageIndex<pageArray.length-1){setPageIndex(pageIndex+1);}};var handleGettingPeopleInterests=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data,jobId;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"https://sak-productivity-suite.herokuapp.com/get-people-interests\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({cookie:cookie,profileUrn:profileUrn})});case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;console.log(data);jobId=data.message;CheckJobStatus(jobId,function(peopleInterestsArray){setPeopleInterestsArray(peopleInterestsArray);setJobFinished(true);});_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 15:case\"end\":return _context.stop();}},_callee,null,[[0,12]]);}));return function handleGettingPeopleInterests(){return _ref.apply(this,arguments);};}();var handleGettingCompanyInterests=function handleGettingCompanyInterests(){// TODO\n};var handleGettingActivityInterests=function handleGettingActivityInterests(){// TODO\n};var handleSendingConnectNote=function handleSendingConnectNote(){// TODO\n};var handleNoteTextAreaChange=function handleNoteTextAreaChange(event){setNoteTextArea(event.target.value);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:fullName}),/*#__PURE__*/_jsx(\"div\",{children:latestTitle}),/*#__PURE__*/_jsx(\"textarea\",{value:noteTextArea,onChange:handleNoteTextAreaChange,placeholder:\"The generated note will appear here\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleGettingPeopleInterests,children:\"Get people interests\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleGettingCompanyInterests,children:\"Get company interests\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleGettingActivityInterests,children:\"Get interests from Linkedin activity\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNextPage,children:\"Next\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendingConnectNote,children:\"Send Connect Note\"}),jobFinished&&/*#__PURE__*/_jsx(\"select\",{multiple:true,children:peopleInterestsArray.map(function(interest){return/*#__PURE__*/_jsx(\"option\",{children:interest},interest);})})]});}export default DisplaySearchResults;// const resultArray = data.result;\n// // console.log(result);\n// // return result;\n// document.getElementById(\"linkedin-search-page\").style.display = \"none\";\n// document.getElementById(\"linkedin-page\").style.display = \"block\";\n// var myArray = resultArray;\n// // var myArray = data.message;\n// var pageSize = 1;\n// var currentPage = 0;\n// // Divide the array into pages\n// var pages = [];\n// for (var i = 0; i < myArray.length; i += pageSize) {\n// pages.push(myArray.slice(i, i + pageSize));\n// }\n// var copyProfile = JSON.parse(JSON.stringify(pages[currentPage]));\n// var first_name = copyProfile[0]['firstName'] + \" \" + copyProfile[0]['lastName'];\n// var first_title = copyProfile[0]['headline'];\n// var profileId = copyProfile[0]['profile_id'];\n// var summary = copyProfile[0]['summary'];\n// var skills = copyProfile[0]['skills'];\n// var public_id = copyProfile[0]['public_id'];\n// var profileUrn = copyProfile[0]['profile_urn'];\n// document.getElementById(\"name\").innerHTML = first_name;\n// document.getElementById(\"title\").innerHTML = first_title;\n// var nextButton = document.getElementById(\"next-button\");\n// nextButton.addEventListener(\"click\", function() {\n// // Clear\n// document.getElementById(\"my-textarea\").value = \"\";\n// document.getElementById(\"CheckboxContainer\").innerHTML = \"\";\n// document.getElementById(\"InterestsContainer\").innerHTML = \"\";\n// document.getElementById(\"PeopleInterestsContainer\").innerHTML = \"\";\n// document.getElementById(\"CompanyInterestsContainer\").innerHTML = \"\";\t\t\t\t\t\n// // Increment the current page index\n// currentPage = (currentPage + 1) % pages.length;\n// var copyProfile = JSON.parse(JSON.stringify(pages[currentPage]));\n// var name = copyProfile[0]['firstName'] + \" \" + copyProfile[0]['lastName'];\n// var title = copyProfile[0]['headline'];\n// var profileId = copyProfile[0]['profile_id'];\n// var summary = copyProfile[0]['summary'];\n// var skills = copyProfile[0]['skills'];\n// var publicId = copyProfile[0]['public_id'];\n// var profileUrn = copyProfile[0]['profile_urn'];\n// document.getElementById(\"name\").innerHTML = name;\n// document.getElementById(\"title\").innerHTML = title;\n// document.getElementById(\"PeopleInterestsButton\").onclick = function() {\n// fetch(\"https://ai-assistant.herokuapp.com/get-people-interests\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileUrn: profileUrn\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// var jobId = data.message;\n// console.log(\"job of people interests\", jobId);\n// function checkJobStatus(jobId) {\n// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// jobId: jobId\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// const status = data.status;\n// console.log(status);\n// if (status === 'finished') {\n// console.log(\"Successfully gotten people interests\", data.result);\n// const words = data.result;\n// // var words = data.message;\n// var container = document.getElementById('PeopleInterestsContainer');\n// for (var i = 0; i < words.length; i++) {\n// var checkbox = document.createElement('input');\n// checkbox.type = 'checkbox';\n// checkbox.value = words[i][0];\n// checkbox.id = words[i][1];\n// var label = document.createElement('label');\n// label.textContent = words[i][0];\n// label.appendChild(checkbox);\n// container.appendChild(label);\n// }\n// } else {\n// // The job is not finished yet, check again in 1 second\n// setTimeout(() => checkJobStatus(jobId), 1000);\n// }\n// });\n// }\n// checkJobStatus(data.message);\n// });\n// }\n// document.getElementById(\"CompanyInterestsButton\").onclick = function() {\n// fetch(\"https://ai-assistant.herokuapp.com/get-company-interests\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileUrn: profileUrn\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// var jobId = data.message;\n// console.log(\"job of company interests\", jobId);\n// function checkJobStatus(jobId) {\n// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// jobId: jobId\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// const status = data.status;\n// console.log(status);\n// if (status === 'finished') {\n// console.log(\"Successfully gotten company interests\", data.result);\n// const words = data.result;\n// var container = document.getElementById('CompanyInterestsContainer');\n// for (var i = 0; i < words.length; i++) {\n// var checkbox = document.createElement('input');\n// checkbox.type = 'checkbox';\n// checkbox.value = words[i][0];\n// checkbox.id = words[i][1];\n// var label = document.createElement('label');\n// label.textContent = words[i][0];\n// label.appendChild(checkbox);\n// container.appendChild(label);\n// }\n// } else {\n// // The job is not finished yet, check again in 1 second\n// setTimeout(() => checkJobStatus(jobId), 1000);\n// }\n// });\n// }\n// checkJobStatus(data.message);\n// });\n// }\n// document.getElementById(\"GenerateConnectNoteButton\").onclick = function() {\n// var checkboxes = document.querySelectorAll('input[type=checkbox]');\n// var topicList = [];\n// for (var i = 0; i < checkboxes.length; i++) {\n// if (checkboxes[i].checked) {\n// var topic = checkboxes[i].value;\n// topicList.push(topic);\n// }\n// }\n// var topicListString = topicList.toString();\n// var prompt_string = \"This is the profile of a person: \" + \"\\n\" + name \n// + \" This is their summary: \" + summary +\n// \" These are their interests: \" + topicListString \n// + \" Use the internet to get something useful about the interests and use it in the request. \"\n// + \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\n// // console.log(prompt_string);\t\t\t\n// fetch(\"https://ai-assistant.herokuapp.com/use-bingai\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// prompt: prompt_string\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// console.log(data.message);\n// document.getElementById(\"my-textarea\").value = data.message;\n// }).catch(error => console.error(error));\n// }\n// document.getElementById(\"send-button\").onclick = function() {\n// // fetch to server.js, with profileId and text\n// fetch(\"https://ai-assistant.herokuapp.com/send-connect\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileId: profileId,\n// text: document.getElementById(\"my-textarea\").value\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// console.log(\"Successfully sent connect to server\", data.message);\n// });\n// }\n// });\n// // document.getElementById(\"InterestsButton\").onclick = function() {\n// // fetch(\"https://ai-assistant.herokuapp.com/get-interests\", {\n// // method: \"POST\",\n// // headers: {\n// // \"Content-Type\": \"application/json\"\n// // },\n// // body: JSON.stringify({\n// // email: email,\n// // password: password,\n// // publicId: publicId\n// // })\n// // })\n// // .then(response => response.json())\n// // .then(data => {\n// // console.log(\"Successfully gotten interests\", data.message);\n// // var words = data.message;\n// // var container = document.getElementById('CheckboxContainer');\n// // for (var i = 0; i < words.length; i++) {\n// // var checkbox = document.createElement('input');\n// // checkbox.type = 'checkbox';\n// // checkbox.value = words[i];\n// // var label = document.createElement('label');\n// // label.textContent = words[i];\n// // label.appendChild(checkbox);\n// // container.appendChild(label);\n// // }\n// // });\n// // }\n// document.getElementById(\"PeopleInterestsButton\").onclick = function() {\n// fetch(\"https://ai-assistant.herokuapp.com/get-people-interests\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileUrn: profileUrn\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// var jobId = data.message;\n// console.log(\"job of people interests\", jobId);\n// function checkJobStatus(jobId) {\n// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// jobId: jobId\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// const status = data.status;\n// console.log(status);\n// if (status === 'finished') {\n// console.log(\"Successfully gotten people interests\", data.result);\n// const words = data.result;\n// // var words = data.message;\n// var container = document.getElementById('PeopleInterestsContainer');\n// for (var i = 0; i < words.length; i++) {\n// var checkbox = document.createElement('input');\n// checkbox.type = 'checkbox';\n// checkbox.value = words[i][0];\n// checkbox.id = words[i][1];\n// var label = document.createElement('label');\n// label.textContent = words[i][0];\n// label.appendChild(checkbox);\n// container.appendChild(label);\n// }\n// } else {\n// // The job is not finished yet, check again in 1 second\n// setTimeout(() => checkJobStatus(jobId), 1000);\n// }\n// });\n// }\n// checkJobStatus(data.message);\n// });\n// }\n// document.getElementById(\"CompanyInterestsButton\").onclick = function() {\n// fetch(\"https://ai-assistant.herokuapp.com/get-company-interests\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileUrn: profileUrn\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// var jobId = data.message;\n// console.log(\"job of company interests\", jobId);\n// function checkJobStatus(jobId) {\n// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// jobId: jobId\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// const status = data.status;\n// console.log(status);\n// if (status === 'finished') {\n// console.log(\"Successfully gotten company interests\", data.result);\n// const words = data.result;\n// var container = document.getElementById('CompanyInterestsContainer');\n// for (var i = 0; i < words.length; i++) {\n// var checkbox = document.createElement('input');\n// checkbox.type = 'checkbox';\n// checkbox.value = words[i][0];\n// checkbox.id = words[i][1];\n// var label = document.createElement('label');\n// label.textContent = words[i][0];\n// label.appendChild(checkbox);\n// container.appendChild(label);\n// }\n// } else {\n// // The job is not finished yet, check again in 1 second\n// setTimeout(() => checkJobStatus(jobId), 1000);\n// }\n// });\n// }\n// checkJobStatus(data.message);\n// });\n// }\n// document.getElementById(\"GenerateConnectNoteButton\").onclick = function() {\n// var checkboxes = document.querySelectorAll('input[type=checkbox]');\n// var topicList = [];\n// for (var i = 0; i < checkboxes.length; i++) {\n// if (checkboxes[i].checked) {\n// var topic = checkboxes[i].value;\n// topicList.push(topic);\n// }\n// }\n// var topicListString = topicList.toString();\n// var prompt_string = \"This is the profile of a person: \" + \"\\n\" + first_name \n// + \" This is their summary: \" + summary +\n// \" These are their interests: \" + topicListString \n// + \" Use the internet to get something useful about the interests and use it in the request. \"\n// + \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\n// // console.log(prompt_string);\t\t\t\n// fetch(\"https://ai-assistant.herokuapp.com/use-bingai\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// prompt: prompt_string\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// console.log(data.message);\n// document.getElementById(\"my-textarea\").value = data.message;\n// }).catch(error => console.error(error));\n// }\n// document.getElementById(\"send-button\").onclick = function() {\n// // fetch to server.js, with profileId and text\n// fetch(\"https://ai-assistant.herokuapp.com/send-connect\", {\n// method: \"POST\",\n// headers: {\n// \"Content-Type\": \"application/json\"\n// },\n// body: JSON.stringify({\n// email: email,\n// password: password,\n// cookie: cookie,\n// profileId: profileId,\n// text: document.getElementById(\"my-textarea\").value\n// })\n// })\n// .then(response => response.json())\n// .then(data => {\n// console.log(\"Successfully sent connect to server\", data.message);\n// });\n// }","map":{"version":3,"names":["React","useState","useEffect","CheckJobStatus","ProfileSearch","jsx","_jsx","jsxs","_jsxs","DisplaySearchResults","props","resultArray","_useState","_useState2","_slicedToArray","userProfile","setUserProfile","_useState3","_useState4","pageArray","setPageArray","_useState5","_useState6","pageIndex","setPageIndex","_useState7","_useState8","fullName","setFullName","_useState9","_useState10","latestTitle","setLatestTitle","_useState11","_useState12","profileId","setProfileId","_useState13","_useState14","summary","setSummary","_useState15","_useState16","skills","setSkills","_useState17","_useState18","publicId","setPublicId","_useState19","_useState20","profileUrn","setProfileUrn","_useState21","_useState22","noteTextArea","setNoteTextArea","_useState23","_useState24","jobFinished","setJobFinished","_useState25","_useState26","peopleInterestsArray","setPeopleInterestsArray","_useState27","_useState28","companyInterestsArray","setCompanyInterestsArray","_useState29","_useState30","activityInterestsArray","setActivityInterestsArray","pageSize","i","length","push","slice","handleNextPage","handleGettingPeopleInterests","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","jobId","wrap","_callee$","_context","prev","next","fetch","method","headers","body","JSON","stringify","cookie","sent","json","console","log","message","t0","error","stop","apply","arguments","handleGettingCompanyInterests","handleGettingActivityInterests","handleSendingConnectNote","handleNoteTextAreaChange","event","target","value","children","onChange","placeholder","onClick","multiple","map","interest"],"sources":["C:/Users/farha/OneDrive/Desktop/sak-productivity-suite/client/src/DisplaySearchResults.js"],"sourcesContent":["/*global chrome*/\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {CheckJobStatus} from \"./CheckJobStatus.js\";\r\nimport ProfileSearch from \"./ProfileSearch.js\";\r\n\r\n// TODO: Next button still clickable at the last page\r\n// When to move to full page?\r\n\r\nfunction DisplaySearchResults(props) {\r\n\t\r\n\tconst {resultArray} = props;\r\n\t\r\n\tconst [userProfile, setUserProfile] = useState([]);\r\n\tconst [pageArray, setPageArray] = useState([]);\r\n\tconst [pageIndex, setPageIndex] = useState(0);\r\n\tconst [fullName, setFullName] = useState(\"\");\r\n\tconst [latestTitle, setLatestTitle] = useState(\"\");\r\n\tconst [profileId, setProfileId] = useState(\"\");\r\n\tconst [summary, setSummary] = useState(\"\");\r\n\tconst [skills, setSkills] = useState(\"\");\r\n\tconst [publicId, setPublicId] = useState(\"\");\r\n\tconst [profileUrn, setProfileUrn] = useState(\"\");\r\n\t\r\n\tconst [noteTextArea, setNoteTextArea] = useState(\"\"); \r\n\t\r\n\tconst [jobFinished, setJobFinished] = useState(false);\r\n\tconst [peopleInterestsArray, setPeopleInterestsArray] = useState([]);\r\n\tconst [companyInterestsArray, setCompanyInterestsArray] = useState([]);\r\n\tconst [activityInterestsArray, setActivityInterestsArray] = useState([]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\t// Divide the array into pages\r\n\t\tconst pageSize = 1;\r\n\t\tconst pageArray = [];\r\n\t\tfor (let i = 0; i < resultArray.length; i += pageSize) {\r\n\t\t\tpageArray.push(resultArray.slice(i, i + pageSize));\r\n\t\t}\r\n\t\tsetPageArray(pageArray);\r\n\t}, [resultArray]);\t\r\n\t\r\n\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tif (pageArray[pageIndex]) {\r\n\t\t\r\n\t\t\tconst userProfile = pageArray[pageIndex][0];\r\n\t\t\tsetUserProfile(userProfile);\r\n\t\t\tsetFullName(userProfile[\"firstName\"] + \" \" + userProfile[\"lastName\"]);\r\n\t\t\tsetLatestTitle(userProfile[\"headline\"]);\r\n\t\t\tsetProfileId(userProfile[\"profile_id\"]);\r\n\t\t\tsetSummary(userProfile[\"summary\"]);\r\n\t\t\tsetSkills(userProfile[\"skills\"]);\r\n\t\t\tsetPublicId(userProfile[\"public_id\"]);\r\n\t\t\tsetProfileUrn(userProfile[\"profile_urn\"]);\r\n\t\t\tsetNoteTextArea(\"\");\r\n\t\t}\r\n\t\t\r\n\t}, [pageIndex, pageArray]);\r\n\r\n\tconst handleNextPage = () => {\r\n\t\tif (pageIndex < pageArray.length - 1) {\r\n\t\t\tsetPageIndex(pageIndex + 1);\r\n\t\t}\r\n\t};\r\n\t\t\r\n\tconst handleGettingPeopleInterests = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-people-interests\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tcookie: cookie,\r\n\t\t\t\t\tprofileUrn: profileUrn\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconsole.log(data);\r\n\t\t\t\r\n\t\t\tconst jobId = data.message;\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId, (peopleInterestsArray) => {\r\n\t\t\t\tsetPeopleInterestsArray(peopleInterestsArray);\t\r\n\t\t\t\tsetJobFinished(true);\r\n\t\t\t});\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleGettingCompanyInterests = () => {\r\n\t\t// TODO\r\n\t};\r\n\t\r\n\tconst handleGettingActivityInterests = () => {\r\n\t\t// TODO\r\n\t};\r\n\t\r\n\tconst handleSendingConnectNote = () => {\r\n\t\t// TODO\r\n\t};\r\n\t\r\n\tconst handleNoteTextAreaChange = (event) => {\r\n\t\tsetNoteTextArea(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>{fullName}</div>\r\n\t\t\t<div>{latestTitle}</div>\r\n\t\t\t<textarea value={noteTextArea} onChange={handleNoteTextAreaChange} placeholder=\"The generated note will appear here\"></textarea>\r\n\t\t\t<button onClick={handleGettingPeopleInterests}>\r\n\t\t\t\tGet people interests\r\n\t\t\t</button>\r\n\t\t\t<button onClick={handleGettingCompanyInterests}>\r\n\t\t\t\tGet company interests\r\n\t\t\t</button>\r\n\t\t\t<button onClick={handleGettingActivityInterests}>\r\n\t\t\t\tGet interests from Linkedin activity\r\n\t\t\t</button>\r\n\t\t\t<button onClick={handleNextPage}>\r\n\t\t\t\tNext\r\n\t\t\t</button>\r\n\t\t\t<button onClick={handleSendingConnectNote}>\r\n\t\t\t\tSend Connect Note\r\n\t\t\t</button>\r\n\t\t\r\n\t\t\t{jobFinished && (\r\n\t\t\t\t<select multiple>\r\n\t\t\t\t\t{peopleInterestsArray.map( (interest) => (\r\n\t\t\t\t\t\t<option key={interest}>{interest}</option>\r\n\t\t\t\t\t))}\r\n\r\n\t\t\t\t</select>\r\n\t\t\t)}\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default DisplaySearchResults;\r\n\r\n// const resultArray = data.result;\r\n\r\n// // console.log(result);\r\n// // return result;\r\n\r\n// document.getElementById(\"linkedin-search-page\").style.display = \"none\";\r\n// document.getElementById(\"linkedin-page\").style.display = \"block\";\r\n\r\n// var myArray = resultArray;\r\n// // var myArray = data.message;\r\n// var pageSize = 1;\r\n// var currentPage = 0;\r\n\r\n// // Divide the array into pages\r\n// var pages = [];\r\n// for (var i = 0; i < myArray.length; i += pageSize) {\r\n\t// pages.push(myArray.slice(i, i + pageSize));\r\n// }\r\n\r\n// var copyProfile = JSON.parse(JSON.stringify(pages[currentPage]));\r\n// var first_name = copyProfile[0]['firstName'] + \" \" + copyProfile[0]['lastName'];\r\n// var first_title = copyProfile[0]['headline'];\r\n// var profileId = copyProfile[0]['profile_id'];\r\n// var summary = copyProfile[0]['summary'];\r\n// var skills = copyProfile[0]['skills'];\r\n// var public_id = copyProfile[0]['public_id'];\r\n// var profileUrn = copyProfile[0]['profile_urn'];\r\n\r\n// document.getElementById(\"name\").innerHTML = first_name;\r\n// document.getElementById(\"title\").innerHTML = first_title;\r\n\r\n// var nextButton = document.getElementById(\"next-button\");\r\n\r\n// nextButton.addEventListener(\"click\", function() {\r\n\t\r\n\t// // Clear\r\n\t// document.getElementById(\"my-textarea\").value = \"\";\r\n\t// document.getElementById(\"CheckboxContainer\").innerHTML = \"\";\r\n\t// document.getElementById(\"InterestsContainer\").innerHTML = \"\";\r\n\t// document.getElementById(\"PeopleInterestsContainer\").innerHTML = \"\";\r\n\t// document.getElementById(\"CompanyInterestsContainer\").innerHTML = \"\";\t\t\t\t\t\r\n\r\n\t// // Increment the current page index\r\n\t// currentPage = (currentPage + 1) % pages.length;\r\n\t// var copyProfile = JSON.parse(JSON.stringify(pages[currentPage]));\r\n\t// var name = copyProfile[0]['firstName'] + \" \" + copyProfile[0]['lastName'];\r\n\t// var title = copyProfile[0]['headline'];\r\n\t// var profileId = copyProfile[0]['profile_id'];\r\n\t// var summary = copyProfile[0]['summary'];\r\n\t// var skills = copyProfile[0]['skills'];\r\n\t// var publicId = copyProfile[0]['public_id'];\r\n\t// var profileUrn = copyProfile[0]['profile_urn'];\r\n\r\n\t// document.getElementById(\"name\").innerHTML = name;\r\n\t// document.getElementById(\"title\").innerHTML = title;\r\n\t\r\n\t// document.getElementById(\"PeopleInterestsButton\").onclick = function() {\r\n\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-people-interests\", {\r\n\t\t\t// method: \"POST\",\r\n\t\t\t// headers: {\r\n\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t// },\r\n\t\t\t// body: JSON.stringify({\r\n\t\t\t\t// email: email,\r\n\t\t\t\t// password: password,\r\n\t\t\t\t// cookie: cookie,\r\n\t\t\t\t// profileUrn: profileUrn\r\n\t\t\t// })\r\n\t\t// })\r\n\t\t// .then(response => response.json())\r\n\t\t// .then(data => {\r\n\t\t\t\r\n\t\t\t// var jobId = data.message;\r\n\t\t\t\r\n\t\t\t// console.log(\"job of people interests\", jobId);\r\n\t\t\t\r\n\t\t\t// function checkJobStatus(jobId) {\r\n\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\r\n\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t// },\r\n\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t// jobId: jobId\r\n\t\t\t\t\t// })\r\n\t\t\t\t// })\r\n\t\t\t\t\r\n\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// const status = data.status;\r\n\t\t\t\t\t// console.log(status);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// if (status === 'finished') {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t// console.log(\"Successfully gotten people interests\", data.result);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// const words = data.result;\r\n\r\n\t\t\t\t\t\t// // var words = data.message;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// var container = document.getElementById('PeopleInterestsContainer');\r\n\r\n\t\t\t\t\t\t// for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t// var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t// checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t// checkbox.value = words[i][0];\r\n\t\t\t\t\t\t\t// checkbox.id = words[i][1];\r\n\t\t\t\t\t\t\t// var label = document.createElement('label');\r\n\t\t\t\t\t\t\t// label.textContent = words[i][0];\r\n\t\t\t\t\t\t\t// label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t// container.appendChild(label);\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t// // The job is not finished yet, check again in 1 second\r\n\t\t\t\t\t\t// setTimeout(() => checkJobStatus(jobId), 1000);\r\n\t\t\t\t\t// }\r\n\t\t\t\t// });\r\n\t\t\t\t\t\r\n\t\t\t// }\r\n\t\t\t// checkJobStatus(data.message);\r\n\t\t\t\t\r\n\t\t// });\r\n\t// }\r\n\t\r\n\t// document.getElementById(\"CompanyInterestsButton\").onclick = function() {\r\n\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-company-interests\", {\r\n\t\t\t// method: \"POST\",\r\n\t\t\t// headers: {\r\n\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t// },\r\n\t\t\t// body: JSON.stringify({\r\n\t\t\t\t// email: email,\r\n\t\t\t\t// password: password,\r\n\t\t\t\t// cookie: cookie,\r\n\t\t\t\t// profileUrn: profileUrn\r\n\t\t\t// })\r\n\t\t// })\r\n\t\t// .then(response => response.json())\r\n\t\t// .then(data => {\r\n\t\t\t\r\n\t\t\t// var jobId = data.message;\r\n\t\t\t\r\n\t\t\t// console.log(\"job of company interests\", jobId);\r\n\t\t\t\r\n\t\t\t// function checkJobStatus(jobId) {\r\n\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\r\n\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t// },\r\n\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t// jobId: jobId\r\n\t\t\t\t\t// })\r\n\t\t\t\t// })\r\n\t\t\t\t\r\n\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// const status = data.status;\r\n\t\t\t\t\t// console.log(status);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// if (status === 'finished') {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t// console.log(\"Successfully gotten company interests\", data.result);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// const words = data.result;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t// var container = document.getElementById('CompanyInterestsContainer');\r\n\r\n\t\t\t\t\t\t// for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t// var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t// checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t// checkbox.value = words[i][0];\r\n\t\t\t\t\t\t\t// checkbox.id = words[i][1];\r\n\t\t\t\t\t\t\t// var label = document.createElement('label');\r\n\t\t\t\t\t\t\t// label.textContent = words[i][0];\r\n\t\t\t\t\t\t\t// label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t// container.appendChild(label);\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t// // The job is not finished yet, check again in 1 second\r\n\t\t\t\t\t\t// setTimeout(() => checkJobStatus(jobId), 1000);\r\n\t\t\t\t\t// }\r\n\t\t\t\t// });\r\n\t\t\t\t\t\r\n\t\t\t// }\r\n\t\t\t// checkJobStatus(data.message);\r\n\t\t\t\t\r\n\t\t// });\r\n\t\r\n\t// }\r\n\t// document.getElementById(\"GenerateConnectNoteButton\").onclick = function() {\r\n\t\t// var checkboxes = document.querySelectorAll('input[type=checkbox]');\r\n\t\t// var topicList = [];\r\n\t\t// for (var i = 0; i < checkboxes.length; i++) {\r\n\t\t\t// if (checkboxes[i].checked) {\r\n\t\t\t\t// var topic = checkboxes[i].value;\r\n\t\t\t\t// topicList.push(topic);\r\n\t\t\t// }\r\n\t\t// }\r\n\t\t// var topicListString = topicList.toString();\r\n\r\n\t\t// var prompt_string = \"This is the profile of a person: \" + \"\\n\" + name \r\n\t\t// + \" This is their summary: \" + summary +\r\n\t\t// \" These are their interests: \" + topicListString \r\n\t\t// + \" Use the internet to get something useful about the interests and use it in the request. \"\r\n\t\t// + \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\r\n\t\t\r\n\t\t// // console.log(prompt_string);\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/use-bingai\", {\r\n\t\t\t// method: \"POST\",\r\n\t\t\t// headers: {\r\n\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t// },\r\n\t\t\t// body: JSON.stringify({\r\n\t\t\t\t// prompt: prompt_string\r\n\t\t\t// })\r\n\t\t// })\r\n\t\t// .then(response => response.json())\r\n\t\t// .then(data => {\r\n\t\t\t\r\n\t\t\t// console.log(data.message);\r\n\t\t\t\r\n\t\t\t// document.getElementById(\"my-textarea\").value = data.message;\r\n\t\t\t\r\n\r\n\t\t// }).catch(error => console.error(error));\r\n\r\n\t// }\r\n\r\n\t// document.getElementById(\"send-button\").onclick = function() {\r\n\r\n\t\t// // fetch to server.js, with profileId and text\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/send-connect\", {\r\n\t\t\t\t// method: \"POST\",\r\n\t\t\t\t// headers: {\r\n\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t// },\r\n\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t// email: email,\r\n\t\t\t\t\t// password: password,\r\n\t\t\t\t\t// cookie: cookie,\r\n\t\t\t\t\t// profileId: profileId,\r\n\t\t\t\t\t// text: document.getElementById(\"my-textarea\").value\r\n\t\t\t\t// })\r\n\t\t\t// })\r\n\t\t\t// .then(response => response.json())\r\n\t\t\t// .then(data => {\r\n\t\t\t\t// console.log(\"Successfully sent connect to server\", data.message);\r\n\t\t\t// });\r\n\t// }\r\n\t\r\n\t\r\n// });\r\n\r\n// // document.getElementById(\"InterestsButton\").onclick = function() {\r\n\r\n\t\t// // fetch(\"https://ai-assistant.herokuapp.com/get-interests\", {\r\n\t\t\t\t// // method: \"POST\",\r\n\t\t\t\t// // headers: {\r\n\t\t\t\t\t// // \"Content-Type\": \"application/json\"\r\n\t\t\t\t// // },\r\n\t\t\t\t// // body: JSON.stringify({\r\n\t\t\t\t\t// // email: email,\r\n\t\t\t\t\t// // password: password,\r\n\t\t\t\t\t// // publicId: publicId\r\n\t\t\t\t// // })\r\n\t\t\t// // })\r\n\t\t\t// // .then(response => response.json())\r\n\t\t\t// // .then(data => {\r\n\t\t\t\t// // console.log(\"Successfully gotten interests\", data.message);\r\n\r\n\t\t\t\t// // var words = data.message;\r\n\t\t\t\t// // var container = document.getElementById('CheckboxContainer');\r\n\r\n\t\t\t\t// // for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t// // var checkbox = document.createElement('input');\r\n\t\t\t\t\t// // checkbox.type = 'checkbox';\r\n\t\t\t\t\t// // checkbox.value = words[i];\r\n\t\t\t\t\t// // var label = document.createElement('label');\r\n\t\t\t\t\t// // label.textContent = words[i];\r\n\t\t\t\t\t// // label.appendChild(checkbox);\r\n\t\t\t\t\t// // container.appendChild(label);\r\n\t\t\t\t// // }\r\n\t\t\t// // });\r\n\t// // }\r\n\t\r\n\t// document.getElementById(\"PeopleInterestsButton\").onclick = function() {\r\n\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-people-interests\", {\r\n\t\t\t// method: \"POST\",\r\n\t\t\t// headers: {\r\n\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t// },\r\n\t\t\t// body: JSON.stringify({\r\n\t\t\t\t// email: email,\r\n\t\t\t\t// password: password,\r\n\t\t\t\t// cookie: cookie,\r\n\t\t\t\t// profileUrn: profileUrn\r\n\t\t\t// })\r\n\t\t// })\r\n\t\t// .then(response => response.json())\r\n\t\t// .then(data => {\r\n\t\t\t\r\n\t\t\t// var jobId = data.message;\r\n\t\t\t\r\n\t\t\t// console.log(\"job of people interests\", jobId);\r\n\t\t\t\r\n\t\t\t// function checkJobStatus(jobId) {\r\n\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\r\n\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t// },\r\n\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t// jobId: jobId\r\n\t\t\t\t\t// })\r\n\t\t\t\t// })\r\n\t\t\t\t\r\n\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// const status = data.status;\r\n\t\t\t\t\t// console.log(status);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// if (status === 'finished') {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t// console.log(\"Successfully gotten people interests\", data.result);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// const words = data.result;\r\n\r\n\t\t\t\t\t\t// // var words = data.message;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// var container = document.getElementById('PeopleInterestsContainer');\r\n\r\n\t\t\t\t\t\t// for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t// var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t// checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t// checkbox.value = words[i][0];\r\n\t\t\t\t\t\t\t// checkbox.id = words[i][1];\r\n\t\t\t\t\t\t\t// var label = document.createElement('label');\r\n\t\t\t\t\t\t\t// label.textContent = words[i][0];\r\n\t\t\t\t\t\t\t// label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t// container.appendChild(label);\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t// // The job is not finished yet, check again in 1 second\r\n\t\t\t\t\t\t// setTimeout(() => checkJobStatus(jobId), 1000);\r\n\t\t\t\t\t// }\r\n\t\t\t\t// });\r\n\t\t\t\t\t\r\n\t\t\t// }\r\n\t\t\t// checkJobStatus(data.message);\r\n\t\t\t\t\r\n\t\t// });\r\n\t// }\r\n\t\r\n\t// document.getElementById(\"CompanyInterestsButton\").onclick = function() {\r\n\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/get-company-interests\", {\r\n\t\t\t// method: \"POST\",\r\n\t\t\t// headers: {\r\n\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t// },\r\n\t\t\t// body: JSON.stringify({\r\n\t\t\t\t// email: email,\r\n\t\t\t\t// password: password,\r\n\t\t\t\t// cookie: cookie,\r\n\t\t\t\t// profileUrn: profileUrn\r\n\t\t\t// })\r\n\t\t// })\r\n\t\t// .then(response => response.json())\r\n\t\t// .then(data => {\r\n\t\t\t\r\n\t\t\t// var jobId = data.message;\r\n\t\t\t\r\n\t\t\t// console.log(\"job of company interests\", jobId);\r\n\t\t\t\r\n\t\t\t// function checkJobStatus(jobId) {\r\n\t\t\t\t// fetch(\"https://ai-assistant.herokuapp.com/job-status\", {\r\n\t\t\t\t\t// method: \"POST\",\r\n\t\t\t\t\t// headers: {\r\n\t\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t\t// },\r\n\t\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t\t// jobId: jobId\r\n\t\t\t\t\t// })\r\n\t\t\t\t// })\r\n\t\t\t\t\r\n\t\t\t\t// .then(response => response.json())\r\n\t\t\t\t// .then(data => {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// const status = data.status;\r\n\t\t\t\t\t// console.log(status);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// if (status === 'finished') {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t// console.log(\"Successfully gotten company interests\", data.result);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// const words = data.result;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t// var container = document.getElementById('CompanyInterestsContainer');\r\n\r\n\t\t\t\t\t\t// for (var i = 0; i < words.length; i++) {\r\n\r\n\t\t\t\t\t\t\t// var checkbox = document.createElement('input');\r\n\t\t\t\t\t\t\t// checkbox.type = 'checkbox';\r\n\t\t\t\t\t\t\t// checkbox.value = words[i][0];\r\n\t\t\t\t\t\t\t// checkbox.id = words[i][1];\r\n\t\t\t\t\t\t\t// var label = document.createElement('label');\r\n\t\t\t\t\t\t\t// label.textContent = words[i][0];\r\n\t\t\t\t\t\t\t// label.appendChild(checkbox);\r\n\t\t\t\t\t\t\t// container.appendChild(label);\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t// // The job is not finished yet, check again in 1 second\r\n\t\t\t\t\t\t// setTimeout(() => checkJobStatus(jobId), 1000);\r\n\t\t\t\t\t// }\r\n\t\t\t\t// });\r\n\t\t\t\t\t\r\n\t\t\t// }\r\n\t\t\t// checkJobStatus(data.message);\r\n\t\t\t\t\r\n\t\t// });\r\n\t\r\n\t// }\r\n\r\n\t// document.getElementById(\"GenerateConnectNoteButton\").onclick = function() {\r\n\t\t// var checkboxes = document.querySelectorAll('input[type=checkbox]');\r\n\t\t// var topicList = [];\r\n\t\t// for (var i = 0; i < checkboxes.length; i++) {\r\n\t\t\t// if (checkboxes[i].checked) {\r\n\t\t\t\t// var topic = checkboxes[i].value;\r\n\t\t\t\t// topicList.push(topic);\r\n\t\t\t// }\r\n\t\t// }\r\n\t\t// var topicListString = topicList.toString();\r\n\r\n\t\t// var prompt_string = \"This is the profile of a person: \" + \"\\n\" + first_name \r\n\t\t// + \" This is their summary: \" + summary +\r\n\t\t// \" These are their interests: \" + topicListString \r\n\t\t// + \" Use the internet to get something useful about the interests and use it in the request. \"\r\n\t\t// + \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 70 words.\";\r\n\t\t\r\n\t\t// // console.log(prompt_string);\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/use-bingai\", {\r\n\t\t\t// method: \"POST\",\r\n\t\t\t// headers: {\r\n\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t// },\r\n\t\t\t// body: JSON.stringify({\r\n\t\t\t\t// prompt: prompt_string\r\n\t\t\t// })\r\n\t\t// })\r\n\t\t// .then(response => response.json())\r\n\t\t// .then(data => {\r\n\t\t\t\r\n\t\t\t// console.log(data.message);\r\n\t\t\t\r\n\t\t\t// document.getElementById(\"my-textarea\").value = data.message;\r\n\t\t\t\r\n\r\n\t\t// }).catch(error => console.error(error));\r\n\r\n\t// }\r\n\r\n\t// document.getElementById(\"send-button\").onclick = function() {\r\n\r\n\t\t// // fetch to server.js, with profileId and text\r\n\t\t// fetch(\"https://ai-assistant.herokuapp.com/send-connect\", {\r\n\t\t\t\t// method: \"POST\",\r\n\t\t\t\t// headers: {\r\n\t\t\t\t\t// \"Content-Type\": \"application/json\"\r\n\t\t\t\t// },\r\n\t\t\t\t// body: JSON.stringify({\r\n\t\t\t\t\t// email: email,\r\n\t\t\t\t\t// password: password,\r\n\t\t\t\t\t// cookie: cookie,\r\n\t\t\t\t\t// profileId: profileId,\r\n\t\t\t\t\t// text: document.getElementById(\"my-textarea\").value\r\n\t\t\t\t// })\r\n\t\t\t// })\r\n\t\t\t// .then(response => response.json())\r\n\t\t\t// .then(data => {\r\n\t\t\t\t// console.log(\"Successfully sent connect to server\", data.message);\r\n\t\t\t// });\r\n\t// }\r\n"],"mappings":"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C;AACA;AAEA;AAEC;AAEA;AAEA;AAEA;AAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAGD;AACC;AACA;AACD;AACD;AAED;AACA;AAED;AAED;AACA;AACC;AACA;AACA;AACC;AACC;AACA;AACD;AACD;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACC;AACA;AACC;AACD;AACA;AACC;AACD;AACD;AACA;AACA;AAEC;AAEA;AAGD;AAED;AAEA;AAEC;AACA;AACE;AACA;AACC;AACD;AACA;AACC;AACA;AACA;AACA;AACA;AACD;AACD;AACA;AACA;AACC;AACD;AACF;AAGD;AAEA;AAEE;AACE;AACA;AACC;AACD;AACA;AACC;AACA;AACA;AACD;AACD;AACA;AACA;AACC;AAEA;AACA;AAEA;AAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACD;AACF;AAEA;AAEC;AACC;AACA;AACC;AACD;AACA;AACC;AACA;AACA;AACA;AACD;AACD;AACA;AACA;AAEC;AAEA;AAEA;AACC;AACC;AACA;AACC;AACD;AACA;AACC;AACD;AACD;AAEA;AACA;AAEC;AACA;AAEA;AAEC;AAEA;AAEA;AAEA;AAEA;AAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAGD;AACC;AACA;AACD;AACD;AAED;AACA;AAED;AACD;AAEA;AAEC;AACC;AACA;AACC;AACD;AACA;AACC;AACA;AACA;AACA;AACD;AACD;AACA;AACA;AAEC;AAEA;AAEA;AACC;AACC;AACA;AACC;AACD;AACA;AACC;AACD;AACD;AAEA;AACA;AAEC;AACA;AAEA;AAEC;AAEA;AAEA;AAEA;AAEC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAGD;AACC;AACA;AACD;AACD;AAED;AACA;AAED;AAED;AAEA;AACC;AACA;AACA;AACC;AACC;AACA;AACD;AACD;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACC;AACA;AACC;AACD;AACA;AACC;AACD;AACD;AACA;AACA;AAEC;AAEA;AAGD;AAED;AAEA;AAEC;AACA;AACE;AACA;AACC;AACD;AACA;AACC;AACA;AACA;AACA;AACA;AACD;AACD;AACA;AACA;AACC;AACD;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}