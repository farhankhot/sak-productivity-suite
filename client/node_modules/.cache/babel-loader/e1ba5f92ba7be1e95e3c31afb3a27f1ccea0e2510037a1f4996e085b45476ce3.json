{"ast":null,"code":"import _toConsumableArray from\"C:/Users/farha/OneDrive/Documents/sak-productivity-suite/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"C:/Users/farha/OneDrive/Documents/sak-productivity-suite/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/farha/OneDrive/Documents/sak-productivity-suite/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/farha/OneDrive/Documents/sak-productivity-suite/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{useNavigate}from'react-router-dom';import{CheckJobStatus}from\"./CheckJobStatus.js\";import Button from'react-bootstrap/Button';import{ButtonGroup,ListGroup}from'react-bootstrap';import Container from'react-bootstrap/Container';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Home(props){var sessionId=props.sessionId;// console.log(\"Home sessionId: \", sessionId);\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),noteTextArea=_useState4[0],setNoteTextArea=_useState4[1];// const [peopleInterestsArray, setPeopleInterestsArray] = useState([]);\t\n// const [companyInterestsArray, setCompanyInterestsArray] = useState([]);\t\n// const [activityInterestsArray, setActivityInterestsArray] = useState([]);\n// const [selectedInterests, setSelectedInterests] = useState(\"\");\n// const [showProfileArea, setShowProfileArea] = useState(false);\n// const [selectedName, setSelectedName] = useState(\"\");\nvar _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),leadsArray=_useState6[0],setLeadsArray=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showCreateConnectNoteButton=_useState8[0],setShowCreateConnectNoteButton=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),connectNoteArray=_useState10[0],setConnectNoteArray=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),memberUrnIdArray=_useState12[0],setMemberUrnIdArray=_useState12[1];var handleGettingLeads=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data,_leadsArray,_memberUrnIdArray;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"https://sak-productivity-suite.herokuapp.com/get-leads\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({sessionId:sessionId})});case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;_leadsArray=data.lead_list;// console.log(\"Successfully gotten leads: \", data);\n_memberUrnIdArray=data.member_urn_id_list;setLeadsArray(_leadsArray);setMemberUrnIdArray(_memberUrnIdArray);setShowCreateConnectNoteButton(true);_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 17:case\"end\":return _context.stop();}},_callee,null,[[0,14]]);}));return function handleGettingLeads(){return _ref.apply(this,arguments);};}();var handleGettingPeopleInterests=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(sessionId,profileUrn){var response,data,jobId;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:setIsLoading(true);_context2.prev=1;_context2.next=4;return fetch(\"https://sak-productivity-suite.herokuapp.com/get-people-interests\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({sessionId:sessionId,profileUrn:profileUrn})});case 4:response=_context2.sent;_context2.next=7;return response.json();case 7:data=_context2.sent;jobId=data.message;CheckJobStatus(jobId,function(peopleInterestsArray){setIsLoading(false);// setPeopleInterestsArray(peopleInterestsArray);\t\n});_context2.next=15;break;case 12:_context2.prev=12;_context2.t0=_context2[\"catch\"](1);console.error(_context2.t0);case 15:case\"end\":return _context2.stop();}},_callee2,null,[[1,12]]);}));return function handleGettingPeopleInterests(_x,_x2){return _ref2.apply(this,arguments);};}();var handleGettingCompanyInterests=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(sessionId,profileUrn){var response,data,jobId;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:setIsLoading(true);_context3.prev=1;_context3.next=4;return fetch(\"https://sak-productivity-suite.herokuapp.com/get-company-interests\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({sessionId:sessionId,profileUrn:profileUrn})});case 4:response=_context3.sent;_context3.next=7;return response.json();case 7:data=_context3.sent;jobId=data.message;CheckJobStatus(jobId,function(companyInterestsArray){setIsLoading(false);// setCompanyInterestsArray(companyInterestsArray);\t\n});_context3.next=15;break;case 12:_context3.prev=12;_context3.t0=_context3[\"catch\"](1);console.error(_context3.t0);case 15:case\"end\":return _context3.stop();}},_callee3,null,[[1,12]]);}));return function handleGettingCompanyInterests(_x3,_x4){return _ref3.apply(this,arguments);};}();// This button goes through the lead list and creates a Connect note for them\n// It chooses max 5 relationships + interests and prompts Bing Chat to output a Connect note \nvar handleAutoCreatingNotes=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(sessionId,memberUrnId){var response,jobId;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return fetch(\"https://sak-productivity-suite.herokuapp.com/get-lead-info\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({sessionId:sessionId,leadsArray:leadsArray,memberUrnIdArray:memberUrnIdArray})});case 3:response=_context4.sent;_context4.next=6;return response.json();case 6:jobId=_context4.sent;CheckJobStatus(jobId.message,function(resultArray){// This gets an array of Connect Notes for each person in the lead list\n// Save to an array, then display a textbox and the note for each note in list\nsetConnectNoteArray(resultArray);console.log(\"Successfully gotten Connect note array: \",resultArray);});_context4.next=13;break;case 10:_context4.prev=10;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);case 13:case\"end\":return _context4.stop();}},_callee4,null,[[0,10]]);}));return function handleAutoCreatingNotes(_x5,_x6){return _ref4.apply(this,arguments);};}();var handleMakingConnectNote=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(fullName){var prompt,response,data,jobId;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:// TODO: Add summary back\nprompt=\"This is the profile of a person: \"+\"\\n\"+fullName+\" This is their summary: \"+\" These are their interests: \"+\" Use the internet to get something useful about the interests and use it in the request. \"+\" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 300 characters.\";setIsLoading(true);_context5.prev=2;_context5.next=5;return fetch(\"https://sak-productivity-suite.herokuapp.com/use-bingai\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({prompt:prompt})});case 5:response=_context5.sent;_context5.next=8;return response.json();case 8:data=_context5.sent;jobId=data.message;CheckJobStatus(jobId,function(resultArray){setIsLoading(false);setNoteTextArea(resultArray);});_context5.next=16;break;case 13:_context5.prev=13;_context5.t0=_context5[\"catch\"](2);console.log(_context5.t0);case 16:case\"end\":return _context5.stop();}},_callee5,null,[[2,13]]);}));return function handleMakingConnectNote(_x7){return _ref5.apply(this,arguments);};}();var handleSendingConnectNote=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(sessionId,profileId){var response,data;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:_context6.prev=0;_context6.next=3;return fetch(\"https://sak-productivity-suite.herokuapp.com/send-connect\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({sessionId:sessionId,profileId:profileId,text:noteTextArea})});case 3:response=_context6.sent;_context6.next=6;return response.json();case 6:data=_context6.sent;console.log(\"Successfully sent the connect note to the person\",data.message);_context6.next=13;break;case 10:_context6.prev=10;_context6.t0=_context6[\"catch\"](0);console.log(_context6.t0);case 13:case\"end\":return _context6.stop();}},_callee6,null,[[0,10]]);}));return function handleSendingConnectNote(_x8,_x9){return _ref6.apply(this,arguments);};}();// ================ Create and Send Connect Note ===============================\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"button\",onClick:handleGettingLeads,children:\"Get leads\"}),showCreateConnectNoteButton&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"button\",onClick:function onClick(){return handleAutoCreatingNotes(sessionId,leadsArray[0][4]);},children:\"Auto Create notes for all leads\"}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Search Results:\"}),/*#__PURE__*/_jsx(ListGroup,{children:leadsArray.map(function(leadInfo,index){return/*#__PURE__*/_jsxs(ListGroup.Item,{children:[leadInfo[0],\", \",leadInfo[1],/*#__PURE__*/_jsxs(ButtonGroup,{\"aria-label\":\"Basic example\",className:\"mb-2\",children:[/*#__PURE__*/_jsx(Button,{onClick:handleGettingPeopleInterests(sessionId,leadInfo[4]),children:\"Get people interests\"}),/*#__PURE__*/_jsx(Button,{onClick:handleGettingCompanyInterests(sessionId,leadInfo[4]),children:\"Get company interests\"}),/*#__PURE__*/_jsx(Button,{onClick:handleMakingConnectNote(leadInfo[0]),children:\"Make Connect Note\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSendingConnectNote(sessionId,leadInfo[4]),children:\"Send Connect Note\"})]}),connectNoteArray.length>0&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"textarea\",{value:connectNoteArray[index],onChange:function onChange(event){var updatedConnectNote=_toConsumableArray(connectNoteArray);updatedConnectNote[index]=event.target.value;setConnectNoteArray(updatedConnectNote);}})})]});})})]})]});}export default Home;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","CheckJobStatus","Button","ButtonGroup","ListGroup","Container","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Home","props","sessionId","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","noteTextArea","setNoteTextArea","_useState5","_useState6","leadsArray","setLeadsArray","_useState7","_useState8","showCreateConnectNoteButton","setShowCreateConnectNoteButton","_useState9","_useState10","connectNoteArray","setConnectNoteArray","_useState11","_useState12","memberUrnIdArray","setMemberUrnIdArray","handleGettingLeads","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","_leadsArray","_memberUrnIdArray","wrap","_callee$","_context","prev","next","fetch","method","headers","body","JSON","stringify","sent","json","lead_list","member_urn_id_list","t0","console","log","stop","apply","arguments","handleGettingPeopleInterests","_ref2","_callee2","profileUrn","jobId","_callee2$","_context2","message","peopleInterestsArray","error","_x","_x2","handleGettingCompanyInterests","_ref3","_callee3","_callee3$","_context3","companyInterestsArray","_x3","_x4","handleAutoCreatingNotes","_ref4","_callee4","memberUrnId","_callee4$","_context4","resultArray","_x5","_x6","handleMakingConnectNote","_ref5","_callee5","fullName","prompt","_callee5$","_context5","_x7","handleSendingConnectNote","_ref6","_callee6","profileId","_callee6$","_context6","text","_x8","_x9","children","variant","type","onClick","map","leadInfo","index","Item","className","length","value","onChange","event","updatedConnectNote","_toConsumableArray","target"],"sources":["C:/Users/farha/OneDrive/Documents/sak-productivity-suite/client/src/Home.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {CheckJobStatus} from \"./CheckJobStatus.js\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { ButtonGroup, ListGroup } from 'react-bootstrap';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nfunction Home(props) {\r\n\tconst {sessionId} = props;\r\n\t// console.log(\"Home sessionId: \", sessionId);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\t\r\n\tconst [noteTextArea, setNoteTextArea] = useState(\"\"); \r\n\t\r\n\t// const [peopleInterestsArray, setPeopleInterestsArray] = useState([]);\t\r\n\t// const [companyInterestsArray, setCompanyInterestsArray] = useState([]);\t\r\n\t// const [activityInterestsArray, setActivityInterestsArray] = useState([]);\r\n\t// const [selectedInterests, setSelectedInterests] = useState(\"\");\r\n\r\n\t// const [showProfileArea, setShowProfileArea] = useState(false);\r\n\t// const [selectedName, setSelectedName] = useState(\"\");\r\n\r\n\tconst [leadsArray, setLeadsArray] = useState([]);\r\n\tconst [showCreateConnectNoteButton, setShowCreateConnectNoteButton] = useState(false);\r\n\r\n\tconst [connectNoteArray, setConnectNoteArray] = useState([]);\r\n\r\n\tconst [memberUrnIdArray, setMemberUrnIdArray] = useState([]);\r\n\t\t\r\n\tconst handleGettingLeads = async() => {\r\n        try {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-leads\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tsessionId: sessionId\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst leadsArray = data.lead_list;\r\n\t\t\t// console.log(\"Successfully gotten leads: \", data);\r\n\t\t\tconst memberUrnIdArray = data.member_urn_id_list; \r\n\t\t\tsetLeadsArray(leadsArray);\r\n\t\t\tsetMemberUrnIdArray(memberUrnIdArray);\r\n\t\t\tsetShowCreateConnectNoteButton(true);\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\t\r\n\t};\r\n\r\n\tconst handleGettingPeopleInterests = async (sessionId, profileUrn) => {\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-people-interests\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tsessionId: sessionId,\r\n\t\t\t\t\tprofileUrn: profileUrn\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tconst data = await response.json();\t\t\t\r\n\t\t\tconst jobId = data.message;\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId, (peopleInterestsArray) => {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t// setPeopleInterestsArray(peopleInterestsArray);\t\r\n\t\t\t});\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleGettingCompanyInterests = async (sessionId, profileUrn) => {\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-company-interests\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tsessionId: sessionId,\r\n\t\t\t\t\tprofileUrn: profileUrn\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst jobId = data.message;\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId, (companyInterestsArray) => {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\t// setCompanyInterestsArray(companyInterestsArray);\t\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\r\n\t// This button goes through the lead list and creates a Connect note for them\r\n\t// It chooses max 5 relationships + interests and prompts Bing Chat to output a Connect note \r\n\tconst handleAutoCreatingNotes = async(sessionId, memberUrnId) => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-lead-info\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tsessionId: sessionId,\r\n\t\t\t\t\tleadsArray: leadsArray,\r\n\t\t\t\t\tmemberUrnIdArray: memberUrnIdArray\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\tconst jobId = await response.json();\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId.message, (resultArray) => {\r\n\t\t\t\t// This gets an array of Connect Notes for each person in the lead list\r\n\t\t\t\t// Save to an array, then display a textbox and the note for each note in list\r\n\t\t\t\tsetConnectNoteArray(resultArray);\r\n\t\t\t\tconsole.log(\"Successfully gotten Connect note array: \", resultArray);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleMakingConnectNote = async (fullName) => {\r\n\t\t\r\n\t\t// TODO: Add summary back\r\n\t\tconst prompt = \"This is the profile of a person: \" + \"\\n\" + fullName \r\n\t\t+ \" This is their summary: \" +\r\n\t\t\" These are their interests: \"  \r\n\t\t+ \" Use the internet to get something useful about the interests and use it in the request. \"\r\n\t\t+ \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 300 characters.\";\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/use-bingai\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tprompt: prompt\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst jobId = data.message;\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId, (resultArray) => {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\tsetNoteTextArea(resultArray);\t\r\n\t\t\t});\r\n\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\t\t\r\n\tconst handleSendingConnectNote = async (sessionId, profileId) => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/send-connect\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tsessionId: sessionId,\r\n\t\t\t\t\tprofileId: profileId,\r\n\t\t\t\t\ttext: noteTextArea\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconsole.log(\"Successfully sent the connect note to the person\", data.message);\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\t// ================ Create and Send Connect Note ===============================\r\n\r\n\treturn (\r\n\t\t<>\r\n            <Button variant=\"primary\" type=\"button\" onClick={handleGettingLeads}>\r\n                Get leads\r\n            </Button>\r\n\t\t\t{showCreateConnectNoteButton && <Button variant=\"primary\" type=\"button\" onClick={() => handleAutoCreatingNotes(sessionId, leadsArray[0][4])}>\r\n                Auto Create notes for all leads\r\n            </Button>}\r\n\r\n\t\t\t<Container>\r\n\t\t\t\t<h1>Search Results:</h1>\r\n\t\t\t\t<ListGroup>\r\n\t\t\t\t\t{leadsArray.map((leadInfo, index) => (\r\n\t\t\t\t\t\t<ListGroup.Item\r\n\t\t\t\t\t\t\t// action\r\n\t\t\t\t\t\t\t// onClick={() => {\r\n\t\t\t\t\t\t\t// \tsetShowProfileArea(true);\r\n\t\t\t\t\t\t\t// \tsetSelectedName(leadInfo[0]);\r\n\t\t\t\t\t\t\t// }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{leadInfo[0]}, {leadInfo[1]}\r\n\r\n\t\t\t\t\t\t\t<ButtonGroup aria-label=\"Basic example\" className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t<Button onClick={handleGettingPeopleInterests(sessionId, leadInfo[4])}>\r\n\t\t\t\t\t\t\t\t\tGet people interests\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button onClick={handleGettingCompanyInterests(sessionId, leadInfo[4])}>\r\n\t\t\t\t\t\t\t\t\tGet company interests\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button onClick={handleMakingConnectNote(leadInfo[0])}>\r\n\t\t\t\t\t\t\t\t\tMake Connect Note\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Button onClick={handleSendingConnectNote(sessionId, leadInfo[4])}>\r\n\t\t\t\t\t\t\t\t\tSend Connect Note\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</ButtonGroup>\r\n\r\n\t\t\t\t\t\t\t{connectNoteArray.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\t\t\tvalue={connectNoteArray[index]} \r\n\t\t\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\t\t\tconst updatedConnectNote = [...connectNoteArray];\r\n\t\t\t\t\t\t\t\t\t\t\tupdatedConnectNote[index] = event.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\tsetConnectNoteArray(updatedConnectNote);\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ListGroup>\r\n\t\t\t\t{/* leadInfo out of scope here, need to send a array of member_urns to handlSendingConnectNote */}\r\n\t\t\t\t{/* <Button onClick={handleSendingConnectNote(sessionId, leadInfo[4])}>\r\n\t\t\t\t\tSend Connect Note to all leads\r\n\t\t\t\t</Button> */}\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t)\r\n}\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}