{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/farha/OneDrive/Documents/sak-productivity-suite/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/farha/OneDrive/Documents/sak-productivity-suite/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/farha/OneDrive/Documents/sak-productivity-suite/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{useNavigate}from'react-router-dom';import{CheckJobStatus}from\"./CheckJobStatus.js\";import Button from'react-bootstrap/Button';import{ButtonGroup,ListGroup}from'react-bootstrap';import Container from'react-bootstrap/Container';import Form from'react-bootstrap/Form';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Home(props){var sessionId=props.sessionId;// console.log(\"Home sessionId: \", sessionId);\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),noteTextArea=_useState4[0],setNoteTextArea=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),peopleInterestsArray=_useState6[0],setPeopleInterestsArray=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),companyInterestsArray=_useState8[0],setCompanyInterestsArray=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),activityInterestsArray=_useState10[0],setActivityInterestsArray=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),selectedInterests=_useState12[0],setSelectedInterests=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),showProfileArea=_useState14[0],setShowProfileArea=_useState14[1];var _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),selectedName=_useState16[0],setSelectedName=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),leadsArray=_useState18[0],setLeadsArray=_useState18[1];var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),showCreateConnectNoteButton=_useState20[0],setShowCreateConnectNoteButton=_useState20[1];var _useState21=useState([]),_useState22=_slicedToArray(_useState21,2),connectNoteArray=_useState22[0],setConnectNoteArray=_useState22[1];var _useState23=useState([]),_useState24=_slicedToArray(_useState23,2),memberUrnIdArray=_useState24[0],setMemberUrnIdArray=_useState24[1];var handleGettingLeads=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data,_leadsArray,_memberUrnIdArray;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"https://sak-productivity-suite.herokuapp.com/get-leads\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({sessionId:sessionId})});case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;_leadsArray=data.lead_list;// console.log(\"Successfully gotten leads: \", data);\n_memberUrnIdArray=data.member_urn_id_list;setLeadsArray(_leadsArray);setMemberUrnIdArray(_memberUrnIdArray);setShowCreateConnectNoteButton(true);_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 17:case\"end\":return _context.stop();}},_callee,null,[[0,14]]);}));return function handleGettingLeads(){return _ref.apply(this,arguments);};}();// This button goes through the lead list and creates a Connect note for them\n// It chooses max 5 relationships + interests and prompts Bing Chat to output a Connect note \nvar handleAutoCreatingNotes=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(sessionId,memberUrnId){var response,jobId;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetch(\"https://sak-productivity-suite.herokuapp.com/get-lead-info\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({sessionId:sessionId,leadsArray:leadsArray,memberUrnIdArray:memberUrnIdArray})});case 3:response=_context2.sent;_context2.next=6;return response.json();case 6:jobId=_context2.sent;CheckJobStatus(jobId.message,function(resultArray){// This gets an array of Connect Notes for each person in the lead list\n// Save to an array, then display a textbox and the note for each note in list\nsetConnectNoteArray(resultArray);console.log(\"Successfully gotten Connect note array: \",resultArray);});_context2.next=13;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 13:case\"end\":return _context2.stop();}},_callee2,null,[[0,10]]);}));return function handleAutoCreatingNotes(_x,_x2){return _ref2.apply(this,arguments);};}();var handleGettingPeopleInterests=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(sessionId,profileUrn){var response,data,jobId;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"https://sak-productivity-suite.herokuapp.com/get-people-interests\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({sessionId:sessionId,profileUrn:profileUrn})});case 3:response=_context3.sent;_context3.next=6;return response.json();case 6:data=_context3.sent;jobId=data.message;CheckJobStatus(jobId,function(peopleInterestsArray){setPeopleInterestsArray(peopleInterestsArray);});_context3.next=14;break;case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](0);console.error(_context3.t0);case 14:case\"end\":return _context3.stop();}},_callee3,null,[[0,11]]);}));return function handleGettingPeopleInterests(_x3,_x4){return _ref3.apply(this,arguments);};}();var handleGettingCompanyInterests=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(sessionId,profileUrn){var response,data,jobId;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return fetch(\"https://sak-productivity-suite.herokuapp.com/get-company-interests\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({sessionId:sessionId,profileUrn:profileUrn})});case 3:response=_context4.sent;_context4.next=6;return response.json();case 6:data=_context4.sent;jobId=data.message;CheckJobStatus(jobId,function(companyInterestsArray){setCompanyInterestsArray(companyInterestsArray);});_context4.next=14;break;case 11:_context4.prev=11;_context4.t0=_context4[\"catch\"](0);console.error(_context4.t0);case 14:case\"end\":return _context4.stop();}},_callee4,null,[[0,11]]);}));return function handleGettingCompanyInterests(_x5,_x6){return _ref4.apply(this,arguments);};}();var handleGettingActivityInterests=function handleGettingActivityInterests(){// TODO\n};var handleInterestsSelection=function handleInterestsSelection(event){var selections=event.target.options;var updatedInterestsArray=[];for(var i=0;i<selections.length;i++){if(selections[i].selected){updatedInterestsArray.push(selections[i].value);}}setSelectedInterests(updatedInterestsArray);};// ================ Create and Send Connect Note(s) ===============================\nvar handleMakingConnectNote=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(fullName){var prompt,response,data,jobId;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:// TODO: Add summary, interests back\nprompt=\"This is the profile of a person: \"+fullName+\" This is their summary: \"+\" These are their interests: \"+ +\" Use the internet to get something useful about the interests and use it in the request. \"+\" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 300 characters.\";_context5.prev=1;_context5.next=4;return fetch(\"https://sak-productivity-suite.herokuapp.com/use-bingai\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({prompt:prompt})});case 4:response=_context5.sent;_context5.next=7;return response.json();case 7:data=_context5.sent;jobId=data.message;CheckJobStatus(jobId,function(resultArray){setNoteTextArea(resultArray);});_context5.next=15;break;case 12:_context5.prev=12;_context5.t0=_context5[\"catch\"](1);console.log(_context5.t0);case 15:case\"end\":return _context5.stop();}},_callee5,null,[[1,12]]);}));return function handleMakingConnectNote(_x7){return _ref5.apply(this,arguments);};}();var handleSendingConnectNote=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(sessionId,profileId){var response,data;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:_context6.prev=0;_context6.next=3;return fetch(\"https://sak-productivity-suite.herokuapp.com/send-connect\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({sessionId:sessionId,profileId:profileId,text:noteTextArea})});case 3:response=_context6.sent;_context6.next=6;return response.json();case 6:data=_context6.sent;console.log(\"Successfully sent the connect note to the person\",data.message);_context6.next=13;break;case 10:_context6.prev=10;_context6.t0=_context6[\"catch\"](0);console.log(_context6.t0);case 13:case\"end\":return _context6.stop();}},_callee6,null,[[0,10]]);}));return function handleSendingConnectNote(_x8,_x9){return _ref6.apply(this,arguments);};}();// const handleSendingMultipleConnectNote = async (sessionId) => {\n// \ttry {\n// \t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/send-multiple-connect\", {\n// \t\t\tmethod: \"POST\",\n// \t\t\theaders: {\n// \t\t\t\t\"Content-Type\": \"application/json\"\n// \t\t\t},\n// \t\t\tbody: JSON.stringify({\n// \t\t\t\tsessionId: sessionId,\n// \t\t\t\tmemberUrnIdArray: memberUrnIdArray,\n// \t\t\t\ttext: connectNoteArray\n// \t\t\t})\n// \t\t});\n// \t\tconst data = await response.json();\n// \t\tconsole.log(\"Successfully sent the connect note to the person\", data.message);\n// \t}catch(error){\n// \t\tconsole.log(error);\n// \t}\n// };\n// ================ Create and Send Connect Note(s) ===============================\nvar handleNoteTextAreaChange=function handleNoteTextAreaChange(event){setNoteTextArea(event.target.value);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"button\",onClick:handleGettingLeads,children:\"Get leads\"}),showCreateConnectNoteButton&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"button\",onClick:function onClick(){return handleAutoCreatingNotes(sessionId,leadsArray[0][4]);},children:\"Auto Create notes for all leads\"}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Search Results:\"}),/*#__PURE__*/_jsx(ListGroup,{children:leadsArray.map(function(leadInfo,index){return/*#__PURE__*/_jsxs(ListGroup.Item,{onClick:function onClick(){setShowProfileArea(true);setSelectedName(leadInfo[4]);},children:[leadInfo[0],\", \",leadInfo[1],showProfileArea&&selectedName===leadInfo[4]&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Form.Group,{children:/*#__PURE__*/_jsx(Form.Control,{as:\"textarea\",value:noteTextArea,onChange:handleNoteTextAreaChange,placeholder:\"The generated note will appear here\"})}),/*#__PURE__*/_jsxs(ButtonGroup,{\"aria-label\":\"Basic example\",className:\"mb-2\",children:[/*#__PURE__*/_jsx(Button,{onClick:handleGettingPeopleInterests(sessionId,leadInfo[4]),children:\"Get people interests\"}),/*#__PURE__*/_jsx(Button,{onClick:handleGettingCompanyInterests(sessionId,leadInfo[4]),children:\"Get company interests\"}),/*#__PURE__*/_jsx(Button,{onClick:handleMakingConnectNote(leadInfo[0]),children:\"Make Connect Note\"})]}),peopleInterestsArray.length>0&&/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(Form.Control,{as:\"select\",multiple:true,onChange:handleInterestsSelection,children:peopleInterestsArray.map(function(interest){return/*#__PURE__*/_jsx(\"option\",{children:interest[0]},interest);})})}),companyInterestsArray.length>0&&/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(Form.Control,{as:\"select\",multiple:true,onChange:handleInterestsSelection,children:companyInterestsArray.map(function(interest){return/*#__PURE__*/_jsx(\"option\",{children:interest[0]},interest);})})}),activityInterestsArray.length>0&&/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(Form.Control,{as:\"select\",multiple:true,onChange:handleInterestsSelection,children:activityInterestsArray.map(function(interest){return/*#__PURE__*/_jsx(\"option\",{children:interest[0]},interest);})})})]}),connectNoteArray.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Form.Group,{children:/*#__PURE__*/_jsx(Form.Control,{as:\"textarea\",value:connectNoteArray[index],onChange:function onChange(event){handleNoteTextAreaChange(event,index);}})}),/*#__PURE__*/_jsxs(ButtonGroup,{\"aria-label\":\"Basic example\",className:\"mb-2\",children:[/*#__PURE__*/_jsx(Button,{onClick:function onClick(){handleGettingPeopleInterests(sessionId,leadInfo[4]);},children:\"Get people interests\"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){handleGettingCompanyInterests(sessionId,leadInfo[4]);},children:\"Get company interests\"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){handleMakingConnectNote(leadInfo[0]);},children:\"Make Connect Note\"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){handleSendingConnectNote(sessionId,leadInfo[4]);},children:\"Send Connect Note\"})]})]})]});})})]})]});}export default Home;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","CheckJobStatus","Button","ButtonGroup","ListGroup","Container","Form","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Home","props","sessionId","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","noteTextArea","setNoteTextArea","_useState5","_useState6","peopleInterestsArray","setPeopleInterestsArray","_useState7","_useState8","companyInterestsArray","setCompanyInterestsArray","_useState9","_useState10","activityInterestsArray","setActivityInterestsArray","_useState11","_useState12","selectedInterests","setSelectedInterests","_useState13","_useState14","showProfileArea","setShowProfileArea","_useState15","_useState16","selectedName","setSelectedName","_useState17","_useState18","leadsArray","setLeadsArray","_useState19","_useState20","showCreateConnectNoteButton","setShowCreateConnectNoteButton","_useState21","_useState22","connectNoteArray","setConnectNoteArray","_useState23","_useState24","memberUrnIdArray","setMemberUrnIdArray","handleGettingLeads","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","_leadsArray","_memberUrnIdArray","wrap","_callee$","_context","prev","next","fetch","method","headers","body","JSON","stringify","sent","json","lead_list","member_urn_id_list","t0","console","log","stop","apply","arguments","handleAutoCreatingNotes","_ref2","_callee2","memberUrnId","jobId","_callee2$","_context2","message","resultArray","_x","_x2","handleGettingPeopleInterests","_ref3","_callee3","profileUrn","_callee3$","_context3","error","_x3","_x4","handleGettingCompanyInterests","_ref4","_callee4","_callee4$","_context4","_x5","_x6","handleGettingActivityInterests","handleInterestsSelection","event","selections","target","options","updatedInterestsArray","i","length","selected","push","value","handleMakingConnectNote","_ref5","_callee5","fullName","prompt","_callee5$","_context5","_x7","handleSendingConnectNote","_ref6","_callee6","profileId","_callee6$","_context6","text","_x8","_x9","handleNoteTextAreaChange","children","variant","type","onClick","map","leadInfo","index","Item","Group","Control","as","onChange","placeholder","className","multiple","interest"],"sources":["C:/Users/farha/OneDrive/Documents/sak-productivity-suite/client/src/Home.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {CheckJobStatus} from \"./CheckJobStatus.js\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { ButtonGroup, ListGroup } from 'react-bootstrap';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nfunction Home(props) {\r\n\tconst {sessionId} = props;\r\n\t// console.log(\"Home sessionId: \", sessionId);\r\n\t\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\t\r\n\tconst [noteTextArea, setNoteTextArea] = useState(\"\"); \r\n\t\r\n\tconst [peopleInterestsArray, setPeopleInterestsArray] = useState([]);\t\r\n\tconst [companyInterestsArray, setCompanyInterestsArray] = useState([]);\t\r\n\tconst [activityInterestsArray, setActivityInterestsArray] = useState([]);\r\n\tconst [selectedInterests, setSelectedInterests] = useState(\"\");\r\n\r\n\tconst [showProfileArea, setShowProfileArea] = useState(false);\r\n\tconst [selectedName, setSelectedName] = useState(\"\");\r\n\r\n\tconst [leadsArray, setLeadsArray] = useState([]);\r\n\tconst [showCreateConnectNoteButton, setShowCreateConnectNoteButton] = useState(false);\r\n\r\n\tconst [connectNoteArray, setConnectNoteArray] = useState([]);\r\n\r\n\tconst [memberUrnIdArray, setMemberUrnIdArray] = useState([]);\r\n\t\t\r\n\tconst handleGettingLeads = async() => {\r\n        try {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-leads\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tsessionId: sessionId\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst leadsArray = data.lead_list;\r\n\t\t\t// console.log(\"Successfully gotten leads: \", data);\r\n\t\t\tconst memberUrnIdArray = data.member_urn_id_list; \r\n\t\t\tsetLeadsArray(leadsArray);\r\n\t\t\tsetMemberUrnIdArray(memberUrnIdArray);\r\n\t\t\tsetShowCreateConnectNoteButton(true);\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\t\r\n\t};\r\n\r\n\t// This button goes through the lead list and creates a Connect note for them\r\n\t// It chooses max 5 relationships + interests and prompts Bing Chat to output a Connect note \r\n\tconst handleAutoCreatingNotes = async(sessionId, memberUrnId) => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-lead-info\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tsessionId: sessionId,\r\n\t\t\t\t\tleadsArray: leadsArray,\r\n\t\t\t\t\tmemberUrnIdArray: memberUrnIdArray\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\tconst jobId = await response.json();\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId.message, (resultArray) => {\r\n\t\t\t\t// This gets an array of Connect Notes for each person in the lead list\r\n\t\t\t\t// Save to an array, then display a textbox and the note for each note in list\r\n\t\t\t\tsetConnectNoteArray(resultArray);\r\n\t\t\t\tconsole.log(\"Successfully gotten Connect note array: \", resultArray);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleGettingPeopleInterests = async (sessionId, profileUrn) => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-people-interests\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tsessionId: sessionId,\r\n\t\t\t\t\tprofileUrn: profileUrn\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tconst data = await response.json();\t\t\t\r\n\t\t\tconst jobId = data.message;\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId, (peopleInterestsArray) => {\r\n\t\t\t\t\r\n\t\t\t\tsetPeopleInterestsArray(peopleInterestsArray);\t\r\n\t\t\t});\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleGettingCompanyInterests = async (sessionId, profileUrn) => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-company-interests\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tsessionId: sessionId,\r\n\t\t\t\t\tprofileUrn: profileUrn\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst jobId = data.message;\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId, (companyInterestsArray) => {\r\n\t\t\t\t\r\n\t\t\t\tsetCompanyInterestsArray(companyInterestsArray);\t\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleGettingActivityInterests = () => {\r\n\t\t// TODO\r\n\t};\r\n\t\r\n\tconst handleInterestsSelection = (event) => {\r\n\t\tvar selections = event.target.options;\r\n\t\tconst updatedInterestsArray = [];\r\n\t\tfor (var i = 0; i < selections.length; i++){\r\n\t\t\tif(selections[i].selected){\r\n\t\t\t\tupdatedInterestsArray.push(selections[i].value);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetSelectedInterests(updatedInterestsArray);\r\n\t}\r\n\t\r\n\t// ================ Create and Send Connect Note(s) ===============================\r\n\tconst handleMakingConnectNote = async (fullName) => {\r\n\t\t\r\n\t\t// TODO: Add summary, interests back\r\n\t\tconst prompt = \"This is the profile of a person: \" + fullName\r\n\t\t+ \" This is their summary: \" +\r\n\t\t\" These are their interests: \" + \r\n\t\t+ \" Use the internet to get something useful about the interests and use it in the request. \"\r\n\t\t+ \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. The length should be no more than 300 characters.\";\r\n\t\t\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/use-bingai\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tprompt: prompt\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst jobId = data.message;\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId, (resultArray) => {\r\n\t\t\t\t\r\n\t\t\t\tsetNoteTextArea(resultArray);\t\r\n\t\t\t});\r\n\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSendingConnectNote = async (sessionId, profileId) => {\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/send-connect\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tsessionId: sessionId,\r\n\t\t\t\t\tprofileId: profileId,\r\n\t\t\t\t\ttext: noteTextArea\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconsole.log(\"Successfully sent the connect note to the person\", data.message);\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t};\r\n\r\n\t// const handleSendingMultipleConnectNote = async (sessionId) => {\r\n\t// \ttry {\r\n\t// \t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/send-multiple-connect\", {\r\n\t// \t\t\tmethod: \"POST\",\r\n\t// \t\t\theaders: {\r\n\t// \t\t\t\t\"Content-Type\": \"application/json\"\r\n\t// \t\t\t},\r\n\t// \t\t\tbody: JSON.stringify({\r\n\t// \t\t\t\tsessionId: sessionId,\r\n\t// \t\t\t\tmemberUrnIdArray: memberUrnIdArray,\r\n\t// \t\t\t\ttext: connectNoteArray\r\n\t// \t\t\t})\r\n\t// \t\t});\r\n\t// \t\tconst data = await response.json();\r\n\t// \t\tconsole.log(\"Successfully sent the connect note to the person\", data.message);\r\n\t// \t}catch(error){\r\n\t// \t\tconsole.log(error);\r\n\t// \t}\r\n\t// };\r\n\t// ================ Create and Send Connect Note(s) ===============================\r\n\r\n\tconst handleNoteTextAreaChange = (event) => {\r\n\t\tsetNoteTextArea(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n            <Button variant=\"primary\" type=\"button\" onClick={handleGettingLeads}>\r\n                Get leads\r\n            </Button>\r\n\t\t\t{showCreateConnectNoteButton && <Button variant=\"primary\" type=\"button\" onClick={() => handleAutoCreatingNotes(sessionId, leadsArray[0][4])}>\r\n                Auto Create notes for all leads\r\n            </Button>}\r\n\r\n\t\t\t<Container>\r\n\t\t\t\t<h1>Search Results:</h1>\r\n\t\t\t\t<ListGroup>\r\n\t\t\t\t\t{leadsArray.map((leadInfo, index) => (\r\n\t\t\t\t\t\t<ListGroup.Item\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetShowProfileArea(true);\r\n\t\t\t\t\t\t\t\tsetSelectedName(leadInfo[4]);\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t{leadInfo[0]}, {leadInfo[1]}\r\n\r\n\t\t\t\t\t\t\t{showProfileArea && selectedName === leadInfo[4] && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={noteTextArea}\r\n\t\t\t\t\t\t\t\t\t\tonChange={handleNoteTextAreaChange}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"The generated note will appear here\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t\t\t<ButtonGroup aria-label=\"Basic example\" className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={handleGettingPeopleInterests(sessionId, leadInfo[4])}>\r\n\t\t\t\t\t\t\t\t\t\t\tGet people interests\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={handleGettingCompanyInterests(sessionId, leadInfo[4])}>\r\n\t\t\t\t\t\t\t\t\t\t\tGet company interests\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={handleMakingConnectNote(leadInfo[0])}>\r\n\t\t\t\t\t\t\t\t\t\t\tMake Connect Note\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t{/* <Button onClick={handleSendingConnectNote(sessionId, leadInfo[4])}>\r\n\t\t\t\t\t\t\t\t\t\t\tSend Connect Note\r\n\t\t\t\t\t\t\t\t\t\t</Button> */}\r\n\t\t\t\t\t\t\t\t\t</ButtonGroup>\r\n\r\n\t\t\t\t\t\t\t\t\t{peopleInterestsArray.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleInterestsSelection}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{peopleInterestsArray.map((interest) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={interest}>{interest[0]}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{companyInterestsArray.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleInterestsSelection}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{companyInterestsArray.map((interest) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={interest}>{interest[0]}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t{activityInterestsArray.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleInterestsSelection}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{activityInterestsArray.map((interest) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={interest}>{interest[0]}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{(connectNoteArray.length > 0) && (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={connectNoteArray[index]} \r\n\t\t\t\t\t\t\t\t\t\t\tonChange={ (event) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleNoteTextAreaChange(event, index)\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<ButtonGroup aria-label=\"Basic example\" className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={ () => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleGettingPeopleInterests(sessionId, leadInfo[4])\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\tGet people interests\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={ () => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleGettingCompanyInterests(sessionId, leadInfo[4])\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\tGet company interests\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={ () => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleMakingConnectNote(leadInfo[0])\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\tMake Connect Note\r\n\t\t\t\t\t\t\t\t\t\t</Button>\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={ () => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleSendingConnectNote(sessionId, leadInfo[4])\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\tSend Connect Note\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ListGroup>\r\n\t\t\t\t{/* {connectNoteArray.length > 0 && (<Button onClick={handleSendingMultipleConnectNote(sessionId)}>\r\n\t\t\t\t\tSend Connect Note to all leads\r\n\t\t\t\t</Button>)} */}\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t)\r\n}\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}