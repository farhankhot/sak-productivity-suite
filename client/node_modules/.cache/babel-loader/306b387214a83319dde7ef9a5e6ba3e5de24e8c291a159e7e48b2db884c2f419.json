{"ast":null,"code":"import _toConsumableArray from\"C:/Users/farha/OneDrive/Documents/sak-productivity-suite/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"C:/Users/farha/OneDrive/Documents/sak-productivity-suite/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/farha/OneDrive/Documents/sak-productivity-suite/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/farha/OneDrive/Documents/sak-productivity-suite/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{CheckJobStatus}from\"./CheckJobStatus.js\";import Button from'react-bootstrap/Button';import{ButtonGroup,ListGroup}from'react-bootstrap';import Container from'react-bootstrap/Container';import Form from'react-bootstrap/Form';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Home(props){var sessionId=props.sessionId;// console.log(\"Home sessionId: \", sessionId);\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState(Array.from({length:25},function(){return[];})),_useState4=_slicedToArray(_useState3,2),peopleInterestsArray=_useState4[0],setPeopleInterestsArray=_useState4[1];var _useState5=useState(Array.from({length:25},function(){return[];})),_useState6=_slicedToArray(_useState5,2),companyInterestsArray=_useState6[0],setCompanyInterestsArray=_useState6[1];// const [activityInterestsArray, setActivityInterestsArray] = useState(Array.from({length: 25}, () => []));\nvar _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),selectedInterests=_useState8[0],setSelectedInterests=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),showProfileArea=_useState10[0],setShowProfileArea=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),leadsArray=_useState12[0],setLeadsArray=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),memberUrnIdArray=_useState14[0],setMemberUrnIdArray=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),showCreateConnectNoteButton=_useState16[0],setShowCreateConnectNoteButton=_useState16[1];var _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),connectNoteArray=_useState18[0],setConnectNoteArray=_useState18[1];var handleGettingLeads=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data,_leadsArray,_memberUrnIdArray;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;setIsLoading(true);_context.next=4;return fetch(\"https://sak-productivity-suite.herokuapp.com/get-leads\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({sessionId:sessionId})});case 4:response=_context.sent;_context.next=7;return response.json();case 7:data=_context.sent;_leadsArray=data.lead_list;// console.log(\"Successfully gotten leads: \", data);\n_memberUrnIdArray=data.member_urn_id_list;setLeadsArray(_leadsArray);setMemberUrnIdArray(_memberUrnIdArray);setShowCreateConnectNoteButton(true);_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 18:_context.prev=18;setIsLoading(false);return _context.finish(18);case 21:case\"end\":return _context.stop();}},_callee,null,[[0,15,18,21]]);}));return function handleGettingLeads(){return _ref.apply(this,arguments);};}();// This button goes through the lead list and creates a Connect note for them\nvar handleAutoCreatingNotes=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(sessionId,memberUrnId){var response,jobId;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;setIsLoading(true);_context2.next=4;return fetch(\"https://sak-productivity-suite.herokuapp.com/get-lead-info\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({sessionId:sessionId,leadsArray:leadsArray,memberUrnIdArray:memberUrnIdArray})});case 4:response=_context2.sent;_context2.next=7;return response.json();case 7:jobId=_context2.sent;CheckJobStatus(jobId.message,function(resultArray){setConnectNoteArray(resultArray);setShowProfileArea(true);console.log(\"Successfully gotten Connect note array: \",resultArray);});_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 14:_context2.prev=14;setIsLoading(false);return _context2.finish(14);case 17:case\"end\":return _context2.stop();}},_callee2,null,[[0,11,14,17]]);}));return function handleAutoCreatingNotes(_x,_x2){return _ref2.apply(this,arguments);};}();var handleGettingPeopleInterests=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(sessionId,profileUrnStr,index){var startIndex,endIndex,profileUrn,response,data,jobId;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:startIndex=profileUrnStr.indexOf(\"(\")+1;endIndex=profileUrnStr.indexOf(\",\");profileUrn=profileUrnStr.substring(startIndex,endIndex);_context3.prev=3;setIsLoading(true);_context3.next=7;return fetch(\"https://sak-productivity-suite.herokuapp.com/get-people-interests\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({sessionId:sessionId,profileUrn:profileUrn})});case 7:response=_context3.sent;_context3.next=10;return response.json();case 10:data=_context3.sent;jobId=data.message;CheckJobStatus(jobId,function(resultArray){var newArray=_toConsumableArray(peopleInterestsArray);for(var i=0;i<resultArray.length;i++){newArray[index].push(resultArray[i]);}setPeopleInterestsArray(newArray);});_context3.next=18;break;case 15:_context3.prev=15;_context3.t0=_context3[\"catch\"](3);console.error(_context3.t0);case 18:_context3.prev=18;setIsLoading(false);return _context3.finish(18);case 21:case\"end\":return _context3.stop();}},_callee3,null,[[3,15,18,21]]);}));return function handleGettingPeopleInterests(_x3,_x4,_x5){return _ref3.apply(this,arguments);};}();var handleGettingCompanyInterests=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(sessionId,profileUrnStr,index){var startIndex,endIndex,profileUrn,response,data,jobId;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:startIndex=profileUrnStr.indexOf(\"(\")+1;endIndex=profileUrnStr.indexOf(\",\");profileUrn=profileUrnStr.substring(startIndex,endIndex);_context4.prev=3;setIsLoading(true);_context4.next=7;return fetch(\"https://sak-productivity-suite.herokuapp.com/get-company-interests\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({sessionId:sessionId,profileUrn:profileUrn})});case 7:response=_context4.sent;_context4.next=10;return response.json();case 10:data=_context4.sent;jobId=data.message;CheckJobStatus(jobId,function(resultArray){var newArray=_toConsumableArray(companyInterestsArray);for(var i=0;i<resultArray.length;i++){newArray[index].push(resultArray[i]);}setCompanyInterestsArray(newArray);});_context4.next=18;break;case 15:_context4.prev=15;_context4.t0=_context4[\"catch\"](3);console.error(_context4.t0);case 18:_context4.prev=18;setIsLoading(false);return _context4.finish(18);case 21:case\"end\":return _context4.stop();}},_callee4,null,[[3,15,18,21]]);}));return function handleGettingCompanyInterests(_x6,_x7,_x8){return _ref4.apply(this,arguments);};}();// TODO\n// const handleGettingActivityInterests = () => { };\n// TODO: Gets all of the selected interests, not just the current lead's\nvar handleInterestsSelection=function handleInterestsSelection(event){var selections=event.target.options;var updatedInterestsArray=[];for(var i=0;i<selections.length;i++){if(selections[i].selected){updatedInterestsArray.push(selections[i].value);}}setSelectedInterests(updatedInterestsArray);};// ================ Create and Send Connect Note(s) ===============================\nvar handleMakingConnectNote=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(fullName,index){var prompt,response,data,jobId;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:prompt=\"This is the profile of a person: \"+fullName+\" These are their interests: \"+selectedInterests+\" Use the internet to get something useful about the interests and use it in the request. \"+\" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. Use only 300 characters.\";_context5.prev=1;setIsLoading(true);_context5.next=5;return fetch(\"https://sak-productivity-suite.herokuapp.com/use-bingai\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({prompt:prompt})});case 5:response=_context5.sent;_context5.next=8;return response.json();case 8:data=_context5.sent;jobId=data.message;CheckJobStatus(jobId,function(resultArray){var newArray=_toConsumableArray(connectNoteArray);newArray[index]=resultArray;setConnectNoteArray(newArray);});_context5.next=16;break;case 13:_context5.prev=13;_context5.t0=_context5[\"catch\"](1);console.log(_context5.t0);case 16:_context5.prev=16;setIsLoading(false);return _context5.finish(16);case 19:case\"end\":return _context5.stop();}},_callee5,null,[[1,13,16,19]]);}));return function handleMakingConnectNote(_x9,_x10){return _ref5.apply(this,arguments);};}();var handleSendingConnectNote=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(sessionId,profileId,index){var response,data;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:_context6.prev=0;setIsLoading(true);_context6.next=4;return fetch(\"https://sak-productivity-suite.herokuapp.com/send-connect\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({sessionId:sessionId,profileId:profileId,text:connectNoteArray[index]})});case 4:response=_context6.sent;_context6.next=7;return response.json();case 7:data=_context6.sent;console.log(\"Successfully sent the connect note to the person\",data.message);_context6.next=14;break;case 11:_context6.prev=11;_context6.t0=_context6[\"catch\"](0);console.log(_context6.t0);case 14:_context6.prev=14;setIsLoading(false);return _context6.finish(14);case 17:case\"end\":return _context6.stop();}},_callee6,null,[[0,11,14,17]]);}));return function handleSendingConnectNote(_x11,_x12,_x13){return _ref6.apply(this,arguments);};}();// ================ Create and Send Connect Note(s) ===============================\nvar handleNoteTextAreaChange=function handleNoteTextAreaChange(event,index){var updatedConnectNoteArray=_toConsumableArray(connectNoteArray);updatedConnectNoteArray[index]=event.target.value;setConnectNoteArray(updatedConnectNoteArray);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"button\",onClick:handleGettingLeads,children:isLoading?'Getting Leads...':'Get Leads'}),showCreateConnectNoteButton&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"button\",onClick:function onClick(){return handleAutoCreatingNotes(sessionId,leadsArray[0][4]);},children:isLoading?'Creating Notes...':'Auto Create notes for all leads'}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Sales Navigator List:\"}),/*#__PURE__*/_jsx(ListGroup,{children:leadsArray.map(function(leadInfo,index){return/*#__PURE__*/_jsxs(ListGroup.Item,{onClick:function onClick(){setShowProfileArea(true);},children:[leadInfo[0],\", \",leadInfo[1],showProfileArea&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Form.Group,{children:/*#__PURE__*/_jsx(Form.Control,{as:\"textarea\",value:connectNoteArray[index],onChange:function onChange(event){handleNoteTextAreaChange(event,index);}})}),/*#__PURE__*/_jsxs(ButtonGroup,{\"aria-label\":\"Basic example\",className:\"mb-2\",children:[/*#__PURE__*/_jsx(Button,{onClick:function onClick(){handleGettingPeopleInterests(sessionId,leadInfo[4],index);},children:isLoading?'Loading...':'Get people interests'}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){handleGettingCompanyInterests(sessionId,leadInfo[4],index);},children:isLoading?'Loading...':'Get company interests'}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){handleMakingConnectNote(leadInfo[0],index);},children:isLoading?'Making note...':'Make Connect Note'}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){handleSendingConnectNote(sessionId,leadInfo[4],index);},children:isLoading?'Sending note...':'Send Connect Note'})]}),peopleInterestsArray[index].length>0&&/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(Form.Control,{as:\"select\",multiple:true,onChange:handleInterestsSelection,children:peopleInterestsArray[index].map(function(interest){return/*#__PURE__*/_jsx(\"option\",{children:interest[0]},interest);})})}),companyInterestsArray[index].length>0&&/*#__PURE__*/_jsx(ListGroup.Item,{children:/*#__PURE__*/_jsx(Form.Control,{as:\"select\",multiple:true,onChange:handleInterestsSelection,children:companyInterestsArray[index].map(function(interest){return/*#__PURE__*/_jsx(\"option\",{children:interest[0]},interest);})})})]})]});})})]})]});}export default Home;","map":{"version":3,"names":["React","useState","useEffect","CheckJobStatus","Button","ButtonGroup","ListGroup","Container","Form","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Home","props","sessionId","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","Array","from","length","_useState4","peopleInterestsArray","setPeopleInterestsArray","_useState5","_useState6","companyInterestsArray","setCompanyInterestsArray","_useState7","_useState8","selectedInterests","setSelectedInterests","_useState9","_useState10","showProfileArea","setShowProfileArea","_useState11","_useState12","leadsArray","setLeadsArray","_useState13","_useState14","memberUrnIdArray","setMemberUrnIdArray","_useState15","_useState16","showCreateConnectNoteButton","setShowCreateConnectNoteButton","_useState17","_useState18","connectNoteArray","setConnectNoteArray","handleGettingLeads","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","_leadsArray","_memberUrnIdArray","wrap","_callee$","_context","prev","next","fetch","method","headers","body","JSON","stringify","sent","json","lead_list","member_urn_id_list","t0","console","log","finish","stop","apply","arguments","handleAutoCreatingNotes","_ref2","_callee2","memberUrnId","jobId","_callee2$","_context2","message","resultArray","_x","_x2","handleGettingPeopleInterests","_ref3","_callee3","profileUrnStr","index","startIndex","endIndex","profileUrn","_callee3$","_context3","indexOf","substring","newArray","_toConsumableArray","i","push","error","_x3","_x4","_x5","handleGettingCompanyInterests","_ref4","_callee4","_callee4$","_context4","_x6","_x7","_x8","handleInterestsSelection","event","selections","target","options","updatedInterestsArray","selected","value","handleMakingConnectNote","_ref5","_callee5","fullName","prompt","_callee5$","_context5","_x9","_x10","handleSendingConnectNote","_ref6","_callee6","profileId","_callee6$","_context6","text","_x11","_x12","_x13","handleNoteTextAreaChange","updatedConnectNoteArray","children","variant","type","onClick","map","leadInfo","Item","Group","Control","as","onChange","className","multiple","interest"],"sources":["C:/Users/farha/OneDrive/Documents/sak-productivity-suite/client/src/Home.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {CheckJobStatus} from \"./CheckJobStatus.js\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { ButtonGroup, ListGroup } from 'react-bootstrap';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nfunction Home(props) {\r\n\tconst {sessionId} = props;\r\n\t// console.log(\"Home sessionId: \", sessionId);\r\n\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\t\t\r\n\tconst [peopleInterestsArray, setPeopleInterestsArray] = useState(Array.from({length: 25}, () => []));\r\n\tconst [companyInterestsArray, setCompanyInterestsArray] = useState(Array.from({length: 25}, () => []));\r\n\t// const [activityInterestsArray, setActivityInterestsArray] = useState(Array.from({length: 25}, () => []));\r\n\tconst [selectedInterests, setSelectedInterests] = useState(\"\");\r\n\r\n\tconst [showProfileArea, setShowProfileArea] = useState(false);\r\n\r\n\tconst [leadsArray, setLeadsArray] = useState([]);\r\n\tconst [memberUrnIdArray, setMemberUrnIdArray] = useState([]);\r\n\r\n\tconst [showCreateConnectNoteButton, setShowCreateConnectNoteButton] = useState(false);\r\n\tconst [connectNoteArray, setConnectNoteArray] = useState([]);\r\n\t\t\r\n\tconst handleGettingLeads = async() => {\r\n        try {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-leads\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tsessionId: sessionId\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst leadsArray = data.lead_list;\r\n\t\t\t// console.log(\"Successfully gotten leads: \", data);\r\n\t\t\tconst memberUrnIdArray = data.member_urn_id_list; \r\n\t\t\tsetLeadsArray(leadsArray);\r\n\t\t\tsetMemberUrnIdArray(memberUrnIdArray);\r\n\t\t\tsetShowCreateConnectNoteButton(true);\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\t// This button goes through the lead list and creates a Connect note for them\r\n\tconst handleAutoCreatingNotes = async(sessionId, memberUrnId) => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-lead-info\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tsessionId: sessionId,\r\n\t\t\t\t\tleadsArray: leadsArray,\r\n\t\t\t\t\tmemberUrnIdArray: memberUrnIdArray\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\tconst jobId = await response.json();\r\n\t\t\tCheckJobStatus(jobId.message, (resultArray) => {\r\n\t\t\t\tsetConnectNoteArray(resultArray);\r\n\t\t\t\tsetShowProfileArea(true);\r\n\t\t\t\tconsole.log(\"Successfully gotten Connect note array: \", resultArray);\r\n\t\t\t});\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleGettingPeopleInterests = async (sessionId, profileUrnStr, index) => {\r\n\t\tconst startIndex = profileUrnStr.indexOf(\"(\") + 1;\r\n\t\tconst endIndex = profileUrnStr.indexOf(\",\");\r\n\t\tconst profileUrn = profileUrnStr.substring(startIndex, endIndex);\r\n\t\ttry {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-people-interests\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tsessionId: sessionId,\r\n\t\t\t\t\tprofileUrn: profileUrn\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\tconst data = await response.json();\t\t\t\r\n\t\t\tconst jobId = data.message;\r\n\r\n\t\t\tCheckJobStatus(jobId, (resultArray) => {\r\n\t\t\t\tconst newArray = [...peopleInterestsArray];\r\n\t\t\t\tfor (let i = 0; i < resultArray.length; i++){\r\n\t\t\t\t\tnewArray[index].push(resultArray[i]);\r\n\t\t\t\t}\r\n\t\t\t\tsetPeopleInterestsArray(newArray);\r\n\t\t\t});\r\n\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst handleGettingCompanyInterests = async (sessionId, profileUrnStr, index) => {\r\n\t\tconst startIndex = profileUrnStr.indexOf(\"(\") + 1;\r\n\t\tconst endIndex = profileUrnStr.indexOf(\",\");\r\n\t\tconst profileUrn = profileUrnStr.substring(startIndex, endIndex);\r\n\t\ttry {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/get-company-interests\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tsessionId: sessionId,\r\n\t\t\t\t\tprofileUrn: profileUrn\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst jobId = data.message;\r\n\t\t\t\r\n\t\t\tCheckJobStatus(jobId, (resultArray) => {\r\n\t\t\t\tconst newArray = [...companyInterestsArray];\r\n\t\t\t\tfor (let i = 0; i < resultArray.length; i++){\r\n\t\t\t\t\tnewArray[index].push(resultArray[i]);\r\n\t\t\t\t}\r\n\t\t\t\tsetCompanyInterestsArray(newArray);\t\r\n\t\t\t});\r\n\t\t\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t};\r\n\t\r\n\t// TODO\r\n\t// const handleGettingActivityInterests = () => { };\r\n\t\t\t\r\n\t// TODO: Gets all of the selected interests, not just the current lead's\r\n\tconst handleInterestsSelection = (event) => {\r\n\t\tvar selections = event.target.options;\r\n\t\tconst updatedInterestsArray = [];\r\n\t\tfor (var i = 0; i < selections.length; i++){\r\n\t\t\tif(selections[i].selected){\r\n\t\t\t\tupdatedInterestsArray.push(selections[i].value);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetSelectedInterests(updatedInterestsArray);\r\n\t}\r\n\r\n\t// ================ Create and Send Connect Note(s) ===============================\r\n\tconst handleMakingConnectNote = async (fullName, index) => {\r\n\t\tconst prompt = \"This is the profile of a person: \" + fullName\r\n\t\t+ \" These are their interests: \" + selectedInterests\r\n\t\t+ \" Use the internet to get something useful about the interests and use it in the request. \"\r\n\t\t+ \" Write a request to connect with them. Make it casual but eyecatching. The goal is to ask about their current Salesforce implementation. Use only 300 characters.\";\r\n\t\ttry {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/use-bingai\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tprompt: prompt\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst jobId = data.message;\r\n\r\n\t\t\tCheckJobStatus(jobId, (resultArray) => {\r\n\t\t\t\tconst newArray = [...connectNoteArray];\r\n\t\t\t\tnewArray[index] = resultArray;\r\n\t\t\t\tsetConnectNoteArray(newArray);\t\r\n\t\t\t});\r\n\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t}finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSendingConnectNote = async (sessionId, profileId, index) => {\r\n\t\ttry {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst response = await fetch(\"https://sak-productivity-suite.herokuapp.com/send-connect\", {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\tsessionId: sessionId,\r\n\t\t\t\t\tprofileId: profileId,\r\n\t\t\t\t\ttext: connectNoteArray[index]\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconsole.log(\"Successfully sent the connect note to the person\", data.message);\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error);\r\n\t\t} finally {\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t};\r\n\t// ================ Create and Send Connect Note(s) ===============================\r\n\r\n\tconst handleNoteTextAreaChange = (event, index) => {\r\n\t\tconst updatedConnectNoteArray = [...connectNoteArray];\r\n\t\tupdatedConnectNoteArray[index] = event.target.value;\r\n\t\tsetConnectNoteArray(updatedConnectNoteArray);\r\n\t};\t  \r\n\r\n\treturn (\r\n\t\t<>\r\n            <Button variant=\"primary\" type=\"button\" onClick={handleGettingLeads}>\r\n\t\t\t\t{isLoading ? 'Getting Leads...' : 'Get Leads'}\r\n            </Button>\r\n\r\n\t\t\t{showCreateConnectNoteButton && <Button variant=\"primary\" type=\"button\" onClick={() => handleAutoCreatingNotes(sessionId, leadsArray[0][4])}>\r\n\t\t\t\t{isLoading ? 'Creating Notes...' : 'Auto Create notes for all leads'}\r\n            </Button>}\r\n\r\n\t\t\t<Container>\r\n\t\t\t\t<h1>Sales Navigator List:</h1>\r\n\t\t\t\t<ListGroup>\r\n\t\t\t\t\t{leadsArray.map((leadInfo, index) => (\r\n\t\t\t\t\t\t<ListGroup.Item\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetShowProfileArea(true);\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t{leadInfo[0]}, {leadInfo[1]}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{showProfileArea && (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={connectNoteArray[index]} \r\n\t\t\t\t\t\t\t\t\t\t\tonChange={ (event) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\thandleNoteTextAreaChange(event, index)\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<ButtonGroup aria-label=\"Basic example\" className=\"mb-2\">\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={ () => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleGettingPeopleInterests(sessionId, leadInfo[4], index)\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{isLoading ? 'Loading...' : 'Get people interests'}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={ () => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleGettingCompanyInterests(sessionId, leadInfo[4], index)\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{isLoading ? 'Loading...' : 'Get company interests'}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={ () => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleMakingConnectNote(leadInfo[0], index)\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{isLoading ? 'Making note...' : 'Make Connect Note'}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={ () => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleSendingConnectNote(sessionId, leadInfo[4], index)\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{isLoading ? 'Sending note...' : 'Send Connect Note'}\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</ButtonGroup>\r\n\r\n\t\t\t\t\t\t\t\t\t{peopleInterestsArray[index].length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleInterestsSelection}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{peopleInterestsArray[index].map((interest) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={interest}>{interest[0]}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t{companyInterestsArray[index].length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleInterestsSelection}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{companyInterestsArray[index].map((interest) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={interest}>{interest[0]}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t{/* {activityInterestsArray.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t<ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\tas=\"select\"\r\n\t\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleInterestsSelection}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{activityInterestsArray.map((interest) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={interest}>{interest[0]}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t\t\t\t\t)} */}\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ListGroup>\r\n\t\t\t</Container>\r\n\t\t</>\r\n\t)\r\n}\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}